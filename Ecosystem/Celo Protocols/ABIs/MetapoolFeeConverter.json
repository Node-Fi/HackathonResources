{
  "abi": [
    {
      "inputs": [],
      "name": "convertFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeDistributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        }
      ],
      "name": "setFeeDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/FeeConverter.sol",
    "2": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "3": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/FeeConverter.sol",
    "exportedSymbols": {
      "Address": [6440],
      "FeeConverter": [2337],
      "IERC20": [5868],
      "IMultiFeeDistribution": [2200],
      "IPancakeRouter": [2218],
      "IStableSwap": [2192],
      "MetapoolFeeConverter": [2474],
      "PancakeFeeConverter": [2659],
      "SafeERC20": [6081],
      "SafeMath": [5790]
    },
    "id": 2660,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2157,
        "literals": ["solidity", "0.7", ".6"],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2158,
        "nodeType": "ImportDirective",
        "scope": 2660,
        "sourceUnit": 5869,
        "src": "24:56:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2159,
        "nodeType": "ImportDirective",
        "scope": 2660,
        "sourceUnit": 6082,
        "src": "81:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2192,
        "linearizedBaseContracts": [2192],
        "name": "IStableSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "3df02124",
            "id": 2170,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "188:8:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2163,
                  "mutability": "mutable",
                  "name": "j",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "198:8:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 2162,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "dx",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "208:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2167,
                  "mutability": "mutable",
                  "name": "min_dy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "217:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "187:42:10"
            },
            "returnParameters": {
              "id": 2169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:10"
            },
            "scope": 2192,
            "src": "170:69:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "c6610657",
            "id": 2177,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "coins",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2172,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 2177,
                  "src": "259:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:8:10"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2177,
                  "src": "285:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "285:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "284:8:10"
            },
            "scope": 2192,
            "src": "244:49:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5d6362bb",
            "id": 2182,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "base_pool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:10"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2180,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2182,
                  "src": "337:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStableSwap_$2192",
                    "typeString": "contract IStableSwap"
                  },
                  "typeName": {
                    "id": 2179,
                    "name": "IStableSwap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2192,
                    "src": "337:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStableSwap_$2192",
                      "typeString": "contract IStableSwap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:13:10"
            },
            "scope": 2192,
            "src": "298:52:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "1a4d01d2",
            "id": 2191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remove_liquidity_one_coin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2184,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "390:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2186,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "406:8:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 2185,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "min_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "416:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "389:46:10"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:10"
            },
            "scope": 2192,
            "src": "355:90:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2660,
        "src": "142:305:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2200,
        "linearizedBaseContracts": [2200],
        "name": "IMultiFeeDistribution",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "b66503cf",
            "id": 2199,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "notifyRewardAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "rewardsToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "515:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "515:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "536:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:37:10"
            },
            "returnParameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:10"
            },
            "scope": 2200,
            "src": "487:74:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2660,
        "src": "449:114:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2218,
        "linearizedBaseContracts": [2218],
        "name": "IPancakeRouter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "38ed1739",
            "id": 2217,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "639:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "662:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "689:22:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2205,
                      "name": "IERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5868,
                      "src": "689:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2206,
                    "nodeType": "ArrayTypeName",
                    "src": "689:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "721:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2211,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "741:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:131:10"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "779:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2213,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "779:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2214,
                    "nodeType": "ArrayTypeName",
                    "src": "779:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:23:10"
            },
            "scope": 2218,
            "src": "596:206:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2660,
        "src": "565:239:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2337,
        "linearizedBaseContracts": [2337],
        "name": "FeeConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2221,
            "libraryName": {
              "id": 2219,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6081,
              "src": "841:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6081",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "835:27:10",
            "typeName": {
              "id": 2220,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5868,
              "src": "855:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5868",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "0d43e8ad",
            "id": 2223,
            "mutability": "mutable",
            "name": "feeDistributor",
            "nodeType": "VariableDeclaration",
            "scope": 2337,
            "src": "868:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2222,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "868:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2241,
              "nodeType": "Block",
              "src": "961:93:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2229,
                          "name": "feeDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2223,
                          "src": "980:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1006:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "998:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2230,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "998:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "980:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "971:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "971:38:10"
                },
                {
                  "expression": {
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2237,
                      "name": "feeDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "1019:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2238,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "1036:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1019:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:28:10"
                }
              ]
            },
            "functionSelector": "ccfc2e8d",
            "id": 2242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeDistributor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "distributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2242,
                  "src": "931:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:21:10"
            },
            "returnParameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:0:10"
            },
            "scope": 2337,
            "src": "904:150:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "1106:321:10",
              "statements": [
                {
                  "assignments": [2250],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2250,
                      "mutability": "mutable",
                      "name": "inputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "1116:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2249,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "1116:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2258,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2256,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2244,
                        "src": "1165:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1147:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1147:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2251,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "1135:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1135:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "1135:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:51:10"
                },
                {
                  "assignments": [2260],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2260,
                      "mutability": "mutable",
                      "name": "outputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "1177:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2259,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "1177:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2266,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2246,
                        "src": "1227:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2262,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1209:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1209:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2261,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "1197:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "1197:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1197:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1177:52:10"
                },
                {
                  "assignments": [2270],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2270,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "1240:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1240:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2278,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2275,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1286:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeConverter_$2337",
                              "typeString": "contract FeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FeeConverter_$2337",
                              "typeString": "contract FeeConverter"
                            }
                          ],
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1278:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1278:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1278:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2271,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2250,
                        "src": "1258:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "1258:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1240:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1324:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1324:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2284,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "1336:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2279,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2250,
                        "src": "1302:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "1302:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2294,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "1394:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1387:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int128_$",
                            "typeString": "type(int128)"
                          },
                          "typeName": {
                            "id": 2292,
                            "name": "int128",
                            "nodeType": "ElementaryTypeName",
                            "src": "1387:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:9:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2298,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "1405:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1398:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int128_$",
                            "typeString": "type(int128)"
                          },
                          "typeName": {
                            "id": 2296,
                            "name": "int128",
                            "nodeType": "ElementaryTypeName",
                            "src": "1398:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1398:9:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 2300,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "1409:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2288,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1366:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1366:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2287,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "1354:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2170,
                      "src": "1354:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (int128,int128,uint256,uint256) external"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:66:10"
                }
              ]
            },
            "functionSelector": "2047fcf5",
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "1081:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "j",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "1089:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:16:10"
            },
            "returnParameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:0:10"
            },
            "scope": 2337,
            "src": "1060:367:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2335,
              "nodeType": "Block",
              "src": "1471:196:10",
              "statements": [
                {
                  "assignments": [2311],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2311,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2335,
                      "src": "1481:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1481:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2319,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2316,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1522:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeConverter_$2337",
                              "typeString": "contract FeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FeeConverter_$2337",
                              "typeString": "contract FeeConverter"
                            }
                          ],
                          "id": 2315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1514:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1514:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1514:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2312,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "1499:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "1499:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1481:47:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2323,
                        "name": "feeDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "1555:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2324,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "1571:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2320,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "1538:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "1538:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:41:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2331,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "1646:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2332,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "1652:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2328,
                            "name": "feeDistributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2223,
                            "src": "1611:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2327,
                          "name": "IMultiFeeDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2200,
                          "src": "1589:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMultiFeeDistribution_$2200_$",
                            "typeString": "type(contract IMultiFeeDistribution)"
                          }
                        },
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1589:37:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiFeeDistribution_$2200",
                          "typeString": "contract IMultiFeeDistribution"
                        }
                      },
                      "id": 2330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "notifyRewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2199,
                      "src": "1589:56:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$5868_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 2333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2334,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:71:10"
                }
              ]
            },
            "functionSelector": "5fb9cf20",
            "id": 2336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "coin",
                  "nodeType": "VariableDeclaration",
                  "scope": 2336,
                  "src": "1449:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "1449:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:13:10"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:10"
            },
            "scope": 2337,
            "src": "1433:234:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2660,
        "src": "807:863:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2474,
        "linearizedBaseContracts": [2474],
        "name": "MetapoolFeeConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2340,
            "libraryName": {
              "id": 2338,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6081,
              "src": "1715:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6081",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1709:27:10",
            "typeName": {
              "id": 2339,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5868,
              "src": "1729:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5868",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "0d43e8ad",
            "id": 2342,
            "mutability": "mutable",
            "name": "feeDistributor",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "1742:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1742:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2360,
              "nodeType": "Block",
              "src": "1835:93:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2348,
                          "name": "feeDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "1854:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1880:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1872:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2349,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1872:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1872:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1854:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1845:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:38:10"
                },
                {
                  "expression": {
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2356,
                      "name": "feeDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "1893:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2357,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "1910:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1893:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:28:10"
                }
              ]
            },
            "functionSelector": "ccfc2e8d",
            "id": 2361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeDistributor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "distributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "1805:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1804:21:10"
            },
            "returnParameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1835:0:10"
            },
            "scope": 2474,
            "src": "1778:150:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2472,
              "nodeType": "Block",
              "src": "1966:724:10",
              "statements": [
                {
                  "assignments": [2365],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2365,
                      "mutability": "mutable",
                      "name": "inputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2472,
                      "src": "1976:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2364,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "1976:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2373,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2367,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2007:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2007:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2366,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "1995:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1995:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "1995:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1976:51:10"
                },
                {
                  "assignments": [2375],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2375,
                      "mutability": "mutable",
                      "name": "outputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2472,
                      "src": "2037:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2374,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "2037:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2383,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2087:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2377,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2069:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2069:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2376,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "2057:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2057:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "2057:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2057:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2037:52:10"
                },
                {
                  "assignments": [2385],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2472,
                      "src": "2100:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2100:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2393,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2390,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2146:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                              "typeString": "contract MetapoolFeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                              "typeString": "contract MetapoolFeeConverter"
                            }
                          ],
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2138:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2138:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2138:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2386,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "2118:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "2118:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2118:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2100:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2184:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2184:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2399,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "2196:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2394,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "2162:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "2162:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2401,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2247:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 2409,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "2253:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2262:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2403,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2226:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2226:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2402,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "2214:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2214:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2170,
                      "src": "2214:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (int128,int128,uint256,uint256) external"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:50:10"
                },
                {
                  "expression": {
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2413,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2385,
                      "src": "2274:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2418,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2313:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                                "typeString": "contract MetapoolFeeConverter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                                "typeString": "contract MetapoolFeeConverter"
                              }
                            ],
                            "id": 2417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2305:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2416,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2305:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2305:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2414,
                          "name": "outputCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2375,
                          "src": "2284:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5868",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5807,
                        "src": "2284:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2284:35:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2274:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2422,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:45:10"
                },
                {
                  "assignments": [2424],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2424,
                      "mutability": "mutable",
                      "name": "basePool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2472,
                      "src": "2330:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStableSwap_$2192",
                        "typeString": "contract IStableSwap"
                      },
                      "typeName": {
                        "id": 2423,
                        "name": "IStableSwap",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2192,
                        "src": "2330:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2431,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2365:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2365:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2425,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "2353:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2353:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "base_pool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2182,
                      "src": "2353:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_IStableSwap_$2192_$",
                        "typeString": "function () external returns (contract IStableSwap)"
                      }
                    },
                    "id": 2430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStableSwap_$2192",
                      "typeString": "contract IStableSwap"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2330:58:10"
                },
                {
                  "expression": {
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2432,
                      "name": "outputCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "2398:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2426:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 2433,
                          "name": "basePool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2424,
                          "src": "2411:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableSwap_$2192",
                            "typeString": "contract IStableSwap"
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "coins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2177,
                        "src": "2411:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                          "typeString": "function (uint256) external returns (contract IERC20)"
                        }
                      },
                      "id": 2436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2411:17:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2398:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2442,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "2474:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2483:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2486:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2439,
                        "name": "basePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "2439:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove_liquidity_one_coin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2191,
                      "src": "2439:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int128_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,int128,uint256) external"
                      }
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2446,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:49:10"
                },
                {
                  "expression": {
                    "id": 2455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2447,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2385,
                      "src": "2498:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2452,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2537:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                                "typeString": "contract MetapoolFeeConverter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetapoolFeeConverter_$2474",
                                "typeString": "contract MetapoolFeeConverter"
                              }
                            ],
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2529:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2450,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2529:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2529:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2448,
                          "name": "outputCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2375,
                          "src": "2508:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5868",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5807,
                        "src": "2508:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2508:35:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2498:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2456,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2460,
                        "name": "feeDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2572:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "2588:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2457,
                        "name": "outputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "2553:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5837,
                      "src": "2553:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2463,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2468,
                        "name": "outputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "2663:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2469,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "2675:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2465,
                            "name": "feeDistributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "2628:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2464,
                          "name": "IMultiFeeDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2200,
                          "src": "2606:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMultiFeeDistribution_$2200_$",
                            "typeString": "type(contract IMultiFeeDistribution)"
                          }
                        },
                        "id": 2466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:37:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiFeeDistribution_$2200",
                          "typeString": "contract IMultiFeeDistribution"
                        }
                      },
                      "id": 2467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "notifyRewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2199,
                      "src": "2606:56:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$5868_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:77:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:77:10"
                }
              ]
            },
            "functionSelector": "2b5335c3",
            "id": 2473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1954:2:10"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:0:10"
            },
            "scope": 2474,
            "src": "1934:756:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2660,
        "src": "1673:1020:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2659,
        "linearizedBaseContracts": [2659],
        "name": "PancakeFeeConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2477,
            "libraryName": {
              "id": 2475,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6081,
              "src": "2738:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6081",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2732:27:10",
            "typeName": {
              "id": 2476,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5868,
              "src": "2752:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5868",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "0d43e8ad",
            "id": 2479,
            "mutability": "mutable",
            "name": "feeDistributor",
            "nodeType": "VariableDeclaration",
            "scope": 2659,
            "src": "2765:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2478,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2765:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f887ea40",
            "id": 2482,
            "mutability": "constant",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "scope": 2659,
            "src": "2800:75:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2480,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2800:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830356646324230444236393435384130373530626164656263346639653133614464363038433746",
              "id": 2481,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2833:42:10",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2495,
            "mutability": "mutable",
            "name": "routerPath",
            "nodeType": "VariableDeclaration",
            "scope": 2659,
            "src": "2882:185:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 2483,
                "name": "IERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5868,
                "src": "2882:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$5868",
                  "typeString": "contract IERC20"
                }
              },
              "id": 2484,
              "nodeType": "ArrayTypeName",
              "src": "2882:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "value": {
              "components": [
                {
                  "arguments": [
                    {
                      "hexValue": "30",
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2921:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      }
                    ],
                    "id": 2485,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5868,
                    "src": "2914:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC20_$5868_$",
                      "typeString": "type(contract IERC20)"
                    }
                  },
                  "id": 2487,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2914:9:10",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2940:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2488,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5868,
                    "src": "2933:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC20_$5868_$",
                      "typeString": "type(contract IERC20)"
                    }
                  },
                  "id": 2490,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2933:50:10",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "307865396537434541334465646341353938343738304261666335393962443639414464303837443536",
                      "id": 2492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3008:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2491,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5868,
                    "src": "3001:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC20_$5868_$",
                      "typeString": "type(contract IERC20)"
                    }
                  },
                  "id": 2493,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3001:50:10",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "id": 2494,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "2904:163:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$3_memory_ptr",
                "typeString": "contract IERC20[3] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "3131:93:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2501,
                          "name": "feeDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "3150:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3176:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3168:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3168:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3168:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3150:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3141:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2508,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:38:10"
                },
                {
                  "expression": {
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2509,
                      "name": "feeDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "3189:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2510,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2497,
                      "src": "3206:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3189:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2512,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:28:10"
                }
              ]
            },
            "functionSelector": "ccfc2e8d",
            "id": 2514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeDistributor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "distributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2514,
                  "src": "3101:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3100:21:10"
            },
            "returnParameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3131:0:10"
            },
            "scope": 2659,
            "src": "3074:150:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2576,
              "nodeType": "Block",
              "src": "3276:321:10",
              "statements": [
                {
                  "assignments": [2522],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2522,
                      "mutability": "mutable",
                      "name": "inputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2576,
                      "src": "3286:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2521,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "3286:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2528,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "3335:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2524,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3317:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3317:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2523,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "3305:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3305:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "3305:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3305:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3286:51:10"
                },
                {
                  "assignments": [2532],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2532,
                      "mutability": "mutable",
                      "name": "outputCoin",
                      "nodeType": "VariableDeclaration",
                      "scope": 2576,
                      "src": "3347:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2531,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5868,
                        "src": "3347:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2538,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2518,
                        "src": "3397:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2534,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3379:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3379:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2533,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "3367:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3367:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "3367:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (uint256) external returns (contract IERC20)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3367:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3347:52:10"
                },
                {
                  "assignments": [2542],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2542,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2576,
                      "src": "3410:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3410:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2550,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2547,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3456:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          ],
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3448:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3448:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3448:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2543,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2522,
                        "src": "3428:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "3428:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3410:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2554,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3494:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3494:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2556,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "3506:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2551,
                        "name": "inputCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2522,
                        "src": "3472:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "3472:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2558,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2566,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "3564:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3557:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int128_$",
                            "typeString": "type(int128)"
                          },
                          "typeName": {
                            "id": 2564,
                            "name": "int128",
                            "nodeType": "ElementaryTypeName",
                            "src": "3557:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3557:9:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2570,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2518,
                            "src": "3575:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3568:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int128_$",
                            "typeString": "type(int128)"
                          },
                          "typeName": {
                            "id": 2568,
                            "name": "int128",
                            "nodeType": "ElementaryTypeName",
                            "src": "3568:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3568:9:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 2572,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2542,
                        "src": "3579:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3588:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2560,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3536:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3536:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2559,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2192,
                          "src": "3524:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$2192_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3524:23:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$2192",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2170,
                      "src": "3524:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (int128,int128,uint256,uint256) external"
                      }
                    },
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3524:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2575,
                  "nodeType": "ExpressionStatement",
                  "src": "3524:66:10"
                }
              ]
            },
            "functionSelector": "2047fcf5",
            "id": 2577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3251:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "j",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3259:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3250:16:10"
            },
            "returnParameters": {
              "id": 2520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3276:0:10"
            },
            "scope": 2659,
            "src": "3230:367:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2657,
              "nodeType": "Block",
              "src": "3639:488:10",
              "statements": [
                {
                  "assignments": [2583],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2583,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2657,
                      "src": "3649:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2582,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3649:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2591,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2588,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3690:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          ],
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3682:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2586,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3682:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3682:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2584,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "3667:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "3667:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3649:47:10"
                },
                {
                  "assignments": [2595],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2595,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 2657,
                      "src": "3706:20:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2593,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5868,
                          "src": "3706:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5868",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2594,
                        "nodeType": "ArrayTypeName",
                        "src": "3706:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2597,
                  "initialValue": {
                    "id": 2596,
                    "name": "routerPath",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2495,
                    "src": "3729:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3706:33:10"
                },
                {
                  "expression": {
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2598,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2595,
                        "src": "3749:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 2600,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3754:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3749:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2601,
                      "name": "coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2579,
                      "src": "3759:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3749:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:14:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2607,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "3791:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2608,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "3799:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2604,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "3774:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "3774:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3774:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2610,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:33:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2615,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "3865:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3874:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2617,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2595,
                        "src": "3877:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2620,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3891:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                              "typeString": "contract PancakeFeeConverter"
                            }
                          ],
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3883:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3883:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2622,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3898:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3898:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2612,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2482,
                            "src": "3832:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2611,
                          "name": "IPancakeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2218,
                          "src": "3817:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakeRouter_$2218_$",
                            "typeString": "type(contract IPancakeRouter)"
                          }
                        },
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3817:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeRouter_$2218",
                          "typeString": "contract IPancakeRouter"
                        }
                      },
                      "id": 2614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2217,
                      "src": "3817:47:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,contract IERC20[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:97:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2625,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:97:10"
                },
                {
                  "expression": {
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2626,
                      "name": "coin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2579,
                      "src": "3925:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2627,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2595,
                        "src": "3932:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5868_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 2629,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3937:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3932:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5868",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3925:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "3925:14:10"
                },
                {
                  "expression": {
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2632,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2583,
                      "src": "3949:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2637,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3982:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                                "typeString": "contract PancakeFeeConverter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PancakeFeeConverter_$2659",
                                "typeString": "contract PancakeFeeConverter"
                              }
                            ],
                            "id": 2636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3974:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2635,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3974:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3974:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2633,
                          "name": "coin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2579,
                          "src": "3959:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5868",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5807,
                        "src": "3959:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3959:29:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3949:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2641,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2645,
                        "name": "feeDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2479,
                        "src": "4015:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2646,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "4031:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2642,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "3998:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5970,
                      "src": "3998:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2648,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:41:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2653,
                        "name": "coin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "4106:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2654,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "4112:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2650,
                            "name": "feeDistributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2479,
                            "src": "4071:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2649,
                          "name": "IMultiFeeDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2200,
                          "src": "4049:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMultiFeeDistribution_$2200_$",
                            "typeString": "type(contract IMultiFeeDistribution)"
                          }
                        },
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4049:37:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiFeeDistribution_$2200",
                          "typeString": "contract IMultiFeeDistribution"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "notifyRewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2199,
                      "src": "4049:56:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$5868_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4049:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:71:10"
                }
              ]
            },
            "functionSelector": "5fb9cf20",
            "id": 2658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2579,
                  "mutability": "mutable",
                  "name": "coin",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "3619:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2578,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "3619:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:13:10"
            },
            "returnParameters": {
              "id": 2581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:0:10"
            },
            "scope": 2659,
            "src": "3603:524:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2660,
        "src": "2697:1432:10"
      }
    ],
    "src": "0:4130:10"
  },
  "bytecode": "608060405234801561001057600080fd5b50610a94806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630d43e8ad146100465780632b5335c31461006a578063ccfc2e8d14610074575b600080fd5b61004e61009a565b604080516001600160a01b039092168252519081900360200190f35b6100726100a9565b005b6100726004803603602081101561008a57600080fd5b50356001600160a01b03166105b9565b6000546001600160a01b031681565b6000336001600160a01b031663c661065760006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b505050506040513d602081101561011c57600080fd5b50516040805163c661065760e01b8152600160048201529051919250600091339163c661065791602480830192602092919082900301818787803b15801561016357600080fd5b505af1158015610177573d6000803e3d6000fd5b505050506040513d602081101561018d57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156101db57600080fd5b505afa1580156101ef573d6000803e3d6000fd5b505050506040513d602081101561020557600080fd5b5051905061021d6001600160a01b03841633836105f1565b60408051630f7c084960e21b815260006004820181905260016024830152604482018490526064820181905291513392633df02124926084808201939182900301818387803b15801561026f57600080fd5b505af1158015610283573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b03861693506370a0823192506024808301926020929190829003018186803b1580156102cd57600080fd5b505afa1580156102e1573d6000803e3d6000fd5b505050506040513d60208110156102f757600080fd5b505160408051635d6362bb60e01b815290519192506000913391635d6362bb91600480830192602092919082900301818787803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b505050506040513d602081101561036157600080fd5b50516040805163c661065760e01b815260006004820181905291519293506001600160a01b0384169263c661065792602480840193602093929083900390910190829087803b1580156103b357600080fd5b505af11580156103c7573d6000803e3d6000fd5b505050506040513d60208110156103dd57600080fd5b505160408051630d2680e960e11b8152600481018590526000602482018190526044820181905291519295506001600160a01b03841692631a4d01d29260648084019391929182900301818387803b15801561043857600080fd5b505af115801561044c573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b03871693506370a0823192506024808301926020929190829003018186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d60208110156104c057600080fd5b5051600080546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290519395509086169263095ea7b392604480840193602093929083900390910190829087803b15801561051d57600080fd5b505af1158015610531573d6000803e3d6000fd5b505050506040513d602081101561054757600080fd5b5050600080546040805163b66503cf60e01b81526001600160a01b038781166004830152602482018790529151919092169263b66503cf926044808201939182900301818387803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b0316156105cf57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b801580610677575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d602081101561067357600080fd5b5051155b6106b25760405162461bcd60e51b8152600401808060200182810382526036815260200180610a296036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610704908490610709565b505050565b600061075e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ba9092919063ffffffff16565b8051909150156107045780806020019051602081101561077d57600080fd5b50516107045760405162461bcd60e51b815260040180806020018281038252602a8152602001806109ff602a913960400191505060405180910390fd5b60606107c984846000856107d3565b90505b9392505050565b6060824710156108145760405162461bcd60e51b81526004018080602001828103825260268152602001806109d96026913960400191505060405180910390fd5b61081d8561092e565b61086e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108ac5780518252601f19909201916020918201910161088d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461090e576040519150601f19603f3d011682016040523d82523d6000602084013e610913565b606091505b5091509150610923828286610934565b979650505050505050565b3b151590565b606083156109435750816107cc565b8251156109535782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561099d578181015183820152602001610985565b50505050905090810190601f1680156109ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a26469706673582212200c0de85e94a87f52a59408cb11483c7f4db4cf3dc86e566d308b5859916e154064736f6c63430007060033",
  "bytecodeSha1": "c2152fe8cb4334ba98dc9d7add5f15c2377f3ee4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "MetapoolFeeConverter",
  "coverageMap": {
    "branches": {
      "10": {
        "MetapoolFeeConverter.setFeeDistributor": {
          "20": [1854, 1882, true]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "25": [3495, 3516, false],
          "26": [3624, 3654, true]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "23": [7234, 7241, false],
          "24": [7375, 7396, false]
        },
        "Address.functionCallWithValue": {
          "21": [4767, 4797, true],
          "22": [4858, 4876, true]
        }
      }
    },
    "statements": {
      "10": {
        "MetapoolFeeConverter.convertFees": {
          "0": [2162, 2204],
          "1": [2214, 2264],
          "2": [2274, 2319],
          "3": [2398, 2428],
          "4": [2439, 2488],
          "5": [2498, 2543],
          "6": [2553, 2596],
          "7": [2606, 2683]
        },
        "MetapoolFeeConverter.setFeeDistributor": {
          "8": [1845, 1883],
          "9": [1893, 1921]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "12": [3616, 3701]
        },
        "SafeERC20.safeApprove": {
          "10": [1704, 1854],
          "11": [1864, 1954]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "18": [7257, 7274],
          "19": [7765, 7785]
        },
        "Address.functionCall": {
          "13": [3708, 3767]
        },
        "Address.functionCallWithValue": {
          "14": [4759, 4840],
          "15": [4850, 4910],
          "16": [5065, 5124]
        },
        "Address.isContract": {
          "17": [1117, 1132]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "IMultiFeeDistribution",
    "IStableSwap",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630d43e8ad146100465780632b5335c31461006a578063ccfc2e8d14610074575b600080fd5b61004e61009a565b604080516001600160a01b039092168252519081900360200190f35b6100726100a9565b005b6100726004803603602081101561008a57600080fd5b50356001600160a01b03166105b9565b6000546001600160a01b031681565b6000336001600160a01b031663c661065760006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b505050506040513d602081101561011c57600080fd5b50516040805163c661065760e01b8152600160048201529051919250600091339163c661065791602480830192602092919082900301818787803b15801561016357600080fd5b505af1158015610177573d6000803e3d6000fd5b505050506040513d602081101561018d57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156101db57600080fd5b505afa1580156101ef573d6000803e3d6000fd5b505050506040513d602081101561020557600080fd5b5051905061021d6001600160a01b03841633836105f1565b60408051630f7c084960e21b815260006004820181905260016024830152604482018490526064820181905291513392633df02124926084808201939182900301818387803b15801561026f57600080fd5b505af1158015610283573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b03861693506370a0823192506024808301926020929190829003018186803b1580156102cd57600080fd5b505afa1580156102e1573d6000803e3d6000fd5b505050506040513d60208110156102f757600080fd5b505160408051635d6362bb60e01b815290519192506000913391635d6362bb91600480830192602092919082900301818787803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b505050506040513d602081101561036157600080fd5b50516040805163c661065760e01b815260006004820181905291519293506001600160a01b0384169263c661065792602480840193602093929083900390910190829087803b1580156103b357600080fd5b505af11580156103c7573d6000803e3d6000fd5b505050506040513d60208110156103dd57600080fd5b505160408051630d2680e960e11b8152600481018590526000602482018190526044820181905291519295506001600160a01b03841692631a4d01d29260648084019391929182900301818387803b15801561043857600080fd5b505af115801561044c573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b03871693506370a0823192506024808301926020929190829003018186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d60208110156104c057600080fd5b5051600080546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905290519395509086169263095ea7b392604480840193602093929083900390910190829087803b15801561051d57600080fd5b505af1158015610531573d6000803e3d6000fd5b505050506040513d602081101561054757600080fd5b5050600080546040805163b66503cf60e01b81526001600160a01b038781166004830152602482018790529151919092169263b66503cf926044808201939182900301818387803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b0316156105cf57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b801580610677575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d602081101561067357600080fd5b5051155b6106b25760405162461bcd60e51b8152600401808060200182810382526036815260200180610a296036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610704908490610709565b505050565b600061075e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ba9092919063ffffffff16565b8051909150156107045780806020019051602081101561077d57600080fd5b50516107045760405162461bcd60e51b815260040180806020018281038252602a8152602001806109ff602a913960400191505060405180910390fd5b60606107c984846000856107d3565b90505b9392505050565b6060824710156108145760405162461bcd60e51b81526004018080602001828103825260268152602001806109d96026913960400191505060405180910390fd5b61081d8561092e565b61086e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108ac5780518252601f19909201916020918201910161088d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461090e576040519150601f19603f3d011682016040523d82523d6000602084013e610913565b606091505b5091509150610923828286610934565b979650505050505050565b3b151590565b606083156109435750816107cc565b8251156109535782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561099d578181015183820152602001610985565b50505050905090810190601f1680156109ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a26469706673582212200c0de85e94a87f52a59408cb11483c7f4db4cf3dc86e566d308b5859916e154064736f6c63430007060033",
  "deployedSourceMap": "1673:1020:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:29;;;:::i;:::-;;;;-1:-1:-1;;;;;1742:29:10;;;;;;;;;;;;;;1934:756;;;:::i;:::-;;1778:150;;;;;;;;;;;;;;;;-1:-1:-1;1778:150:10;-1:-1:-1;;;;;1778:150:10;;:::i;1742:29::-;;;-1:-1:-1;;;;;1742:29:10;;:::o;1934:756::-;1976:16;2007:10;-1:-1:-1;;;;;1995:29:10;;2025:1;1995:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1995:32:10;2057;;;-1:-1:-1;;;2057:32:10;;2087:1;2057:32;;;;;;1995;;-1:-1:-1;2037:17:10;;2069:10;;2057:29;;:32;;;;;1995;;2057;;;;;;;2037:17;2069:10;2057:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2057:32:10;2118:34;;;-1:-1:-1;;;2118:34:10;;2146:4;2118:34;;;;;;2057:32;;-1:-1:-1;2100:15:10;;-1:-1:-1;;;;;2118:19:10;;;;;:34;;;;;2057:32;;2118:34;;;;;;;:19;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2118:34:10;;-1:-1:-1;2162:42:10;-1:-1:-1;;;;;2162:21:10;;2184:10;2118:34;2162:21;:42::i;:::-;2214:50;;;-1:-1:-1;;;2214:50:10;;2247:1;2214:50;;;;;;2250:1;2214:50;;;;;;;;;;;;;;;;;;2226:10;;2214:32;;:50;;;;;;;;;;;2247:1;2226:10;2214:50;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2284:35:10;;;-1:-1:-1;;;2284:35:10;;2313:4;2284:35;;;;;;-1:-1:-1;;;;;2284:20:10;;;-1:-1:-1;2284:20:10;;-1:-1:-1;2284:35:10;;;;;;;;;;;;;;:20;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2284:35:10;2353;;;-1:-1:-1;;;2353:35:10;;;;2284;;-1:-1:-1;2330:20:10;;2365:10;;2353:33;;:35;;;;;2284;;2353;;;;;;;2330:20;2365:10;2353:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2353:35:10;2411:17;;;-1:-1:-1;;;2411:17:10;;2426:1;2411:17;;;;;;;;2353:35;;-1:-1:-1;;;;;;2411:14:10;;;;;:17;;;;;2353:35;;2411:17;;;;;;;;;;;:14;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2411:17:10;2439:49;;;-1:-1:-1;;;2439:49:10;;;;;;;;2483:1;2439:49;;;;;;;;;;;;;;2411:17;;-1:-1:-1;;;;;;2439:34:10;;;;;:49;;;;;2483:1;;2439:49;;;;;;2483:1;2439:34;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2508:35:10;;;-1:-1:-1;;;2508:35:10;;2537:4;2508:35;;;;;;-1:-1:-1;;;;;2508:20:10;;;-1:-1:-1;2508:20:10;;-1:-1:-1;2508:35:10;;;;;;;;;;;;;;:20;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2508:35:10;2572:14;;;2553:43;;;-1:-1:-1;;;2553:43:10;;-1:-1:-1;;;;;2572:14:10;;;2553:43;;;;;;;;;;;;2508:35;;-1:-1:-1;2553:18:10;;;;;;:43;;;;;2508:35;;2553:43;;;;;;;;;;;:18;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2628:14:10;;;2606:77;;;-1:-1:-1;;;2606:77:10;;-1:-1:-1;;;;;2606:77:10;;;;;;;;;;;;;;;2628:14;;;;;2606:56;;:77;;;;;;;;;;;2628:14;;2606:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:756;;;;:::o;1778:150::-;1880:1;1854:14;-1:-1:-1;;;;;1854:14:10;:28;1845:38;;;;;;1893:14;:28;;-1:-1:-1;;;;;;1893:28:10;-1:-1:-1;;;;;1893:28:10;;;;;;;;;;1778:150::o;1348:613:4:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:4;;;-1:-1:-1;;;1729:39:4;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:4;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:4;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:4;-1:-1:-1;;;1891:62:4;;;1864:90;;1884:5;;1864:19;:90::i;:::-;1348:613;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:5;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [1673, 2693],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD43E8AD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2B5335C3 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCCFC2E8D EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x72 PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC6610657 PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC6610657 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH4 0xC6610657 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x177 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x21D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP4 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7C0849 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD CALLER SWAP3 PUSH4 0x3DF02124 SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP4 POP PUSH4 0x70A08231 SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5D6362BB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH4 0x5D6362BB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC6610657 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 PUSH4 0xC6610657 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD2680E9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 PUSH4 0x1A4D01D2 SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 POP PUSH4 0x70A08231 SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP1 DUP7 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB66503CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xB66503CF SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x677 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA29 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x704 SWAP1 DUP5 SWAP1 PUSH2 0x709 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x704 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9FF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x7C9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9D9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81D DUP6 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x86E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x8AC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x88D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x913 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x923 DUP3 DUP3 DUP7 PUSH2 0x934 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x943 JUMPI POP DUP2 PUSH2 0x7CC JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x953 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x99D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x985 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9CA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A26469706673582212200C0DE8 0x5E SWAP5 0xA8 PUSH32 0x52A59408CB11483C7F4DB4CF3DC86E566D308B5859916E154064736F6C634300 SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [1673, 2693],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD43E8AD"
    },
    "38": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "EQ",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2B5335C3"
    },
    "49": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "EQ",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A"
    },
    "53": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCCFC2E8D"
    },
    "60": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH2",
      "path": "10",
      "value": "0x74"
    },
    "64": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "JUMPDEST",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [1673, 2693],
      "op": "DUP1",
      "path": "10"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [1673, 2693],
      "op": "REVERT",
      "path": "10"
    },
    "70": {
      "offset": [1742, 1771],
      "op": "JUMPDEST",
      "path": "10"
    },
    "71": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E"
    },
    "74": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9A"
    },
    "77": {
      "fn": null,
      "jump": "i",
      "offset": [1742, 1771],
      "op": "JUMP",
      "path": "10"
    },
    "78": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "JUMPDEST",
      "path": "10"
    },
    "79": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "81": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "DUP1",
      "path": "10"
    },
    "82": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "MLOAD",
      "path": "10"
    },
    "83": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "87": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "89": {
      "op": "SHL"
    },
    "90": {
      "op": "SUB"
    },
    "91": {
      "offset": [1742, 1771],
      "op": "SWAP1",
      "path": "10"
    },
    "92": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "SWAP3",
      "path": "10"
    },
    "93": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "AND",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "DUP3",
      "path": "10"
    },
    "95": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "MSTORE",
      "path": "10"
    },
    "96": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "MLOAD",
      "path": "10"
    },
    "97": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "SWAP1",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "DUP2",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "SWAP1",
      "path": "10"
    },
    "100": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "SUB",
      "path": "10"
    },
    "101": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "103": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "ADD",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "SWAP1",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [1742, 1771],
      "op": "RETURN",
      "path": "10"
    },
    "106": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "JUMPDEST",
      "path": "10"
    },
    "107": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "PUSH2",
      "path": "10",
      "value": "0x72"
    },
    "110": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9"
    },
    "113": {
      "fn": "MetapoolFeeConverter.convertFees",
      "jump": "i",
      "offset": [1934, 2690],
      "op": "JUMP",
      "path": "10"
    },
    "114": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "JUMPDEST",
      "path": "10"
    },
    "115": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "STOP",
      "path": "10"
    },
    "116": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "JUMPDEST",
      "path": "10"
    },
    "117": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH2",
      "path": "10",
      "value": "0x72"
    },
    "120": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "122": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "DUP1",
      "path": "10"
    },
    "123": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "124": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "SUB",
      "path": "10"
    },
    "125": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "127": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "DUP2",
      "path": "10"
    },
    "128": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "LT",
      "path": "10"
    },
    "129": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "ISZERO",
      "path": "10"
    },
    "130": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A"
    },
    "133": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "JUMPI",
      "path": "10"
    },
    "134": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "136": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "REVERT",
      "path": "10"
    },
    "138": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "JUMPDEST",
      "path": "10"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "147": {
      "op": "SHL"
    },
    "148": {
      "op": "SUB"
    },
    "149": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "AND",
      "path": "10"
    },
    "150": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B9"
    },
    "153": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "jump": "i",
      "offset": [1778, 1928],
      "op": "JUMP",
      "path": "10"
    },
    "154": {
      "offset": [1742, 1771],
      "op": "JUMPDEST",
      "path": "10"
    },
    "155": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1742, 1771],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "157": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1742, 1771],
      "op": "SLOAD",
      "path": "10"
    },
    "158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "164": {
      "op": "SHL"
    },
    "165": {
      "op": "SUB"
    },
    "166": {
      "offset": [1742, 1771],
      "op": "AND",
      "path": "10"
    },
    "167": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1742, 1771],
      "op": "DUP2",
      "path": "10"
    },
    "168": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "jump": "o",
      "offset": [1742, 1771],
      "op": "JUMP",
      "path": "10"
    },
    "169": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "JUMPDEST",
      "path": "10"
    },
    "170": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1976, 1992],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "172": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2007, 2017],
      "op": "CALLER",
      "path": "10"
    },
    "173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "179": {
      "op": "SHL"
    },
    "180": {
      "op": "SUB"
    },
    "181": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2024],
      "op": "AND",
      "path": "10"
    },
    "182": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2024],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC6610657"
    },
    "187": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2025, 2026],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "189": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "191": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MLOAD",
      "path": "10"
    },
    "192": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP3",
      "path": "10"
    },
    "193": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "198": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "AND",
      "path": "10"
    },
    "199": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "201": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SHL",
      "path": "10"
    },
    "202": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP2",
      "path": "10"
    },
    "203": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MSTORE",
      "path": "10"
    },
    "204": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "206": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ADD",
      "path": "10"
    },
    "207": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP3",
      "path": "10"
    },
    "209": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP2",
      "path": "10"
    },
    "210": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MSTORE",
      "path": "10"
    },
    "211": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "213": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ADD",
      "path": "10"
    },
    "214": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SWAP2",
      "path": "10"
    },
    "215": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "216": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "217": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "219": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "221": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MLOAD",
      "path": "10"
    },
    "222": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "223": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP4",
      "path": "10"
    },
    "224": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SUB",
      "path": "10"
    },
    "225": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP2",
      "path": "10"
    },
    "226": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "228": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP8",
      "path": "10"
    },
    "229": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "231": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ISZERO",
      "path": "10"
    },
    "232": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "233": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ISZERO",
      "path": "10"
    },
    "234": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF2"
    },
    "237": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPI",
      "path": "10"
    },
    "238": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "240": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "241": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "REVERT",
      "path": "10"
    },
    "242": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPDEST",
      "path": "10"
    },
    "243": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "244": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "GAS",
      "path": "10"
    },
    "245": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "CALL",
      "path": "10"
    },
    "246": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ISZERO",
      "path": "10"
    },
    "247": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "248": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ISZERO",
      "path": "10"
    },
    "249": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH2",
      "path": "10",
      "value": "0x106"
    },
    "252": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPI",
      "path": "10"
    },
    "253": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "254": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "256": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "257": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "258": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "259": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "261": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "REVERT",
      "path": "10"
    },
    "262": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPDEST",
      "path": "10"
    },
    "263": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "264": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "265": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "266": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "POP",
      "path": "10"
    },
    "267": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "269": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MLOAD",
      "path": "10"
    },
    "270": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "271": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "273": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP2",
      "path": "10"
    },
    "274": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "LT",
      "path": "10"
    },
    "275": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "ISZERO",
      "path": "10"
    },
    "276": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C"
    },
    "279": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPI",
      "path": "10"
    },
    "280": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "282": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "DUP1",
      "path": "10"
    },
    "283": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "REVERT",
      "path": "10"
    },
    "284": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "JUMPDEST",
      "path": "10"
    },
    "285": {
      "op": "POP"
    },
    "286": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "MLOAD",
      "path": "10"
    },
    "287": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "289": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MLOAD",
      "path": "10"
    },
    "291": {
      "op": "PUSH4",
      "value": "0xC6610657"
    },
    "296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "298": {
      "op": "SHL"
    },
    "299": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP2",
      "path": "10"
    },
    "300": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MSTORE",
      "path": "10"
    },
    "301": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2087, 2088],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "303": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "305": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP3",
      "path": "10"
    },
    "306": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ADD",
      "path": "10"
    },
    "307": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MSTORE",
      "path": "10"
    },
    "308": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP1",
      "path": "10"
    },
    "309": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MLOAD",
      "path": "10"
    },
    "310": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SWAP2",
      "path": "10"
    },
    "311": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SWAP3",
      "path": "10"
    },
    "312": {
      "op": "POP"
    },
    "313": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2037, 2054],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "315": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2037, 2054],
      "op": "SWAP2",
      "path": "10"
    },
    "316": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2069, 2079],
      "op": "CALLER",
      "path": "10"
    },
    "317": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2069, 2079],
      "op": "SWAP2",
      "path": "10"
    },
    "318": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2086],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC6610657"
    },
    "323": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2086],
      "op": "SWAP2",
      "path": "10"
    },
    "324": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "326": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "327": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP4",
      "path": "10"
    },
    "328": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ADD",
      "path": "10"
    },
    "329": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP3",
      "path": "10"
    },
    "330": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "332": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1995, 2027],
      "op": "SWAP3",
      "path": "10"
    },
    "333": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP2",
      "path": "10"
    },
    "334": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP1",
      "path": "10"
    },
    "335": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP3",
      "path": "10"
    },
    "336": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP1",
      "path": "10"
    },
    "337": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SUB",
      "path": "10"
    },
    "338": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ADD",
      "path": "10"
    },
    "339": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP2",
      "path": "10"
    },
    "340": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2037, 2054],
      "op": "DUP8",
      "path": "10"
    },
    "341": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2069, 2079],
      "op": "DUP8",
      "path": "10"
    },
    "342": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "343": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "344": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ISZERO",
      "path": "10"
    },
    "345": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "346": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ISZERO",
      "path": "10"
    },
    "347": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH2",
      "path": "10",
      "value": "0x163"
    },
    "350": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPI",
      "path": "10"
    },
    "351": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "353": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "354": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "REVERT",
      "path": "10"
    },
    "355": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPDEST",
      "path": "10"
    },
    "356": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "POP",
      "path": "10"
    },
    "357": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "GAS",
      "path": "10"
    },
    "358": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "CALL",
      "path": "10"
    },
    "359": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ISZERO",
      "path": "10"
    },
    "360": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "361": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ISZERO",
      "path": "10"
    },
    "362": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "365": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPI",
      "path": "10"
    },
    "366": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "367": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "369": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "370": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "371": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "372": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "374": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "REVERT",
      "path": "10"
    },
    "375": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPDEST",
      "path": "10"
    },
    "376": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "POP",
      "path": "10"
    },
    "377": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "POP",
      "path": "10"
    },
    "378": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "POP",
      "path": "10"
    },
    "379": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "POP",
      "path": "10"
    },
    "380": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "382": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MLOAD",
      "path": "10"
    },
    "383": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "384": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "386": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP2",
      "path": "10"
    },
    "387": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "LT",
      "path": "10"
    },
    "388": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "ISZERO",
      "path": "10"
    },
    "389": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18D"
    },
    "392": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPI",
      "path": "10"
    },
    "393": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "395": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "DUP1",
      "path": "10"
    },
    "396": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "REVERT",
      "path": "10"
    },
    "397": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "JUMPDEST",
      "path": "10"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "MLOAD",
      "path": "10"
    },
    "400": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "402": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "403": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MLOAD",
      "path": "10"
    },
    "404": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP2",
      "path": "10"
    },
    "413": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MSTORE",
      "path": "10"
    },
    "414": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2146, 2150],
      "op": "ADDRESS",
      "path": "10"
    },
    "415": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "417": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP3",
      "path": "10"
    },
    "418": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ADD",
      "path": "10"
    },
    "419": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MSTORE",
      "path": "10"
    },
    "420": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP1",
      "path": "10"
    },
    "421": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MLOAD",
      "path": "10"
    },
    "422": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP2",
      "path": "10"
    },
    "423": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP3",
      "path": "10"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2100, 2115],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "427": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2100, 2115],
      "op": "SWAP2",
      "path": "10"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "DUP6",
      "path": "10"
    },
    "437": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "AND",
      "path": "10"
    },
    "438": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "SWAP2",
      "path": "10"
    },
    "439": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "444": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "SWAP2",
      "path": "10"
    },
    "445": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "447": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "448": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP4",
      "path": "10"
    },
    "449": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ADD",
      "path": "10"
    },
    "450": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP3",
      "path": "10"
    },
    "451": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "453": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2057, 2089],
      "op": "SWAP3",
      "path": "10"
    },
    "454": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP2",
      "path": "10"
    },
    "455": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP1",
      "path": "10"
    },
    "456": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP3",
      "path": "10"
    },
    "457": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP1",
      "path": "10"
    },
    "458": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SUB",
      "path": "10"
    },
    "459": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ADD",
      "path": "10"
    },
    "460": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP2",
      "path": "10"
    },
    "461": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2137],
      "op": "DUP7",
      "path": "10"
    },
    "462": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "463": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "464": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ISZERO",
      "path": "10"
    },
    "465": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "466": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ISZERO",
      "path": "10"
    },
    "467": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DB"
    },
    "470": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPI",
      "path": "10"
    },
    "471": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "473": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "474": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "REVERT",
      "path": "10"
    },
    "475": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPDEST",
      "path": "10"
    },
    "476": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "POP",
      "path": "10"
    },
    "477": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "GAS",
      "path": "10"
    },
    "478": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "STATICCALL",
      "path": "10"
    },
    "479": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ISZERO",
      "path": "10"
    },
    "480": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "481": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ISZERO",
      "path": "10"
    },
    "482": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EF"
    },
    "485": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPI",
      "path": "10"
    },
    "486": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "487": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "489": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "490": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "491": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "492": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "494": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "REVERT",
      "path": "10"
    },
    "495": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPDEST",
      "path": "10"
    },
    "496": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "POP",
      "path": "10"
    },
    "497": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "POP",
      "path": "10"
    },
    "498": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "POP",
      "path": "10"
    },
    "499": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "POP",
      "path": "10"
    },
    "500": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "502": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MLOAD",
      "path": "10"
    },
    "503": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "504": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "506": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP2",
      "path": "10"
    },
    "507": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "LT",
      "path": "10"
    },
    "508": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "ISZERO",
      "path": "10"
    },
    "509": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH2",
      "path": "10",
      "value": "0x205"
    },
    "512": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPI",
      "path": "10"
    },
    "513": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "515": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP1",
      "path": "10"
    },
    "516": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "REVERT",
      "path": "10"
    },
    "517": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "JUMPDEST",
      "path": "10"
    },
    "518": {
      "op": "POP"
    },
    "519": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "MLOAD",
      "path": "10"
    },
    "520": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "SWAP1",
      "path": "10"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2162, 2204],
      "op": "PUSH2",
      "path": "10",
      "statement": 0,
      "value": "0x21D"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "531": {
      "op": "SHL"
    },
    "532": {
      "op": "SUB"
    },
    "533": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2162, 2183],
      "op": "DUP5",
      "path": "10"
    },
    "534": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2162, 2183],
      "op": "AND",
      "path": "10"
    },
    "535": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2184, 2194],
      "op": "CALLER",
      "path": "10"
    },
    "536": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2118, 2152],
      "op": "DUP4",
      "path": "10"
    },
    "537": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2162, 2183],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F1"
    },
    "540": {
      "fn": "MetapoolFeeConverter.convertFees",
      "jump": "i",
      "offset": [2162, 2204],
      "op": "JUMP",
      "path": "10"
    },
    "541": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2162, 2204],
      "op": "JUMPDEST",
      "path": "10"
    },
    "542": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "statement": 1,
      "value": "0x40"
    },
    "544": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "545": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MLOAD",
      "path": "10"
    },
    "546": {
      "op": "PUSH4",
      "value": "0xF7C0849"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP2",
      "path": "10"
    },
    "555": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MSTORE",
      "path": "10"
    },
    "556": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2247, 2248],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "558": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "560": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP3",
      "path": "10"
    },
    "561": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "562": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP2",
      "path": "10"
    },
    "563": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP1",
      "path": "10"
    },
    "564": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MSTORE",
      "path": "10"
    },
    "565": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2250, 2251],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "567": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "569": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP4",
      "path": "10"
    },
    "570": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "571": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MSTORE",
      "path": "10"
    },
    "572": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "574": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP3",
      "path": "10"
    },
    "575": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "576": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP5",
      "path": "10"
    },
    "577": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP1",
      "path": "10"
    },
    "578": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MSTORE",
      "path": "10"
    },
    "579": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "581": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP3",
      "path": "10"
    },
    "582": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "583": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP2",
      "path": "10"
    },
    "584": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP1",
      "path": "10"
    },
    "585": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MSTORE",
      "path": "10"
    },
    "586": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP2",
      "path": "10"
    },
    "587": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "MLOAD",
      "path": "10"
    },
    "588": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2226, 2236],
      "op": "CALLER",
      "path": "10"
    },
    "589": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2226, 2236],
      "op": "SWAP3",
      "path": "10"
    },
    "590": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2246],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3DF02124"
    },
    "595": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2246],
      "op": "SWAP3",
      "path": "10"
    },
    "596": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x84"
    },
    "598": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "599": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP3",
      "path": "10"
    },
    "600": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "601": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP4",
      "path": "10"
    },
    "602": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP2",
      "path": "10"
    },
    "603": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP3",
      "path": "10"
    },
    "604": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SWAP1",
      "path": "10"
    },
    "605": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "SUB",
      "path": "10"
    },
    "606": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ADD",
      "path": "10"
    },
    "607": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP2",
      "path": "10"
    },
    "608": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2247, 2248],
      "op": "DUP4",
      "path": "10"
    },
    "609": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2226, 2236],
      "op": "DUP8",
      "path": "10"
    },
    "610": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "611": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "612": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ISZERO",
      "path": "10"
    },
    "613": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "614": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ISZERO",
      "path": "10"
    },
    "615": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F"
    },
    "618": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "JUMPI",
      "path": "10"
    },
    "619": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "621": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "622": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "REVERT",
      "path": "10"
    },
    "623": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "JUMPDEST",
      "path": "10"
    },
    "624": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "POP",
      "path": "10"
    },
    "625": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "GAS",
      "path": "10"
    },
    "626": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "CALL",
      "path": "10"
    },
    "627": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ISZERO",
      "path": "10"
    },
    "628": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "629": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "ISZERO",
      "path": "10"
    },
    "630": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH2",
      "path": "10",
      "value": "0x283"
    },
    "633": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "JUMPI",
      "path": "10"
    },
    "634": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "635": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "637": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "DUP1",
      "path": "10"
    },
    "638": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "639": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "640": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "642": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "REVERT",
      "path": "10"
    },
    "643": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2214, 2264],
      "op": "JUMPDEST",
      "path": "10"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x40"
    },
    "648": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "649": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MLOAD",
      "path": "10"
    },
    "650": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP2",
      "path": "10"
    },
    "659": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MSTORE",
      "path": "10"
    },
    "660": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2313, 2317],
      "op": "ADDRESS",
      "path": "10"
    },
    "661": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "663": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP3",
      "path": "10"
    },
    "664": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ADD",
      "path": "10"
    },
    "665": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MSTORE",
      "path": "10"
    },
    "666": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP1",
      "path": "10"
    },
    "667": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MLOAD",
      "path": "10"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "SUB"
    },
    "676": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "DUP7",
      "path": "10"
    },
    "677": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "AND",
      "path": "10"
    },
    "678": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "SWAP4",
      "path": "10"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "685": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "SWAP3",
      "path": "10"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "689": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "690": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP4",
      "path": "10"
    },
    "691": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ADD",
      "path": "10"
    },
    "692": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP3",
      "path": "10"
    },
    "693": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "695": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP3",
      "path": "10"
    },
    "696": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP2",
      "path": "10"
    },
    "697": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP1",
      "path": "10"
    },
    "698": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP3",
      "path": "10"
    },
    "699": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP1",
      "path": "10"
    },
    "700": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SUB",
      "path": "10"
    },
    "701": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ADD",
      "path": "10"
    },
    "702": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP2",
      "path": "10"
    },
    "703": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2304],
      "op": "DUP7",
      "path": "10"
    },
    "704": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "705": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "706": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ISZERO",
      "path": "10"
    },
    "707": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "708": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ISZERO",
      "path": "10"
    },
    "709": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CD"
    },
    "712": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPI",
      "path": "10"
    },
    "713": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "715": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "716": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "REVERT",
      "path": "10"
    },
    "717": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPDEST",
      "path": "10"
    },
    "718": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "POP",
      "path": "10"
    },
    "719": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "GAS",
      "path": "10"
    },
    "720": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "STATICCALL",
      "path": "10"
    },
    "721": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ISZERO",
      "path": "10"
    },
    "722": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "723": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ISZERO",
      "path": "10"
    },
    "724": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E1"
    },
    "727": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPI",
      "path": "10"
    },
    "728": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "729": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "731": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "732": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "733": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "734": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "736": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "REVERT",
      "path": "10"
    },
    "737": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPDEST",
      "path": "10"
    },
    "738": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "POP",
      "path": "10"
    },
    "739": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "POP",
      "path": "10"
    },
    "740": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "POP",
      "path": "10"
    },
    "741": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "POP",
      "path": "10"
    },
    "742": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "744": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MLOAD",
      "path": "10"
    },
    "745": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "746": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "748": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP2",
      "path": "10"
    },
    "749": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "LT",
      "path": "10"
    },
    "750": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "ISZERO",
      "path": "10"
    },
    "751": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F7"
    },
    "754": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPI",
      "path": "10"
    },
    "755": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "757": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "DUP1",
      "path": "10"
    },
    "758": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "REVERT",
      "path": "10"
    },
    "759": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "JUMPDEST",
      "path": "10"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "MLOAD",
      "path": "10"
    },
    "762": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "764": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "765": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "MLOAD",
      "path": "10"
    },
    "766": {
      "op": "PUSH4",
      "value": "0x5D6362BB"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "773": {
      "op": "SHL"
    },
    "774": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP2",
      "path": "10"
    },
    "775": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "MSTORE",
      "path": "10"
    },
    "776": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP1",
      "path": "10"
    },
    "777": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "MLOAD",
      "path": "10"
    },
    "778": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP2",
      "path": "10"
    },
    "779": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP3",
      "path": "10"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2330, 2350],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "783": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2330, 2350],
      "op": "SWAP2",
      "path": "10"
    },
    "784": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2365, 2375],
      "op": "CALLER",
      "path": "10"
    },
    "785": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2365, 2375],
      "op": "SWAP2",
      "path": "10"
    },
    "786": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2386],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5D6362BB"
    },
    "791": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2386],
      "op": "SWAP2",
      "path": "10"
    },
    "792": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "794": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "795": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP4",
      "path": "10"
    },
    "796": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ADD",
      "path": "10"
    },
    "797": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP3",
      "path": "10"
    },
    "798": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "800": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2284, 2319],
      "op": "SWAP3",
      "path": "10"
    },
    "801": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP2",
      "path": "10"
    },
    "802": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP1",
      "path": "10"
    },
    "803": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP3",
      "path": "10"
    },
    "804": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP1",
      "path": "10"
    },
    "805": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SUB",
      "path": "10"
    },
    "806": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ADD",
      "path": "10"
    },
    "807": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP2",
      "path": "10"
    },
    "808": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2330, 2350],
      "op": "DUP8",
      "path": "10"
    },
    "809": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2365, 2375],
      "op": "DUP8",
      "path": "10"
    },
    "810": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "811": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "812": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ISZERO",
      "path": "10"
    },
    "813": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "814": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ISZERO",
      "path": "10"
    },
    "815": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337"
    },
    "818": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPI",
      "path": "10"
    },
    "819": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "821": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "822": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "REVERT",
      "path": "10"
    },
    "823": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPDEST",
      "path": "10"
    },
    "824": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "POP",
      "path": "10"
    },
    "825": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "GAS",
      "path": "10"
    },
    "826": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "CALL",
      "path": "10"
    },
    "827": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ISZERO",
      "path": "10"
    },
    "828": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "829": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ISZERO",
      "path": "10"
    },
    "830": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34B"
    },
    "833": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPI",
      "path": "10"
    },
    "834": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "835": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "837": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "838": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "839": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "840": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "842": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "REVERT",
      "path": "10"
    },
    "843": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPDEST",
      "path": "10"
    },
    "844": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "POP",
      "path": "10"
    },
    "845": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "POP",
      "path": "10"
    },
    "846": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "POP",
      "path": "10"
    },
    "847": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "POP",
      "path": "10"
    },
    "848": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "850": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "MLOAD",
      "path": "10"
    },
    "851": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "852": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "854": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP2",
      "path": "10"
    },
    "855": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "LT",
      "path": "10"
    },
    "856": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "ISZERO",
      "path": "10"
    },
    "857": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "860": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPI",
      "path": "10"
    },
    "861": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "863": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "DUP1",
      "path": "10"
    },
    "864": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "REVERT",
      "path": "10"
    },
    "865": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "JUMPDEST",
      "path": "10"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "MLOAD",
      "path": "10"
    },
    "868": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x40"
    },
    "870": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "871": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MLOAD",
      "path": "10"
    },
    "872": {
      "op": "PUSH4",
      "value": "0xC6610657"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP2",
      "path": "10"
    },
    "881": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MSTORE",
      "path": "10"
    },
    "882": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2426, 2427],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "884": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "886": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP3",
      "path": "10"
    },
    "887": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ADD",
      "path": "10"
    },
    "888": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP2",
      "path": "10"
    },
    "889": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "890": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MSTORE",
      "path": "10"
    },
    "891": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP2",
      "path": "10"
    },
    "892": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MLOAD",
      "path": "10"
    },
    "893": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP3",
      "path": "10"
    },
    "894": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP4",
      "path": "10"
    },
    "895": {
      "op": "POP"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "DUP5",
      "path": "10"
    },
    "905": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "AND",
      "path": "10"
    },
    "906": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "SWAP3",
      "path": "10"
    },
    "907": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC6610657"
    },
    "912": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "SWAP3",
      "path": "10"
    },
    "913": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "915": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "916": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP5",
      "path": "10"
    },
    "917": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ADD",
      "path": "10"
    },
    "918": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP4",
      "path": "10"
    },
    "919": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "921": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2353, 2388],
      "op": "SWAP4",
      "path": "10"
    },
    "922": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP3",
      "path": "10"
    },
    "923": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "924": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP4",
      "path": "10"
    },
    "925": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "926": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SUB",
      "path": "10"
    },
    "927": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "928": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP2",
      "path": "10"
    },
    "929": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ADD",
      "path": "10"
    },
    "930": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "931": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP3",
      "path": "10"
    },
    "932": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP1",
      "path": "10"
    },
    "933": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2425],
      "op": "DUP8",
      "path": "10"
    },
    "934": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "935": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "936": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ISZERO",
      "path": "10"
    },
    "937": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "938": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ISZERO",
      "path": "10"
    },
    "939": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B3"
    },
    "942": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPI",
      "path": "10"
    },
    "943": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "945": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "946": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "REVERT",
      "path": "10"
    },
    "947": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPDEST",
      "path": "10"
    },
    "948": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "POP",
      "path": "10"
    },
    "949": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "GAS",
      "path": "10"
    },
    "950": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "CALL",
      "path": "10"
    },
    "951": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ISZERO",
      "path": "10"
    },
    "952": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "953": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ISZERO",
      "path": "10"
    },
    "954": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C7"
    },
    "957": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPI",
      "path": "10"
    },
    "958": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "959": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "961": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "962": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "963": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "964": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "966": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "REVERT",
      "path": "10"
    },
    "967": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPDEST",
      "path": "10"
    },
    "968": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "POP",
      "path": "10"
    },
    "969": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "POP",
      "path": "10"
    },
    "970": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "POP",
      "path": "10"
    },
    "971": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "POP",
      "path": "10"
    },
    "972": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "974": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MLOAD",
      "path": "10"
    },
    "975": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "976": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "978": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP2",
      "path": "10"
    },
    "979": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "LT",
      "path": "10"
    },
    "980": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "ISZERO",
      "path": "10"
    },
    "981": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DD"
    },
    "984": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPI",
      "path": "10"
    },
    "985": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "987": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "DUP1",
      "path": "10"
    },
    "988": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "REVERT",
      "path": "10"
    },
    "989": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "JUMPDEST",
      "path": "10"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "MLOAD",
      "path": "10"
    },
    "992": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x40"
    },
    "994": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "995": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MLOAD",
      "path": "10"
    },
    "996": {
      "op": "PUSH4",
      "value": "0xD2680E9"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP2",
      "path": "10"
    },
    "1005": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MSTORE",
      "path": "10"
    },
    "1006": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1008": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP2",
      "path": "10"
    },
    "1009": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ADD",
      "path": "10"
    },
    "1010": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP6",
      "path": "10"
    },
    "1011": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP1",
      "path": "10"
    },
    "1012": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MSTORE",
      "path": "10"
    },
    "1013": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2483, 2484],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1015": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1017": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP3",
      "path": "10"
    },
    "1018": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ADD",
      "path": "10"
    },
    "1019": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP2",
      "path": "10"
    },
    "1020": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP1",
      "path": "10"
    },
    "1021": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MSTORE",
      "path": "10"
    },
    "1022": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1024": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP3",
      "path": "10"
    },
    "1025": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ADD",
      "path": "10"
    },
    "1026": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP2",
      "path": "10"
    },
    "1027": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP1",
      "path": "10"
    },
    "1028": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MSTORE",
      "path": "10"
    },
    "1029": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP2",
      "path": "10"
    },
    "1030": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "MLOAD",
      "path": "10"
    },
    "1031": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP3",
      "path": "10"
    },
    "1032": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2411, 2428],
      "op": "SWAP6",
      "path": "10"
    },
    "1033": {
      "op": "POP"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "SUB"
    },
    "1042": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "DUP5",
      "path": "10"
    },
    "1043": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "AND",
      "path": "10"
    },
    "1044": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "SWAP3",
      "path": "10"
    },
    "1045": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1A4D01D2"
    },
    "1050": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "SWAP3",
      "path": "10"
    },
    "1051": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1053": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1054": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP5",
      "path": "10"
    },
    "1055": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ADD",
      "path": "10"
    },
    "1056": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP4",
      "path": "10"
    },
    "1057": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2483, 2484],
      "op": "SWAP2",
      "path": "10"
    },
    "1058": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2483, 2484],
      "op": "SWAP3",
      "path": "10"
    },
    "1059": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP2",
      "path": "10"
    },
    "1060": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP3",
      "path": "10"
    },
    "1061": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SWAP1",
      "path": "10"
    },
    "1062": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "SUB",
      "path": "10"
    },
    "1063": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ADD",
      "path": "10"
    },
    "1064": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP2",
      "path": "10"
    },
    "1065": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2483, 2484],
      "op": "DUP4",
      "path": "10"
    },
    "1066": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2473],
      "op": "DUP8",
      "path": "10"
    },
    "1067": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1068": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1069": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ISZERO",
      "path": "10"
    },
    "1070": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1071": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ISZERO",
      "path": "10"
    },
    "1072": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH2",
      "path": "10",
      "value": "0x438"
    },
    "1075": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "JUMPI",
      "path": "10"
    },
    "1076": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1078": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1079": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "REVERT",
      "path": "10"
    },
    "1080": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1081": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "POP",
      "path": "10"
    },
    "1082": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "GAS",
      "path": "10"
    },
    "1083": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "CALL",
      "path": "10"
    },
    "1084": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ISZERO",
      "path": "10"
    },
    "1085": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1086": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "ISZERO",
      "path": "10"
    },
    "1087": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44C"
    },
    "1090": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "JUMPI",
      "path": "10"
    },
    "1091": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1092": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1094": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "DUP1",
      "path": "10"
    },
    "1095": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1096": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1097": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1099": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "REVERT",
      "path": "10"
    },
    "1100": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2439, 2488],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x40"
    },
    "1105": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1106": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MLOAD",
      "path": "10"
    },
    "1107": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP2",
      "path": "10"
    },
    "1116": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MSTORE",
      "path": "10"
    },
    "1117": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2537, 2541],
      "op": "ADDRESS",
      "path": "10"
    },
    "1118": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1120": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP3",
      "path": "10"
    },
    "1121": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ADD",
      "path": "10"
    },
    "1122": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MSTORE",
      "path": "10"
    },
    "1123": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP1",
      "path": "10"
    },
    "1124": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MLOAD",
      "path": "10"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "op": "SUB"
    },
    "1133": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "DUP8",
      "path": "10"
    },
    "1134": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "AND",
      "path": "10"
    },
    "1135": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "SWAP4",
      "path": "10"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "1142": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "SWAP3",
      "path": "10"
    },
    "1143": {
      "op": "POP"
    },
    "1144": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1146": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1147": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP4",
      "path": "10"
    },
    "1148": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ADD",
      "path": "10"
    },
    "1149": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP3",
      "path": "10"
    },
    "1150": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1152": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP3",
      "path": "10"
    },
    "1153": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP2",
      "path": "10"
    },
    "1154": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP1",
      "path": "10"
    },
    "1155": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP3",
      "path": "10"
    },
    "1156": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP1",
      "path": "10"
    },
    "1157": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SUB",
      "path": "10"
    },
    "1158": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ADD",
      "path": "10"
    },
    "1159": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP2",
      "path": "10"
    },
    "1160": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2528],
      "op": "DUP7",
      "path": "10"
    },
    "1161": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1162": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1163": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ISZERO",
      "path": "10"
    },
    "1164": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1165": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ISZERO",
      "path": "10"
    },
    "1166": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH2",
      "path": "10",
      "value": "0x496"
    },
    "1169": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPI",
      "path": "10"
    },
    "1170": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1172": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1173": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "REVERT",
      "path": "10"
    },
    "1174": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1175": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "POP",
      "path": "10"
    },
    "1176": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "GAS",
      "path": "10"
    },
    "1177": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "STATICCALL",
      "path": "10"
    },
    "1178": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ISZERO",
      "path": "10"
    },
    "1179": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1180": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ISZERO",
      "path": "10"
    },
    "1181": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AA"
    },
    "1184": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPI",
      "path": "10"
    },
    "1185": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1186": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1188": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1189": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1190": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1191": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1193": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "REVERT",
      "path": "10"
    },
    "1194": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1195": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "POP",
      "path": "10"
    },
    "1196": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "POP",
      "path": "10"
    },
    "1197": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "POP",
      "path": "10"
    },
    "1198": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "POP",
      "path": "10"
    },
    "1199": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1201": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MLOAD",
      "path": "10"
    },
    "1202": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1203": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1205": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP2",
      "path": "10"
    },
    "1206": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "LT",
      "path": "10"
    },
    "1207": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "ISZERO",
      "path": "10"
    },
    "1208": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPI",
      "path": "10"
    },
    "1212": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1214": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "DUP1",
      "path": "10"
    },
    "1215": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "REVERT",
      "path": "10"
    },
    "1216": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "MLOAD",
      "path": "10"
    },
    "1219": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "PUSH1",
      "path": "10",
      "statement": 6,
      "value": "0x0"
    },
    "1221": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "DUP1",
      "path": "10"
    },
    "1222": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "SLOAD",
      "path": "10"
    },
    "1223": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1225": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1226": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MLOAD",
      "path": "10"
    },
    "1227": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP2",
      "path": "10"
    },
    "1236": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MSTORE",
      "path": "10"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1243": {
      "op": "SHL"
    },
    "1244": {
      "op": "SUB"
    },
    "1245": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "SWAP3",
      "path": "10"
    },
    "1246": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "DUP4",
      "path": "10"
    },
    "1247": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2572, 2586],
      "op": "AND",
      "path": "10"
    },
    "1248": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1250": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP3",
      "path": "10"
    },
    "1251": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ADD",
      "path": "10"
    },
    "1252": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MSTORE",
      "path": "10"
    },
    "1253": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1255": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP2",
      "path": "10"
    },
    "1256": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ADD",
      "path": "10"
    },
    "1257": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP6",
      "path": "10"
    },
    "1258": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1259": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MSTORE",
      "path": "10"
    },
    "1260": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1261": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MLOAD",
      "path": "10"
    },
    "1262": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP4",
      "path": "10"
    },
    "1263": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP6",
      "path": "10"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "SWAP1",
      "path": "10"
    },
    "1266": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "DUP7",
      "path": "10"
    },
    "1267": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "AND",
      "path": "10"
    },
    "1268": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "SWAP3",
      "path": "10"
    },
    "1269": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "1274": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "SWAP3",
      "path": "10"
    },
    "1275": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1277": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1278": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP5",
      "path": "10"
    },
    "1279": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ADD",
      "path": "10"
    },
    "1280": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP4",
      "path": "10"
    },
    "1281": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1283": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2508, 2543],
      "op": "SWAP4",
      "path": "10"
    },
    "1284": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP3",
      "path": "10"
    },
    "1285": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1286": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP4",
      "path": "10"
    },
    "1287": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1288": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SUB",
      "path": "10"
    },
    "1289": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1290": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP2",
      "path": "10"
    },
    "1291": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ADD",
      "path": "10"
    },
    "1292": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1293": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP3",
      "path": "10"
    },
    "1294": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "SWAP1",
      "path": "10"
    },
    "1295": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2571],
      "op": "DUP8",
      "path": "10"
    },
    "1296": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1297": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1298": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ISZERO",
      "path": "10"
    },
    "1299": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1300": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ISZERO",
      "path": "10"
    },
    "1301": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51D"
    },
    "1304": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPI",
      "path": "10"
    },
    "1305": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1307": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1308": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "REVERT",
      "path": "10"
    },
    "1309": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1310": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "POP",
      "path": "10"
    },
    "1311": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "GAS",
      "path": "10"
    },
    "1312": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "CALL",
      "path": "10"
    },
    "1313": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ISZERO",
      "path": "10"
    },
    "1314": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1315": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ISZERO",
      "path": "10"
    },
    "1316": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH2",
      "path": "10",
      "value": "0x531"
    },
    "1319": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPI",
      "path": "10"
    },
    "1320": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1321": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1323": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1324": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1325": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1326": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1328": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "REVERT",
      "path": "10"
    },
    "1329": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1330": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "POP",
      "path": "10"
    },
    "1331": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "POP",
      "path": "10"
    },
    "1332": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "POP",
      "path": "10"
    },
    "1333": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "POP",
      "path": "10"
    },
    "1334": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1336": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "MLOAD",
      "path": "10"
    },
    "1337": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1338": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1340": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP2",
      "path": "10"
    },
    "1341": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "LT",
      "path": "10"
    },
    "1342": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "ISZERO",
      "path": "10"
    },
    "1343": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH2",
      "path": "10",
      "value": "0x547"
    },
    "1346": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPI",
      "path": "10"
    },
    "1347": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1349": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "DUP1",
      "path": "10"
    },
    "1350": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "REVERT",
      "path": "10"
    },
    "1351": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2553, 2596],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1352": {
      "op": "POP"
    },
    "1353": {
      "op": "POP"
    },
    "1354": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x0"
    },
    "1356": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "DUP1",
      "path": "10"
    },
    "1357": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "SLOAD",
      "path": "10"
    },
    "1358": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1360": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1361": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "MLOAD",
      "path": "10"
    },
    "1362": {
      "op": "PUSH4",
      "value": "0xB66503CF"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1369": {
      "op": "SHL"
    },
    "1370": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP2",
      "path": "10"
    },
    "1371": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "MSTORE",
      "path": "10"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP8",
      "path": "10"
    },
    "1381": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP2",
      "path": "10"
    },
    "1382": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "AND",
      "path": "10"
    },
    "1383": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1385": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP4",
      "path": "10"
    },
    "1386": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ADD",
      "path": "10"
    },
    "1387": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "MSTORE",
      "path": "10"
    },
    "1388": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1390": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP3",
      "path": "10"
    },
    "1391": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ADD",
      "path": "10"
    },
    "1392": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP8",
      "path": "10"
    },
    "1393": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SWAP1",
      "path": "10"
    },
    "1394": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "MSTORE",
      "path": "10"
    },
    "1395": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SWAP2",
      "path": "10"
    },
    "1396": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "MLOAD",
      "path": "10"
    },
    "1397": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "SWAP2",
      "path": "10"
    },
    "1398": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "SWAP1",
      "path": "10"
    },
    "1399": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "SWAP3",
      "path": "10"
    },
    "1400": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "AND",
      "path": "10"
    },
    "1401": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "SWAP3",
      "path": "10"
    },
    "1402": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2662],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB66503CF"
    },
    "1407": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2662],
      "op": "SWAP3",
      "path": "10"
    },
    "1408": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1410": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1411": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP3",
      "path": "10"
    },
    "1412": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ADD",
      "path": "10"
    },
    "1413": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SWAP4",
      "path": "10"
    },
    "1414": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SWAP2",
      "path": "10"
    },
    "1415": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP3",
      "path": "10"
    },
    "1416": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SWAP1",
      "path": "10"
    },
    "1417": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "SUB",
      "path": "10"
    },
    "1418": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ADD",
      "path": "10"
    },
    "1419": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP2",
      "path": "10"
    },
    "1420": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "DUP4",
      "path": "10"
    },
    "1421": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2628, 2642],
      "op": "DUP8",
      "path": "10"
    },
    "1422": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1423": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1424": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ISZERO",
      "path": "10"
    },
    "1425": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1426": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ISZERO",
      "path": "10"
    },
    "1427": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH2",
      "path": "10",
      "value": "0x59B"
    },
    "1430": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "JUMPI",
      "path": "10"
    },
    "1431": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1433": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1434": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "REVERT",
      "path": "10"
    },
    "1435": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1436": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "POP",
      "path": "10"
    },
    "1437": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "GAS",
      "path": "10"
    },
    "1438": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "CALL",
      "path": "10"
    },
    "1439": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ISZERO",
      "path": "10"
    },
    "1440": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1441": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "ISZERO",
      "path": "10"
    },
    "1442": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5AF"
    },
    "1445": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "JUMPI",
      "path": "10"
    },
    "1446": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1447": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1449": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "DUP1",
      "path": "10"
    },
    "1450": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1451": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1452": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1454": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "REVERT",
      "path": "10"
    },
    "1455": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1456": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "POP",
      "path": "10"
    },
    "1457": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "POP",
      "path": "10"
    },
    "1458": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "POP",
      "path": "10"
    },
    "1459": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [2606, 2683],
      "op": "POP",
      "path": "10"
    },
    "1460": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "POP",
      "path": "10"
    },
    "1461": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "POP",
      "path": "10"
    },
    "1462": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "POP",
      "path": "10"
    },
    "1463": {
      "fn": "MetapoolFeeConverter.convertFees",
      "offset": [1934, 2690],
      "op": "POP",
      "path": "10"
    },
    "1464": {
      "fn": "MetapoolFeeConverter.convertFees",
      "jump": "o",
      "offset": [1934, 2690],
      "op": "JUMP",
      "path": "10"
    },
    "1465": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1778, 1928],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1466": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1880, 1881],
      "op": "PUSH1",
      "path": "10",
      "statement": 8,
      "value": "0x0"
    },
    "1468": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1854, 1868],
      "op": "SLOAD",
      "path": "10"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1854, 1868],
      "op": "AND",
      "path": "10"
    },
    "1478": {
      "branch": 20,
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1854, 1882],
      "op": "ISZERO",
      "path": "10"
    },
    "1479": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5CF"
    },
    "1482": {
      "branch": 20,
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "JUMPI",
      "path": "10"
    },
    "1483": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1485": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "DUP1",
      "path": "10"
    },
    "1486": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "REVERT",
      "path": "10"
    },
    "1487": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1845, 1883],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1488": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1907],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x0"
    },
    "1490": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "DUP1",
      "path": "10"
    },
    "1491": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SLOAD",
      "path": "10"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "op": "NOT"
    },
    "1501": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "AND",
      "path": "10"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP3",
      "path": "10"
    },
    "1511": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP1",
      "path": "10"
    },
    "1512": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP3",
      "path": "10"
    },
    "1513": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "AND",
      "path": "10"
    },
    "1514": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP2",
      "path": "10"
    },
    "1515": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP1",
      "path": "10"
    },
    "1516": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP2",
      "path": "10"
    },
    "1517": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "OR",
      "path": "10"
    },
    "1518": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SWAP1",
      "path": "10"
    },
    "1519": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "offset": [1893, 1921],
      "op": "SSTORE",
      "path": "10"
    },
    "1520": {
      "fn": "MetapoolFeeConverter.setFeeDistributor",
      "jump": "o",
      "offset": [1778, 1928],
      "op": "JUMP",
      "path": "10"
    },
    "1521": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1348, 1961],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1522": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1713, 1723],
      "op": "DUP1",
      "path": "4",
      "statement": 10
    },
    "1523": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1713, 1723],
      "op": "ISZERO",
      "path": "4"
    },
    "1524": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1713, 1723],
      "op": "DUP1",
      "path": "4"
    },
    "1525": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1712, 1774],
      "op": "PUSH2",
      "path": "4",
      "value": "0x677"
    },
    "1528": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1712, 1774],
      "op": "JUMPI",
      "path": "4"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1532": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1533": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MLOAD",
      "path": "4"
    },
    "1534": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP2",
      "path": "4"
    },
    "1543": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MSTORE",
      "path": "4"
    },
    "1544": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1753, 1757],
      "op": "ADDRESS",
      "path": "4"
    },
    "1545": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1547": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP3",
      "path": "4"
    },
    "1548": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ADD",
      "path": "4"
    },
    "1549": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MSTORE",
      "path": "4"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1556": {
      "op": "SHL"
    },
    "1557": {
      "op": "SUB"
    },
    "1558": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP5",
      "path": "4"
    },
    "1559": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP2",
      "path": "4"
    },
    "1560": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "AND",
      "path": "4"
    },
    "1561": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1563": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP4",
      "path": "4"
    },
    "1564": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ADD",
      "path": "4"
    },
    "1565": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MSTORE",
      "path": "4"
    },
    "1566": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP2",
      "path": "4"
    },
    "1567": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MLOAD",
      "path": "4"
    },
    "1568": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "SWAP2",
      "path": "4"
    },
    "1569": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "DUP6",
      "path": "4"
    },
    "1570": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "AND",
      "path": "4"
    },
    "1571": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "SWAP2",
      "path": "4"
    },
    "1572": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "1577": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "SWAP2",
      "path": "4"
    },
    "1578": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "1580": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1581": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP3",
      "path": "4"
    },
    "1582": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ADD",
      "path": "4"
    },
    "1583": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP3",
      "path": "4"
    },
    "1584": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1586": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP3",
      "path": "4"
    },
    "1587": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP1",
      "path": "4"
    },
    "1588": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP2",
      "path": "4"
    },
    "1589": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP1",
      "path": "4"
    },
    "1590": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP3",
      "path": "4"
    },
    "1591": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SWAP1",
      "path": "4"
    },
    "1592": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "SUB",
      "path": "4"
    },
    "1593": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ADD",
      "path": "4"
    },
    "1594": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP2",
      "path": "4"
    },
    "1595": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1744],
      "op": "DUP7",
      "path": "4"
    },
    "1596": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1597": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1598": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ISZERO",
      "path": "4"
    },
    "1599": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1600": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ISZERO",
      "path": "4"
    },
    "1601": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH2",
      "path": "4",
      "value": "0x649"
    },
    "1604": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPI",
      "path": "4"
    },
    "1605": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1607": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1608": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "REVERT",
      "path": "4"
    },
    "1609": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1610": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "POP",
      "path": "4"
    },
    "1611": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "GAS",
      "path": "4"
    },
    "1612": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "STATICCALL",
      "path": "4"
    },
    "1613": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ISZERO",
      "path": "4"
    },
    "1614": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1615": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ISZERO",
      "path": "4"
    },
    "1616": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65D"
    },
    "1619": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPI",
      "path": "4"
    },
    "1620": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1621": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1623": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1624": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1625": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1626": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1628": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "REVERT",
      "path": "4"
    },
    "1629": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1630": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "POP",
      "path": "4"
    },
    "1631": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "POP",
      "path": "4"
    },
    "1632": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "POP",
      "path": "4"
    },
    "1633": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "POP",
      "path": "4"
    },
    "1634": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1636": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MLOAD",
      "path": "4"
    },
    "1637": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1638": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1640": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP2",
      "path": "4"
    },
    "1641": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "LT",
      "path": "4"
    },
    "1642": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "ISZERO",
      "path": "4"
    },
    "1643": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH2",
      "path": "4",
      "value": "0x673"
    },
    "1646": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPI",
      "path": "4"
    },
    "1647": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1649": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "DUP1",
      "path": "4"
    },
    "1650": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "REVERT",
      "path": "4"
    },
    "1651": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1768],
      "op": "MLOAD",
      "path": "4"
    },
    "1654": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1729, 1773],
      "op": "ISZERO",
      "path": "4"
    },
    "1655": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1712, 1774],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1656": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B2"
    },
    "1659": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "JUMPI",
      "path": "4"
    },
    "1660": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1662": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "MLOAD",
      "path": "4"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP2",
      "path": "4"
    },
    "1671": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "MSTORE",
      "path": "4"
    },
    "1672": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1674": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "ADD",
      "path": "4"
    },
    "1675": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP1",
      "path": "4"
    },
    "1676": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP1",
      "path": "4"
    },
    "1677": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1679": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "ADD",
      "path": "4"
    },
    "1680": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP3",
      "path": "4"
    },
    "1681": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP2",
      "path": "4"
    },
    "1682": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SUB",
      "path": "4"
    },
    "1683": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP3",
      "path": "4"
    },
    "1684": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "MSTORE",
      "path": "4"
    },
    "1685": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x36"
    },
    "1687": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP2",
      "path": "4"
    },
    "1688": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "MSTORE",
      "path": "4"
    },
    "1689": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1691": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "ADD",
      "path": "4"
    },
    "1692": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP1",
      "path": "4"
    },
    "1693": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA29"
    },
    "1696": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x36"
    },
    "1698": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SWAP2",
      "path": "4"
    },
    "1699": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "CODECOPY",
      "path": "4"
    },
    "1700": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1702": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "ADD",
      "path": "4"
    },
    "1703": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SWAP2",
      "path": "4"
    },
    "1704": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "POP",
      "path": "4"
    },
    "1705": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "POP",
      "path": "4"
    },
    "1706": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1708": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "MLOAD",
      "path": "4"
    },
    "1709": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "DUP1",
      "path": "4"
    },
    "1710": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SWAP2",
      "path": "4"
    },
    "1711": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SUB",
      "path": "4"
    },
    "1712": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "SWAP1",
      "path": "4"
    },
    "1713": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "REVERT",
      "path": "4"
    },
    "1714": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1704, 1854],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1715": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x40"
    },
    "1717": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP1",
      "path": "4"
    },
    "1718": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MLOAD",
      "path": "4"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP5",
      "path": "4"
    },
    "1728": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "AND",
      "path": "4"
    },
    "1729": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1731": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP3",
      "path": "4"
    },
    "1732": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "ADD",
      "path": "4"
    },
    "1733": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MSTORE",
      "path": "4"
    },
    "1734": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "1736": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP1",
      "path": "4"
    },
    "1737": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP3",
      "path": "4"
    },
    "1738": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "ADD",
      "path": "4"
    },
    "1739": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP5",
      "path": "4"
    },
    "1740": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP1",
      "path": "4"
    },
    "1741": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MSTORE",
      "path": "4"
    },
    "1742": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP3",
      "path": "4"
    },
    "1743": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MLOAD",
      "path": "4"
    },
    "1744": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP1",
      "path": "4"
    },
    "1745": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP4",
      "path": "4"
    },
    "1746": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SUB",
      "path": "4"
    },
    "1747": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP1",
      "path": "4"
    },
    "1748": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP2",
      "path": "4"
    },
    "1749": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "ADD",
      "path": "4"
    },
    "1750": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP2",
      "path": "4"
    },
    "1751": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MSTORE",
      "path": "4"
    },
    "1752": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1754": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP1",
      "path": "4"
    },
    "1755": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP2",
      "path": "4"
    },
    "1756": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "ADD",
      "path": "4"
    },
    "1757": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP1",
      "path": "4"
    },
    "1758": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP2",
      "path": "4"
    },
    "1759": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MSTORE",
      "path": "4"
    },
    "1760": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1762": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP2",
      "path": "4"
    },
    "1763": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "ADD",
      "path": "4"
    },
    "1764": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "DUP1",
      "path": "4"
    },
    "1765": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MLOAD",
      "path": "4"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "AND",
      "path": "4"
    },
    "1775": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "OR",
      "path": "4"
    },
    "1784": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "SWAP1",
      "path": "4"
    },
    "1785": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1891, 1953],
      "op": "MSTORE",
      "path": "4"
    },
    "1786": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1864, 1954],
      "op": "PUSH2",
      "path": "4",
      "value": "0x704"
    },
    "1789": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1864, 1954],
      "op": "SWAP1",
      "path": "4"
    },
    "1790": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1884, 1889],
      "op": "DUP5",
      "path": "4"
    },
    "1791": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1884, 1889],
      "op": "SWAP1",
      "path": "4"
    },
    "1792": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1864, 1883],
      "op": "PUSH2",
      "path": "4",
      "value": "0x709"
    },
    "1795": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [1864, 1954],
      "op": "JUMP",
      "path": "4"
    },
    "1796": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1864, 1954],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1797": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1348, 1961],
      "op": "POP",
      "path": "4"
    },
    "1798": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1348, 1961],
      "op": "POP",
      "path": "4"
    },
    "1799": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1348, 1961],
      "op": "POP",
      "path": "4"
    },
    "1800": {
      "fn": "SafeERC20.safeApprove",
      "jump": "o",
      "offset": [1348, 1961],
      "op": "JUMP",
      "path": "4"
    },
    "1801": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [2967, 3718],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3409],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1804": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75E"
    },
    "1807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3440, 3444],
      "op": "DUP3",
      "path": "4"
    },
    "1808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1810": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MLOAD",
      "path": "4"
    },
    "1811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP1",
      "path": "4"
    },
    "1812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1814": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "ADD",
      "path": "4"
    },
    "1815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "1818": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP1",
      "path": "4"
    },
    "1819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1821": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP2",
      "path": "4"
    },
    "1822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "1823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "ADD",
      "path": "4"
    },
    "1826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "1859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP2",
      "path": "4"
    },
    "1860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "1861": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "POP",
      "path": "4"
    },
    "1862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3420, 3425],
      "op": "DUP6",
      "path": "4"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "SUB"
    },
    "1871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "AND",
      "path": "4"
    },
    "1872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BA"
    },
    "1875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "SWAP1",
      "path": "4"
    },
    "1876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP3",
      "path": "4"
    },
    "1877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP2",
      "path": "4"
    },
    "1878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP1",
      "path": "4"
    },
    "1879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "AND",
      "path": "4"
    },
    "1885": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3412, 3481],
      "op": "JUMP",
      "path": "4"
    },
    "1886": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3512],
      "op": "DUP1",
      "path": "4"
    },
    "1888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3512],
      "op": "MLOAD",
      "path": "4"
    },
    "1889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3481],
      "op": "SWAP1",
      "path": "4"
    },
    "1890": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3481],
      "op": "SWAP2",
      "path": "4"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "branch": 25,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3516],
      "op": "ISZERO",
      "path": "4"
    },
    "1893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3491, 3712],
      "op": "PUSH2",
      "path": "4",
      "value": "0x704"
    },
    "1896": {
      "branch": 25,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3491, 3712],
      "op": "JUMPI",
      "path": "4"
    },
    "1897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3635, 3645],
      "op": "DUP1",
      "path": "4",
      "statement": 12
    },
    "1898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP1",
      "path": "4"
    },
    "1899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "ADD",
      "path": "4"
    },
    "1902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "SWAP1",
      "path": "4"
    },
    "1903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "MLOAD",
      "path": "4"
    },
    "1904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP2",
      "path": "4"
    },
    "1907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "LT",
      "path": "4"
    },
    "1908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "ISZERO",
      "path": "4"
    },
    "1909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH2",
      "path": "4",
      "value": "0x77D"
    },
    "1912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "JUMPI",
      "path": "4"
    },
    "1913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP1",
      "path": "4"
    },
    "1916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "REVERT",
      "path": "4"
    },
    "1917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "MLOAD",
      "path": "4"
    },
    "1920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH2",
      "path": "4",
      "value": "0x704"
    },
    "1923": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "JUMPI",
      "path": "4"
    },
    "1924": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MLOAD",
      "path": "4"
    },
    "1927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "1935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "1936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "1939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "1940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "1941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "1944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP3",
      "path": "4"
    },
    "1945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "1946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SUB",
      "path": "4"
    },
    "1947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP3",
      "path": "4"
    },
    "1948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "1949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "1951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "1952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "1953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "1956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "1957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FF"
    },
    "1960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "1962": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "1963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "CODECOPY",
      "path": "4"
    },
    "1964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "1967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "1968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "POP",
      "path": "4"
    },
    "1969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "POP",
      "path": "4"
    },
    "1970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MLOAD",
      "path": "4"
    },
    "1973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "1974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "1975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SUB",
      "path": "4"
    },
    "1976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP1",
      "path": "4"
    },
    "1977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "REVERT",
      "path": "4"
    },
    "1978": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1979": {
      "fn": "Address.functionCall",
      "offset": [3684, 3696],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1981": {
      "fn": "Address.functionCall",
      "offset": [3715, 3767],
      "op": "PUSH2",
      "path": "5",
      "statement": 13,
      "value": "0x7C9"
    },
    "1984": {
      "fn": "Address.functionCall",
      "offset": [3737, 3743],
      "op": "DUP5",
      "path": "5"
    },
    "1985": {
      "fn": "Address.functionCall",
      "offset": [3745, 3749],
      "op": "DUP5",
      "path": "5"
    },
    "1986": {
      "fn": "Address.functionCall",
      "offset": [3751, 3752],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1988": {
      "fn": "Address.functionCall",
      "offset": [3754, 3766],
      "op": "DUP6",
      "path": "5"
    },
    "1989": {
      "fn": "Address.functionCall",
      "offset": [3715, 3736],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D3"
    },
    "1992": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [3715, 3767],
      "op": "JUMP",
      "path": "5"
    },
    "1993": {
      "fn": "Address.functionCall",
      "offset": [3715, 3767],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1994": {
      "fn": "Address.functionCall",
      "offset": [3708, 3767],
      "op": "SWAP1",
      "path": "5"
    },
    "1995": {
      "fn": "Address.functionCall",
      "offset": [3708, 3767],
      "op": "POP",
      "path": "5"
    },
    "1996": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1997": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "SWAP4",
      "path": "5"
    },
    "1998": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "SWAP3",
      "path": "5"
    },
    "1999": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "POP",
      "path": "5"
    },
    "2000": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "POP",
      "path": "5"
    },
    "2001": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "POP",
      "path": "5"
    },
    "2002": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [3581, 3774],
      "op": "JUMP",
      "path": "5"
    },
    "2003": {
      "fn": "Address.functionCallWithValue",
      "offset": [4608, 5131],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2004": {
      "fn": "Address.functionCallWithValue",
      "offset": [4735, 4747],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2006": {
      "fn": "Address.functionCallWithValue",
      "offset": [4792, 4797],
      "op": "DUP3",
      "path": "5",
      "statement": 14
    },
    "2007": {
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4788],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "2008": {
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4797],
      "op": "LT",
      "path": "5"
    },
    "2009": {
      "branch": 21,
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4797],
      "op": "ISZERO",
      "path": "5"
    },
    "2010": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH2",
      "path": "5",
      "value": "0x814"
    },
    "2013": {
      "branch": 21,
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "JUMPI",
      "path": "5"
    },
    "2014": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2016": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MLOAD",
      "path": "5"
    },
    "2017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "2025": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "2026": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2028": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "2029": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "2030": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "2031": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2033": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "2034": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP3",
      "path": "5"
    },
    "2035": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "2036": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SUB",
      "path": "5"
    },
    "2037": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP3",
      "path": "5"
    },
    "2038": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "2039": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2041": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "2042": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "2043": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2045": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "2046": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "2047": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D9"
    },
    "2050": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2052": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "2053": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "CODECOPY",
      "path": "5"
    },
    "2054": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2056": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "2057": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "2058": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "POP",
      "path": "5"
    },
    "2059": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "POP",
      "path": "5"
    },
    "2060": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2062": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MLOAD",
      "path": "5"
    },
    "2063": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "2064": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "2065": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SUB",
      "path": "5"
    },
    "2066": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP1",
      "path": "5"
    },
    "2067": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "REVERT",
      "path": "5"
    },
    "2068": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2069": {
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4876],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x81D"
    },
    "2072": {
      "fn": "Address.functionCallWithValue",
      "offset": [4869, 4875],
      "op": "DUP6",
      "path": "5"
    },
    "2073": {
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4868],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92E"
    },
    "2076": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [4858, 4876],
      "op": "JUMP",
      "path": "5"
    },
    "2077": {
      "branch": 22,
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4876],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2078": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "2081": {
      "branch": 22,
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "JUMPI",
      "path": "5"
    },
    "2082": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2084": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP1",
      "path": "5"
    },
    "2085": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MLOAD",
      "path": "5"
    },
    "2086": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP2",
      "path": "5"
    },
    "2094": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "2095": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2097": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2099": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "2100": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "2101": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "2102": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "2104": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2106": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "2107": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "2108": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "2109": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2142": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2144": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "2145": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "2146": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "2147": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "2148": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MLOAD",
      "path": "5"
    },
    "2149": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "2150": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP2",
      "path": "5"
    },
    "2151": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "2152": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SUB",
      "path": "5"
    },
    "2153": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2155": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "2156": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "2157": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "REVERT",
      "path": "5"
    },
    "2158": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2159": {
      "fn": "Address.functionCallWithValue",
      "offset": [4981, 4993],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2161": {
      "fn": "Address.functionCallWithValue",
      "offset": [4995, 5018],
      "op": "DUP1",
      "path": "5"
    },
    "2162": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5028],
      "op": "DUP7",
      "path": "5"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5033],
      "op": "AND",
      "path": "5"
    },
    "2172": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5047],
      "op": "DUP6",
      "path": "5"
    },
    "2173": {
      "fn": "Address.functionCallWithValue",
      "offset": [5050, 5054],
      "op": "DUP8",
      "path": "5"
    },
    "2174": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2176": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2177": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2178": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2179": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2180": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2181": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "2182": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2184": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2185": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "2186": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2187": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "2188": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "2189": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2190": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2192": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "2193": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "LT",
      "path": "5"
    },
    "2194": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8AC"
    },
    "2197": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPI",
      "path": "5"
    },
    "2198": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2199": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2200": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2201": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2204": {
      "op": "NOT"
    },
    "2205": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "2206": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP3",
      "path": "5"
    },
    "2207": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2208": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2209": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2211": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2212": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2213": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2214": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2215": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2216": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x88D"
    },
    "2219": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMP",
      "path": "5"
    },
    "2220": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2221": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2223": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "2224": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2226": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "2227": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2230": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "EXP",
      "path": "5"
    },
    "2231": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "2232": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2233": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "NOT",
      "path": "5"
    },
    "2234": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2235": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2236": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "2237": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "2238": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP5",
      "path": "5"
    },
    "2239": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2240": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "2241": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2242": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2243": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "OR",
      "path": "5"
    },
    "2244": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP6",
      "path": "5"
    },
    "2245": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "2246": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2247": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2248": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2249": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2250": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2251": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2252": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "2253": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2254": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2255": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2256": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2257": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2258": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2260": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2262": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2263": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2264": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "2265": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "2266": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "2267": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP6",
      "path": "5"
    },
    "2268": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP8",
      "path": "5"
    },
    "2269": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "GAS",
      "path": "5"
    },
    "2270": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "CALL",
      "path": "5"
    },
    "2271": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP3",
      "path": "5"
    },
    "2272": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2273": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2274": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2275": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2276": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "2277": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2279": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "2280": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "EQ",
      "path": "5"
    },
    "2281": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90E"
    },
    "2284": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPI",
      "path": "5"
    },
    "2285": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2287": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "2288": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2289": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2290": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2292": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "NOT",
      "path": "5"
    },
    "2293": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2295": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2296": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2297": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "2298": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2299": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2300": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2302": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "2303": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2304": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "2305": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "2306": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2307": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2309": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2311": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP5",
      "path": "5"
    },
    "2312": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "2313": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2314": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x913"
    },
    "2317": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMP",
      "path": "5"
    },
    "2318": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2319": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2321": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2322": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2323": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2324": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "2325": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2326": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "POP",
      "path": "5"
    },
    "2327": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "2328": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "POP",
      "path": "5"
    },
    "2329": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5124],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0x923"
    },
    "2332": {
      "fn": "Address.functionCallWithValue",
      "offset": [5090, 5097],
      "op": "DUP3",
      "path": "5"
    },
    "2333": {
      "fn": "Address.functionCallWithValue",
      "offset": [5099, 5109],
      "op": "DUP3",
      "path": "5"
    },
    "2334": {
      "fn": "Address.functionCallWithValue",
      "offset": [5111, 5123],
      "op": "DUP7",
      "path": "5"
    },
    "2335": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5089],
      "op": "PUSH2",
      "path": "5",
      "value": "0x934"
    },
    "2338": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5072, 5124],
      "op": "JUMP",
      "path": "5"
    },
    "2339": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5124],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2340": {
      "fn": "Address.functionCallWithValue",
      "offset": [5065, 5124],
      "op": "SWAP8",
      "path": "5"
    },
    "2341": {
      "fn": "Address.functionCallWithValue",
      "offset": [4608, 5131],
      "op": "SWAP7",
      "path": "5"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4608, 5131],
      "op": "JUMP",
      "path": "5"
    },
    "2350": {
      "fn": "Address.isContract",
      "offset": [726, 1139],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2351": {
      "fn": "Address.isContract",
      "offset": [1086, 1106],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2352": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "ISZERO",
      "path": "5",
      "statement": 17
    },
    "2353": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "ISZERO",
      "path": "5"
    },
    "2354": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "SWAP1",
      "path": "5"
    },
    "2355": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [726, 1139],
      "op": "JUMP",
      "path": "5"
    },
    "2356": {
      "fn": "Address._verifyCallResult",
      "offset": [7091, 7816],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2357": {
      "fn": "Address._verifyCallResult",
      "offset": [7206, 7218],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2359": {
      "branch": 23,
      "fn": "Address._verifyCallResult",
      "offset": [7234, 7241],
      "op": "DUP4",
      "path": "5"
    },
    "2360": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "ISZERO",
      "path": "5"
    },
    "2361": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "PUSH2",
      "path": "5",
      "value": "0x943"
    },
    "2364": {
      "branch": 23,
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "JUMPI",
      "path": "5"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "fn": "Address._verifyCallResult",
      "offset": [7264, 7274],
      "op": "DUP2",
      "path": "5",
      "statement": 18
    },
    "2367": {
      "fn": "Address._verifyCallResult",
      "offset": [7257, 7274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CC"
    },
    "2370": {
      "fn": "Address._verifyCallResult",
      "offset": [7257, 7274],
      "op": "JUMP",
      "path": "5"
    },
    "2371": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2372": {
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7392],
      "op": "DUP3",
      "path": "5"
    },
    "2373": {
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7392],
      "op": "MLOAD",
      "path": "5"
    },
    "2374": {
      "branch": 24,
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7396],
      "op": "ISZERO",
      "path": "5"
    },
    "2375": {
      "fn": "Address._verifyCallResult",
      "offset": [7371, 7800],
      "op": "PUSH2",
      "path": "5",
      "value": "0x953"
    },
    "2378": {
      "branch": 24,
      "fn": "Address._verifyCallResult",
      "offset": [7371, 7800],
      "op": "JUMPI",
      "path": "5"
    },
    "2379": {
      "fn": "Address._verifyCallResult",
      "offset": [7633, 7643],
      "op": "DUP3",
      "path": "5"
    },
    "2380": {
      "fn": "Address._verifyCallResult",
      "offset": [7627, 7644],
      "op": "MLOAD",
      "path": "5"
    },
    "2381": {
      "fn": "Address._verifyCallResult",
      "offset": [7693, 7708],
      "op": "DUP1",
      "path": "5"
    },
    "2382": {
      "fn": "Address._verifyCallResult",
      "offset": [7680, 7690],
      "op": "DUP5",
      "path": "5"
    },
    "2383": {
      "fn": "Address._verifyCallResult",
      "offset": [7676, 7678],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2385": {
      "fn": "Address._verifyCallResult",
      "offset": [7672, 7691],
      "op": "ADD",
      "path": "5"
    },
    "2386": {
      "fn": "Address._verifyCallResult",
      "offset": [7665, 7709],
      "op": "REVERT",
      "path": "5"
    },
    "2387": {
      "fn": "Address._verifyCallResult",
      "offset": [7582, 7727],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2388": {
      "fn": "Address._verifyCallResult",
      "offset": [7772, 7784],
      "op": "DUP2",
      "path": "5",
      "statement": 19
    },
    "2389": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2391": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2400": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "2401": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2403": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2404": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2405": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2406": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2408": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2409": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "2410": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2411": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "2412": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "2413": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "2414": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2415": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2416": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2417": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2418": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2419": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "2420": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2422": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2423": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "2424": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2425": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2426": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2427": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2428": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2430": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2431": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2432": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2433": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2434": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2435": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2437": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2438": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2439": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2440": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "LT",
      "path": "5"
    },
    "2441": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ISZERO",
      "path": "5"
    },
    "2442": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x99D"
    },
    "2445": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPI",
      "path": "5"
    },
    "2446": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2447": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2448": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2449": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2450": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2451": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "2452": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2453": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "2454": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2456": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2457": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x985"
    },
    "2460": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMP",
      "path": "5"
    },
    "2461": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2462": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2463": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2464": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2465": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2466": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2467": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2468": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2469": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2470": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2471": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2472": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2474": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "AND",
      "path": "5"
    },
    "2475": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2476": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ISZERO",
      "path": "5"
    },
    "2477": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9CA"
    },
    "2480": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPI",
      "path": "5"
    },
    "2481": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2482": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "2483": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "2484": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2485": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2486": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2488": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "2489": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2491": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "2492": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2495": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "EXP",
      "path": "5"
    },
    "2496": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "2497": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "NOT",
      "path": "5"
    },
    "2498": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "AND",
      "path": "5"
    },
    "2499": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "2500": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "2501": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2503": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "2504": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "2505": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2506": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2507": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2508": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP3",
      "path": "5"
    },
    "2509": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2510": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2511": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "2512": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2514": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "2515": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "2516": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "2517": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "2518": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "2519": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "REVERT",
      "path": "5"
    }
  },
  "sha1": "b212c0faf218855cafd41a9573963a08e7f4d433",
  "source": "pragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\ninterface IStableSwap {\n    function exchange(int128 i, int128 j, uint dx, uint min_dy) external;\n    function coins(uint i) external returns (IERC20);\n    function base_pool() external returns (IStableSwap);\n    function remove_liquidity_one_coin(uint256 amount, int128 i, uint256 min_amount) external;\n}\n\ninterface IMultiFeeDistribution {\n    function notifyRewardAmount(IERC20 rewardsToken, uint256 reward) external;\n}\n\ninterface IPancakeRouter {\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        IERC20[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n}\n\n\ncontract FeeConverter {\n    using SafeERC20 for IERC20;\n\n    address public feeDistributor;\n\n    function setFeeDistributor(address distributor) external {\n        require (feeDistributor == address(0));\n        feeDistributor = distributor;\n    }\n\n    function convertFees(uint i, uint j) external {\n        IERC20 inputCoin = IStableSwap(msg.sender).coins(i);\n        IERC20 outputCoin = IStableSwap(msg.sender).coins(j);\n\n        uint256 balance = inputCoin.balanceOf(address(this));\n        inputCoin.safeApprove(msg.sender, balance);\n        IStableSwap(msg.sender).exchange(int128(i), int128(j), balance, 0);\n    }\n\n    function notify(IERC20 coin) external {\n        uint256 balance = coin.balanceOf(address(this));\n        coin.safeApprove(feeDistributor, balance);\n        IMultiFeeDistribution(feeDistributor).notifyRewardAmount(coin, balance);\n    }\n\n}\n\n\ncontract MetapoolFeeConverter {\n    using SafeERC20 for IERC20;\n\n    address public feeDistributor;\n\n    function setFeeDistributor(address distributor) external {\n        require (feeDistributor == address(0));\n        feeDistributor = distributor;\n    }\n\n    function convertFees() external {\n        IERC20 inputCoin = IStableSwap(msg.sender).coins(0);\n        IERC20 outputCoin = IStableSwap(msg.sender).coins(1);\n\n        uint256 balance = inputCoin.balanceOf(address(this));\n        inputCoin.safeApprove(msg.sender, balance);\n        IStableSwap(msg.sender).exchange(0, 1, balance, 0);\n        balance = outputCoin.balanceOf(address(this));\n\n        IStableSwap basePool = IStableSwap(msg.sender).base_pool();\n        outputCoin = basePool.coins(0);\n\n        basePool.remove_liquidity_one_coin(balance, 0, 0);\n        balance = outputCoin.balanceOf(address(this));\n        outputCoin.approve(feeDistributor, balance);\n        IMultiFeeDistribution(feeDistributor).notifyRewardAmount(outputCoin, balance);\n    }\n\n}\n\n\n\ncontract PancakeFeeConverter {\n    using SafeERC20 for IERC20;\n\n    address public feeDistributor;\n    address public constant router = 0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F;\n\n    IERC20[] routerPath = [\n        IERC20(0),\n        IERC20(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c),  // BNB\n        IERC20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56)   // BUSD\n    ];\n\n    function setFeeDistributor(address distributor) external {\n        require (feeDistributor == address(0));\n        feeDistributor = distributor;\n    }\n\n    function convertFees(uint i, uint j) external {\n        IERC20 inputCoin = IStableSwap(msg.sender).coins(i);\n        IERC20 outputCoin = IStableSwap(msg.sender).coins(j);\n\n        uint256 balance = inputCoin.balanceOf(address(this));\n        inputCoin.safeApprove(msg.sender, balance);\n        IStableSwap(msg.sender).exchange(int128(i), int128(j), balance, 0);\n    }\n\n    function notify(IERC20 coin) public {\n        uint256 balance = coin.balanceOf(address(this));\n        IERC20[] memory path = routerPath;\n        path[0] = coin;\n\n        coin.safeApprove(router, balance);\n        IPancakeRouter(router).swapExactTokensForTokens(balance, 0, path, address(this), block.timestamp);\n\n        coin = path[2];\n        balance = coin.balanceOf(address(this));\n        coin.safeApprove(feeDistributor, balance);\n        IMultiFeeDistribution(feeDistributor).notifyRewardAmount(coin, balance);\n    }\n}\n",
  "sourceMap": "1673:1020:10:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/FeeConverter.sol",
  "type": "contract"
}
