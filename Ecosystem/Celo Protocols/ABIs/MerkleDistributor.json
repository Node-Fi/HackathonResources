{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposalAuthority",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reviewAuthority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalAuthority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "proposewMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reviewAuthority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewPendingMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardMinter",
      "outputs": [
        {
          "internalType": "contract Minter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Minter",
          "name": "_rewardMinter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setProposalAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setReviewAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/MerkleDistributor.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleDistributor.sol",
    "exportedSymbols": {
      "MerkleDistributor": [4199],
      "Minter": [3802]
    },
    "id": 4200,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3794,
        "literals": ["solidity", "0.7", ".6"],
        "nodeType": "PragmaDirective",
        "src": "39:22:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3802,
        "linearizedBaseContracts": [3802],
        "name": "Minter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 3801,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3796,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3801,
                  "src": "100:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "100:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3798,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3801,
                  "src": "119:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "119:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "99:36:12"
            },
            "returnParameters": {
              "id": 3800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:0:12"
            },
            "scope": 3802,
            "src": "86:59:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4200,
        "src": "63:84:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4199,
        "linearizedBaseContracts": [4199],
        "name": "MerkleDistributor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "71c5ecb1",
            "id": 3805,
            "mutability": "mutable",
            "name": "merkleRoots",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "334:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 3803,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 3804,
              "nodeType": "ArrayTypeName",
              "src": "334:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9637f475",
            "id": 3807,
            "mutability": "mutable",
            "name": "pendingMerkleRoot",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "368:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3806,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "368:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b58166f2",
            "id": 3809,
            "mutability": "mutable",
            "name": "lastRoot",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "406:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3808,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "891dfef3",
            "id": 3811,
            "mutability": "mutable",
            "name": "proposalAuthority",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "500:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3810,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "500:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10531aa2",
            "id": 3813,
            "mutability": "mutable",
            "name": "reviewAuthority",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "608:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3812,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3823,
            "name": "Claimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 3823,
                  "src": "668:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3817,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3823,
                  "src": "697:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3823,
                  "src": "720:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3821,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3823,
                  "src": "745:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:107:12"
            },
            "src": "645:121:12"
          },
          {
            "constant": false,
            "id": 3829,
            "mutability": "mutable",
            "name": "claimedBitMap",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "815:69:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 3828,
              "keyType": {
                "id": 3824,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "823:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "815:47:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 3827,
                "keyType": {
                  "id": 3825,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "842:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "834:27:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 3826,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "853:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9b8e5563",
            "id": 3831,
            "mutability": "mutable",
            "name": "rewardMinter",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "890:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Minter_$3802",
              "typeString": "contract Minter"
            },
            "typeName": {
              "id": 3830,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3802,
              "src": "890:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$3802",
                "typeString": "contract Minter"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "996:99:12",
              "statements": [
                {
                  "expression": {
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3838,
                      "name": "proposalAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3811,
                      "src": "1006:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3839,
                      "name": "_proposalAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3833,
                      "src": "1026:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:38:12"
                },
                {
                  "expression": {
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3842,
                      "name": "reviewAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3813,
                      "src": "1054:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3843,
                      "name": "_reviewAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "1072:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1054:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:34:12"
                }
              ]
            },
            "id": 3847,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3833,
                  "mutability": "mutable",
                  "name": "_proposalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "935:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3835,
                  "mutability": "mutable",
                  "name": "_reviewAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "963:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:54:12"
            },
            "returnParameters": {
              "id": 3837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:12"
            },
            "scope": 4199,
            "src": "923:172:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3864,
              "nodeType": "Block",
              "src": "1149:89:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Minter_$3802",
                          "typeString": "contract Minter"
                        },
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3853,
                          "name": "rewardMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3831,
                          "src": "1167:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minter_$3802",
                            "typeString": "contract Minter"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1190:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3854,
                            "name": "Minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3802,
                            "src": "1183:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Minter_$3802_$",
                              "typeString": "type(contract Minter)"
                            }
                          },
                          "id": 3856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:9:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minter_$3802",
                            "typeString": "contract Minter"
                          }
                        },
                        "src": "1167:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1159:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3859,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:34:12"
                },
                {
                  "expression": {
                    "id": 3862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3860,
                      "name": "rewardMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3831,
                      "src": "1203:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minter_$3802",
                        "typeString": "contract Minter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3861,
                      "name": "_rewardMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3849,
                      "src": "1218:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minter_$3802",
                        "typeString": "contract Minter"
                      }
                    },
                    "src": "1203:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minter_$3802",
                      "typeString": "contract Minter"
                    }
                  },
                  "id": 3863,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:28:12"
                }
              ]
            },
            "functionSelector": "fca3b5aa",
            "id": 3865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3849,
                  "mutability": "mutable",
                  "name": "_rewardMinter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3865,
                  "src": "1120:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Minter_$3802",
                    "typeString": "contract Minter"
                  },
                  "typeName": {
                    "id": 3848,
                    "name": "Minter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3802,
                    "src": "1120:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minter_$3802",
                      "typeString": "contract Minter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:22:12"
            },
            "returnParameters": {
              "id": 3851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:12"
            },
            "scope": 4199,
            "src": "1101:137:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3881,
              "nodeType": "Block",
              "src": "1299:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3871,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1317:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1317:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3873,
                          "name": "proposalAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3811,
                          "src": "1331:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1317:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1309:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3876,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:40:12"
                },
                {
                  "expression": {
                    "id": 3879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3877,
                      "name": "proposalAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3811,
                      "src": "1359:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3878,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3867,
                      "src": "1379:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1359:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3880,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:28:12"
                }
              ]
            },
            "functionSelector": "71fad23e",
            "id": 3882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProposalAuthority",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3867,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3882,
                  "src": "1274:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:18:12"
            },
            "returnParameters": {
              "id": 3869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:0:12"
            },
            "scope": 4199,
            "src": "1244:150:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3898,
              "nodeType": "Block",
              "src": "1453:91:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3888,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1471:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1471:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3890,
                          "name": "reviewAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "1485:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1471:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1463:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3893,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:38:12"
                },
                {
                  "expression": {
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3894,
                      "name": "reviewAuthority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3813,
                      "src": "1511:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3895,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3884,
                      "src": "1529:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1511:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3897,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:26:12"
                }
              ]
            },
            "functionSelector": "b74a29ce",
            "id": 3899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReviewAuthority",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3884,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3899,
                  "src": "1428:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:18:12"
            },
            "returnParameters": {
              "id": 3886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:12"
            },
            "scope": 4199,
            "src": "1400:144:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "1698:238:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3905,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1716:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1716:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3907,
                          "name": "proposalAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3811,
                          "src": "1730:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1716:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1708:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3910,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3912,
                          "name": "pendingMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3807,
                          "src": "1766:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 3913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1787:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "1766:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1758:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3916,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3918,
                            "name": "merkleRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3805,
                            "src": "1810:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "id": 3919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1810:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3532",
                          "id": 3920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1831:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_52_by_1",
                            "typeString": "int_const 52"
                          },
                          "value": "52"
                        },
                        "src": "1810:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1802:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3923,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:32:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3925,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1852:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1852:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3927,
                            "name": "lastRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3809,
                            "src": "1870:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "363034383030",
                            "id": 3928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1881:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_604800_by_1",
                              "typeString": "int_const 604800"
                            },
                            "value": "604800"
                          },
                          "src": "1870:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1852:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1844:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3932,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:44:12"
                },
                {
                  "expression": {
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3933,
                      "name": "pendingMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3807,
                      "src": "1898:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3934,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3901,
                      "src": "1918:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1898:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:31:12"
                }
              ]
            },
            "functionSelector": "a795e7d3",
            "id": 3938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposewMerkleRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3901,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 3938,
                  "src": "1670:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3900,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1669:21:12"
            },
            "returnParameters": {
              "id": 3903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:12"
            },
            "scope": 4199,
            "src": "1642:294:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3977,
              "nodeType": "Block",
              "src": "2149:275:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3944,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2167:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2167:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3946,
                          "name": "reviewAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "2181:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2167:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2159:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3949,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:38:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3951,
                          "name": "pendingMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3807,
                          "src": "2215:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 3952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2236:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2215:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2207:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3955,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:34:12"
                },
                {
                  "condition": {
                    "id": 3956,
                    "name": "_approved",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3940,
                    "src": "2255:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3973,
                  "nodeType": "IfStatement",
                  "src": "2251:133:12",
                  "trueBody": {
                    "id": 3972,
                    "nodeType": "Block",
                    "src": "2266:118:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3960,
                              "name": "pendingMerkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3807,
                              "src": "2297:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 3957,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3805,
                              "src": "2280:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 3959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2280:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 3961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2280:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3962,
                        "nodeType": "ExpressionStatement",
                        "src": "2280:35:12"
                      },
                      {
                        "expression": {
                          "id": 3970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3963,
                            "name": "lastRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3809,
                            "src": "2329:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3964,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2340:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2340:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "363034383030",
                                "id": 3966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2358:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_604800_by_1",
                                  "typeString": "int_const 604800"
                                },
                                "value": "604800"
                              },
                              "src": "2340:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "363034383030",
                              "id": 3968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2367:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "604800"
                            },
                            "src": "2340:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2329:44:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3971,
                        "nodeType": "ExpressionStatement",
                        "src": "2329:44:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2393:24:12",
                    "subExpression": {
                      "id": 3974,
                      "name": "pendingMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3807,
                      "src": "2400:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3976,
                  "nodeType": "ExpressionStatement",
                  "src": "2393:24:12"
                }
              ]
            },
            "functionSelector": "a1622bb0",
            "id": 3978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reviewPendingMerkleRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 3978,
                  "src": "2126:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2125:16:12"
            },
            "returnParameters": {
              "id": 3942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:0:12"
            },
            "scope": 4199,
            "src": "2093:331:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4020,
              "nodeType": "Block",
              "src": "2512:268:12",
              "statements": [
                {
                  "assignments": [3988],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3988,
                      "mutability": "mutable",
                      "name": "claimedWordIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 4020,
                      "src": "2522:24:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3987,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2522:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3992,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3989,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3982,
                      "src": "2549:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2557:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "2549:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2522:38:12"
                },
                {
                  "assignments": [3994],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3994,
                      "mutability": "mutable",
                      "name": "claimedBitIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 4020,
                      "src": "2570:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3993,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2570:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3998,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3995,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3982,
                      "src": "2596:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 3996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2604:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "2596:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2570:37:12"
                },
                {
                  "assignments": [4000],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4000,
                      "mutability": "mutable",
                      "name": "claimedWord",
                      "nodeType": "VariableDeclaration",
                      "scope": 4020,
                      "src": "2617:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2617:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4006,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4001,
                        "name": "claimedBitMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3829,
                        "src": "2639:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 4003,
                      "indexExpression": {
                        "id": 4002,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3980,
                        "src": "2653:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2639:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 4005,
                    "indexExpression": {
                      "id": 4004,
                      "name": "claimedWordIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3988,
                      "src": "2666:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2639:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2617:66:12"
                },
                {
                  "assignments": [4008],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4008,
                      "mutability": "mutable",
                      "name": "mask",
                      "nodeType": "VariableDeclaration",
                      "scope": 4020,
                      "src": "2693:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2693:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4013,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 4009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2709:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<<",
                        "rightExpression": {
                          "id": 4010,
                          "name": "claimedBitIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3994,
                          "src": "2714:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2709:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 4012,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2708:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2693:37:12"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4014,
                        "name": "claimedWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4000,
                        "src": "2747:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 4015,
                        "name": "mask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4008,
                        "src": "2761:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2747:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4017,
                      "name": "mask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "2769:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2747:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3986,
                  "id": 4019,
                  "nodeType": "Return",
                  "src": "2740:33:12"
                }
              ]
            },
            "functionSelector": "f364c90c",
            "id": 4021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3980,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 4021,
                  "src": "2449:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3982,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 4021,
                  "src": "2470:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2448:36:12"
            },
            "returnParameters": {
              "id": 3986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3985,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4021,
                  "src": "2506:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2505:6:12"
            },
            "scope": 4199,
            "src": "2430:350:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4057,
              "nodeType": "Block",
              "src": "2851:228:12",
              "statements": [
                {
                  "assignments": [4029],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4029,
                      "mutability": "mutable",
                      "name": "claimedWordIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 4057,
                      "src": "2861:24:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2861:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4033,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4030,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4025,
                      "src": "2888:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 4031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2896:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "2888:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2861:38:12"
                },
                {
                  "assignments": [4035],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4035,
                      "mutability": "mutable",
                      "name": "claimedBitIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 4057,
                      "src": "2909:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2909:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4039,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4036,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4025,
                      "src": "2935:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2943:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "2935:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2909:37:12"
                },
                {
                  "expression": {
                    "id": 4055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4040,
                          "name": "claimedBitMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3829,
                          "src": "2956:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 4043,
                        "indexExpression": {
                          "id": 4041,
                          "name": "merkleIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4023,
                          "src": "2970:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2956:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 4044,
                      "indexExpression": {
                        "id": 4042,
                        "name": "claimedWordIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4029,
                        "src": "2983:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2956:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4045,
                            "name": "claimedBitMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3829,
                            "src": "3003:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 4047,
                          "indexExpression": {
                            "id": 4046,
                            "name": "merkleIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4023,
                            "src": "3017:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3003:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 4049,
                        "indexExpression": {
                          "id": 4048,
                          "name": "claimedWordIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4029,
                          "src": "3030:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3003:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 4050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3051:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 4051,
                              "name": "claimedBitIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4035,
                              "src": "3056:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3051:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4053,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3050:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3003:69:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2956:116:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4056,
                  "nodeType": "ExpressionStatement",
                  "src": "2956:116:12"
                }
              ]
            },
            "id": 4058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setClaimed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4023,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "2807:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4025,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "2828:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2806:36:12"
            },
            "returnParameters": {
              "id": 4027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:0:12"
            },
            "scope": 4199,
            "src": "2786:293:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4131,
              "nodeType": "Block",
              "src": "3193:615:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4071,
                          "name": "merkleIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4060,
                          "src": "3211:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 4072,
                            "name": "merkleRoots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3805,
                            "src": "3225:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "id": 4073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3225:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3211:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c654469737472696275746f723a20496e76616c6964206d65726b6c65496e646578",
                        "id": 4075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3245:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f21460e64bb7e6fd0f713437d97fa6e393e68b6c9063611c3756f4eafaefd90b",
                          "typeString": "literal_string \"MerkleDistributor: Invalid merkleIndex\""
                        },
                        "value": "MerkleDistributor: Invalid merkleIndex"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f21460e64bb7e6fd0f713437d97fa6e393e68b6c9063611c3756f4eafaefd90b",
                          "typeString": "literal_string \"MerkleDistributor: Invalid merkleIndex\""
                        }
                      ],
                      "id": 4070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3203:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:83:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4077,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:83:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3304:30:12",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4080,
                              "name": "merkleIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "3315:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4081,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4062,
                              "src": "3328:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4079,
                            "name": "isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4021,
                            "src": "3305:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 4082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3305:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e",
                        "id": 4084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c",
                          "typeString": "literal_string \"MerkleDistributor: Drop already claimed.\""
                        },
                        "value": "MerkleDistributor: Drop already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c",
                          "typeString": "literal_string \"MerkleDistributor: Drop already claimed.\""
                        }
                      ],
                      "id": 4078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3296:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:83:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4086,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:83:12"
                },
                {
                  "assignments": [4088],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4088,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "scope": 4131,
                      "src": "3426:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4087,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3426:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4098,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4092,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4062,
                            "src": "3468:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 4093,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3475:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3475:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 4095,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4064,
                            "src": "3487:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4090,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3451:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3451:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:43:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4089,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3441:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:54:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3426:69:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4101,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4067,
                            "src": "3520:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 4102,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3805,
                              "src": "3533:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 4104,
                            "indexExpression": {
                              "id": 4103,
                              "name": "merkleIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "3545:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3533:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4105,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4088,
                            "src": "3559:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 4100,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4198,
                          "src": "3513:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] calldata,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 4106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3513:51:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e",
                        "id": 4107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3566:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2",
                          "typeString": "literal_string \"MerkleDistributor: Invalid proof.\""
                        },
                        "value": "MerkleDistributor: Invalid proof."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2",
                          "typeString": "literal_string \"MerkleDistributor: Invalid proof.\""
                        }
                      ],
                      "id": 4099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3505:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3505:97:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4109,
                  "nodeType": "ExpressionStatement",
                  "src": "3505:97:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4111,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4060,
                        "src": "3672:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4112,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4062,
                        "src": "3685:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4110,
                      "name": "_setClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4058,
                      "src": "3660:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3719:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3719:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 4120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4064,
                        "src": "3731:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4115,
                        "name": "rewardMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3831,
                        "src": "3701:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minter_$3802",
                          "typeString": "contract Minter"
                        }
                      },
                      "id": 4117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3801,
                      "src": "3701:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:37:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4124,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4060,
                        "src": "3762:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4125,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4062,
                        "src": "3775:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3782:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3782:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 4128,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4064,
                        "src": "3794:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4123,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3823,
                      "src": "3754:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 4129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4130,
                  "nodeType": "EmitStatement",
                  "src": "3749:52:12"
                }
              ]
            },
            "functionSelector": "ea25e176",
            "id": 4132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 4132,
                  "src": "3100:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4062,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 4132,
                  "src": "3121:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4064,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4132,
                  "src": "3136:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4067,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 4132,
                  "src": "3152:30:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4065,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3152:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 4066,
                    "nodeType": "ArrayTypeName",
                    "src": "3152:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3099:84:12"
            },
            "returnParameters": {
              "id": 4069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3193:0:12"
            },
            "scope": 4199,
            "src": "3085:723:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4197,
              "nodeType": "Block",
              "src": "3913:682:12",
              "statements": [
                {
                  "assignments": [4145],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4145,
                      "mutability": "mutable",
                      "name": "computedHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 4197,
                      "src": "3923:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4144,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3923:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4147,
                  "initialValue": {
                    "id": 4146,
                    "name": "leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4139,
                    "src": "3946:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:27:12"
                },
                {
                  "body": {
                    "id": 4191,
                    "nodeType": "Block",
                    "src": "4004:472:12",
                    "statements": [
                      {
                        "assignments": [4160],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4160,
                            "mutability": "mutable",
                            "name": "proofElement",
                            "nodeType": "VariableDeclaration",
                            "scope": 4191,
                            "src": "4018:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 4159,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4018:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4164,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4161,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4135,
                            "src": "4041:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 4163,
                          "indexExpression": {
                            "id": 4162,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4149,
                            "src": "4047:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4041:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4018:31:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 4167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4165,
                            "name": "computedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4145,
                            "src": "4068:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 4166,
                            "name": "proofElement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4160,
                            "src": "4084:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4068:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4189,
                          "nodeType": "Block",
                          "src": "4285:181:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 4187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4179,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4145,
                                  "src": "4381:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 4183,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4160,
                                          "src": "4423:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 4184,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4145,
                                          "src": "4437:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 4181,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "4406:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 4182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "4406:16:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 4185,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4406:44:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 4180,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "4396:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 4186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4396:55:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4381:70:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 4188,
                              "nodeType": "ExpressionStatement",
                              "src": "4381:70:12"
                            }
                          ]
                        },
                        "id": 4190,
                        "nodeType": "IfStatement",
                        "src": "4064:402:12",
                        "trueBody": {
                          "id": 4178,
                          "nodeType": "Block",
                          "src": "4098:181:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 4176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4168,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4145,
                                  "src": "4194:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 4172,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4145,
                                          "src": "4236:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 4173,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4160,
                                          "src": "4250:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 4170,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "4219:3:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 4171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "4219:16:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 4174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4219:44:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 4169,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "4209:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 4175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4209:55:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4194:70:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 4177,
                              "nodeType": "ExpressionStatement",
                              "src": "4194:70:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4152,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4149,
                      "src": "3981:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4153,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4135,
                        "src": "3985:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 4154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3985:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3981:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4192,
                  "initializationExpression": {
                    "assignments": [4149],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4149,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 4192,
                        "src": "3966:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3966:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4151,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3978:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3966:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3999:3:12",
                      "subExpression": {
                        "id": 4156,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "3999:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4158,
                    "nodeType": "ExpressionStatement",
                    "src": "3999:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3961:515:12"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 4195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4193,
                      "name": "computedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "4568:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4194,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "4584:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4568:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4143,
                  "id": 4196,
                  "nodeType": "Return",
                  "src": "4561:27:12"
                }
              ]
            },
            "id": 4198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4135,
                  "mutability": "mutable",
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "3830:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4133,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3830:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 4134,
                    "nodeType": "ArrayTypeName",
                    "src": "3830:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "mutability": "mutable",
                  "name": "root",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "3856:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3856:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "3870:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3829:54:12"
            },
            "returnParameters": {
              "id": 4143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "3907:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3906:6:12"
            },
            "scope": 4199,
            "src": "3814:781:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4200,
        "src": "300:4298:12"
      }
    ],
    "src": "39:4560:12"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161087e38038061087e8339818101604052604081101561003357600080fd5b508051602090910151600380546001600160a01b039384166001600160a01b031991821617909155600480549390921692169190911790556108048061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a1622bb01161008c578063b74a29ce11610066578063b74a29ce146101ab578063ea25e176146101d1578063f364c90c14610254578063fca3b5aa1461028b576100cf565b8063a1622bb014610167578063a795e7d314610186578063b58166f2146101a3576100cf565b806310531aa2146100d457806371c5ecb1146100f857806371fad23e14610127578063891dfef31461014f5780639637f475146101575780639b8e55631461015f575b600080fd5b6100dc6102b1565b604080516001600160a01b039092168252519081900360200190f35b6101156004803603602081101561010e57600080fd5b50356102c0565b60408051918252519081900360200190f35b61014d6004803603602081101561013d57600080fd5b50356001600160a01b03166102e1565b005b6100dc61031a565b610115610329565b6100dc61032f565b61014d6004803603602081101561017d57600080fd5b5035151561033e565b61014d6004803603602081101561019c57600080fd5b50356103b2565b6101156103fd565b61014d600480360360208110156101c157600080fd5b50356001600160a01b0316610403565b61014d600480360360808110156101e757600080fd5b8135916020810135916040820135919081019060808101606082013564010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184602083028401116401000000008311171561024957600080fd5b50909250905061043c565b6102776004803603604081101561026a57600080fd5b508035906020013561061c565b604080519115158252519081900360200190f35b61014d600480360360208110156102a157600080fd5b50356001600160a01b031661064d565b6004546001600160a01b031681565b600081815481106102d057600080fd5b600091825260209091200154905081565b6003546001600160a01b031633146102f857600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60015481565b6006546001600160a01b031681565b6004546001600160a01b0316331461035557600080fd5b60015461036157600080fd5b80156103aa576001805460008054928301815580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015562093a80420462093a80026002555b506000600155565b6003546001600160a01b031633146103c957600080fd5b600154156103d657600080fd5b6000546034116103e557600080fd5b60025462093a800142116103f857600080fd5b600155565b60025481565b6004546001600160a01b0316331461041a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600054851061047c5760405162461bcd60e51b81526004018080602001828103825260268152602001806107a96026913960400191505060405180910390fd5b610486858561061c565b156104c25760405162461bcd60e51b81526004018080602001828103825260288152602001806107606028913960400191505060405180910390fd5b6040805160208082018790523360601b82840152605480830187905283518084039091018152607490920190925280519101206000805461051d9185918591908a90811061050c57fe5b906000526020600020015484610685565b6105585760405162461bcd60e51b81526004018080602001828103825260218152602001806107886021913960400191505060405180910390fd5b610562868661072d565b600654604080516340c10f1960e01b81523360048201526024810187905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b5050604080518981526020810189905233818301526060810188905290517fb94bf7f9302edf52a596286915a69b4b0685574cffdedd0712e3c62f2550f0ba9350908190036080019150a1505050505050565b60009182526005602090815260408084206101008404855290915290912054600160ff9092169190911b9081161490565b6006546001600160a01b03161561066357600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600081815b858110156107215760008787838181106106a057fe5b9050602002013590508083116106e65782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610718565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b5060010161068a565b50909214949350505050565b6000918252600560209081526040808420610100840485529091529091208054600160ff9093169290921b909117905556fe4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a20496e76616c6964206d65726b6c65496e646578a26469706673582212206494e8bb46d41b8127560093815cc32999e2aff63025a5b474c27a391074feb164736f6c63430007060033",
  "bytecodeSha1": "8857a182d9dc2de1fc1e7cbf4b3e089eff9946fc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "MerkleDistributor",
  "coverageMap": {
    "branches": {
      "12": {
        "MerkleDistributor.claim": {
          "35": [3211, 3243, true],
          "36": [3304, 3334, true],
          "37": [3513, 3564, true]
        },
        "MerkleDistributor.proposewMerkleRoot": {
          "31": [1716, 1747, true],
          "32": [1766, 1791, true],
          "33": [1852, 1887, true]
        },
        "MerkleDistributor.reviewPendingMerkleRoot": {
          "29": [2167, 2196, true],
          "30": [2255, 2264, false]
        },
        "MerkleDistributor.setMinter": {
          "38": [1167, 1192, true]
        },
        "MerkleDistributor.setProposalAuthority": {
          "28": [1317, 1348, true]
        },
        "MerkleDistributor.setReviewAuthority": {
          "34": [1471, 1500, true]
        },
        "MerkleDistributor.verify": {
          "39": [4068, 4096, false]
        }
      }
    },
    "statements": {
      "12": {
        "MerkleDistributor._setClaimed": {
          "27": [2956, 3072]
        },
        "MerkleDistributor.claim": {
          "14": [3203, 3286],
          "15": [3296, 3379],
          "16": [3505, 3602],
          "17": [3660, 3691],
          "18": [3701, 3738],
          "19": [3749, 3801]
        },
        "MerkleDistributor.isClaimed": {
          "20": [2740, 2773]
        },
        "MerkleDistributor.proposewMerkleRoot": {
          "7": [1708, 1748],
          "8": [1758, 1792],
          "9": [1802, 1834],
          "10": [1844, 1888],
          "11": [1898, 1929]
        },
        "MerkleDistributor.reviewPendingMerkleRoot": {
          "2": [2159, 2197],
          "3": [2207, 2241],
          "4": [2280, 2315],
          "5": [2329, 2373],
          "6": [2393, 2417]
        },
        "MerkleDistributor.setMinter": {
          "21": [1159, 1193],
          "22": [1203, 1231]
        },
        "MerkleDistributor.setProposalAuthority": {
          "0": [1309, 1349],
          "1": [1359, 1387]
        },
        "MerkleDistributor.setReviewAuthority": {
          "12": [1463, 1501],
          "13": [1511, 1537]
        },
        "MerkleDistributor.verify": {
          "23": [4194, 4264],
          "24": [4381, 4451],
          "25": [3999, 4002],
          "26": [4561, 4588]
        }
      }
    }
  },
  "dependencies": ["Minter"],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a1622bb01161008c578063b74a29ce11610066578063b74a29ce146101ab578063ea25e176146101d1578063f364c90c14610254578063fca3b5aa1461028b576100cf565b8063a1622bb014610167578063a795e7d314610186578063b58166f2146101a3576100cf565b806310531aa2146100d457806371c5ecb1146100f857806371fad23e14610127578063891dfef31461014f5780639637f475146101575780639b8e55631461015f575b600080fd5b6100dc6102b1565b604080516001600160a01b039092168252519081900360200190f35b6101156004803603602081101561010e57600080fd5b50356102c0565b60408051918252519081900360200190f35b61014d6004803603602081101561013d57600080fd5b50356001600160a01b03166102e1565b005b6100dc61031a565b610115610329565b6100dc61032f565b61014d6004803603602081101561017d57600080fd5b5035151561033e565b61014d6004803603602081101561019c57600080fd5b50356103b2565b6101156103fd565b61014d600480360360208110156101c157600080fd5b50356001600160a01b0316610403565b61014d600480360360808110156101e757600080fd5b8135916020810135916040820135919081019060808101606082013564010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184602083028401116401000000008311171561024957600080fd5b50909250905061043c565b6102776004803603604081101561026a57600080fd5b508035906020013561061c565b604080519115158252519081900360200190f35b61014d600480360360208110156102a157600080fd5b50356001600160a01b031661064d565b6004546001600160a01b031681565b600081815481106102d057600080fd5b600091825260209091200154905081565b6003546001600160a01b031633146102f857600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60015481565b6006546001600160a01b031681565b6004546001600160a01b0316331461035557600080fd5b60015461036157600080fd5b80156103aa576001805460008054928301815580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015562093a80420462093a80026002555b506000600155565b6003546001600160a01b031633146103c957600080fd5b600154156103d657600080fd5b6000546034116103e557600080fd5b60025462093a800142116103f857600080fd5b600155565b60025481565b6004546001600160a01b0316331461041a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600054851061047c5760405162461bcd60e51b81526004018080602001828103825260268152602001806107a96026913960400191505060405180910390fd5b610486858561061c565b156104c25760405162461bcd60e51b81526004018080602001828103825260288152602001806107606028913960400191505060405180910390fd5b6040805160208082018790523360601b82840152605480830187905283518084039091018152607490920190925280519101206000805461051d9185918591908a90811061050c57fe5b906000526020600020015484610685565b6105585760405162461bcd60e51b81526004018080602001828103825260218152602001806107886021913960400191505060405180910390fd5b610562868661072d565b600654604080516340c10f1960e01b81523360048201526024810187905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b5050604080518981526020810189905233818301526060810188905290517fb94bf7f9302edf52a596286915a69b4b0685574cffdedd0712e3c62f2550f0ba9350908190036080019150a1505050505050565b60009182526005602090815260408084206101008404855290915290912054600160ff9092169190911b9081161490565b6006546001600160a01b03161561066357600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600081815b858110156107215760008787838181106106a057fe5b9050602002013590508083116106e65782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610718565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b5060010161068a565b50909214949350505050565b6000918252600560209081526040808420610100840485529091529091208054600160ff9093169290921b909117905556fe4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a20496e76616c6964206d65726b6c65496e646578a26469706673582212206494e8bb46d41b8127560093815cc32999e2aff63025a5b474c27a391074feb164736f6c63430007060033",
  "deployedSourceMap": "300:4298:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:30;;;:::i;:::-;;;;-1:-1:-1;;;;;608:30:12;;;;;;;;;;;;;;334:28;;;;;;;;;;;;;;;;-1:-1:-1;334:28:12;;:::i;:::-;;;;;;;;;;;;;;;;1244:150;;;;;;;;;;;;;;;;-1:-1:-1;1244:150:12;-1:-1:-1;;;;;1244:150:12;;:::i;:::-;;500:32;;;:::i;368:::-;;;:::i;890:26::-;;;:::i;2093:331::-;;;;;;;;;;;;;;;;-1:-1:-1;2093:331:12;;;;:::i;1642:294::-;;;;;;;;;;;;;;;;-1:-1:-1;1642:294:12;;:::i;406:23::-;;;:::i;1400:144::-;;;;;;;;;;;;;;;;-1:-1:-1;1400:144:12;-1:-1:-1;;;;;1400:144:12;;:::i;3085:723::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3085:723:12;;-1:-1:-1;3085:723:12;-1:-1:-1;3085:723:12;:::i;2430:350::-;;;;;;;;;;;;;;;;-1:-1:-1;2430:350:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1101:137;;;;;;;;;;;;;;;;-1:-1:-1;1101:137:12;-1:-1:-1;;;;;1101:137:12;;:::i;608:30::-;;;-1:-1:-1;;;;;608:30:12;;:::o;334:28::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;334:28:12;:::o;1244:150::-;1331:17;;-1:-1:-1;;;;;1331:17:12;1317:10;:31;1309:40;;;;;;1359:17;:28;;-1:-1:-1;;;;;;1359:28:12;-1:-1:-1;;;;;1359:28:12;;;;;;;;;;1244:150::o;500:32::-;;;-1:-1:-1;;;;;500:32:12;;:::o;368:::-;;;;:::o;890:26::-;;;-1:-1:-1;;;;;890:26:12;;:::o;2093:331::-;2181:15;;-1:-1:-1;;;;;2181:15:12;2167:10;:29;2159:38;;;;;;2215:17;;2207:34;;;;;;2255:9;2251:133;;;2297:17;;;2280:11;:35;;;;;;;;;;;;;;2358:6;2340:15;:24;2367:6;2340:33;2329:8;:44;2251:133;-1:-1:-1;2393:24:12;2400:17;2393:24;2093:331::o;1642:294::-;1730:17;;-1:-1:-1;;;;;1730:17:12;1716:10;:31;1708:40;;;;;;1766:17;;:25;1758:34;;;;;;1810:11;:18;1831:2;-1:-1:-1;1802:32:12;;;;;;1870:8;;1881:6;1870:17;1852:15;:35;1844:44;;;;;;1898:17;:31;1642:294::o;406:23::-;;;;:::o;1400:144::-;1485:15;;-1:-1:-1;;;;;1485:15:12;1471:10;:29;1463:38;;;;;;1511:15;:26;;-1:-1:-1;;;;;;1511:26:12;-1:-1:-1;;;;;1511:26:12;;;;;;;;;;1400:144::o;3085:723::-;3225:11;:18;3211:32;;3203:83;;;;-1:-1:-1;;;3203:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:29;3315:11;3328:5;3305:9;:29::i;:::-;3304:30;3296:83;;;;-1:-1:-1;;;3296:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3451:43;;;;;;;;;;3475:10;3451:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3441:54;;;;;3426:12;3533:24;;3513:51;;3520:11;;;;3426:12;3545:11;;3533:24;;;;;;;;;;;;;;3559:4;3513:6;:51::i;:::-;3505:97;;;;-1:-1:-1;;;3505:97:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:31;3672:11;3685:5;3660:11;:31::i;:::-;3701:12;;:37;;;-1:-1:-1;;;3701:37:12;;3719:10;3701:37;;;;;;;;;;;;-1:-1:-1;;;;;3701:12:12;;;;:17;;:37;;;;;:12;;:37;;;;;;;;:12;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3754:47:12;;;;;;;;;;;;3782:10;3754:47;;;;;;;;;;;;;;-1:-1:-1;3754:47:12;;;;;;;-1:-1:-1;3754:47:12;3085:723;;;;;;:::o;2430:350::-;2506:4;2639:26;;;:13;:26;;;;;;;;2557:3;2549:11;;2639:44;;;;;;;;;2709:1;2596:11;;;;2709:20;;;;2747:18;;;:26;;2430:350::o;1101:137::-;1167:12;;-1:-1:-1;;;;;1167:12:12;:25;1159:34;;;;;;1203:12;:28;;-1:-1:-1;;;;;;1203:28:12;-1:-1:-1;;;;;1203:28:12;;;;;;;;;;1101:137::o;3814:781::-;3907:4;3946;3907;3961:515;3981:16;;;3961:515;;;4018:20;4041:5;;4047:1;4041:8;;;;;;;;;;;;;4018:31;;4084:12;4068;:28;4064:402;;4236:12;4250;4219:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:55;;;;;;4194:70;;4064:402;;;4423:12;4437;4406:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4396:55;;;;;;4381:70;;4064:402;-1:-1:-1;3999:3:12;;3961:515;;;-1:-1:-1;4568:20:12;;;;3814:781;-1:-1:-1;;;;3814:781:12:o;2786:293::-;2861:24;3003:26;;;:13;:26;;;;;;;;2896:3;2888:11;;3003:44;;;;;;;;;;3051:1;2935:11;;;;3051:20;;;;3003:69;;;2956:116;;2786:293::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [300, 4598],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1622BB0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB74A29CE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB74A29CE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xEA25E176 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xF364C90C EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x28B JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xA1622BB0 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA795E7D3 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xB58166F2 EQ PUSH2 0x1A3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x10531AA2 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x71FAD23E EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x891DFEF3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9637F475 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x9B8E5563 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x31A JUMP JUMPDEST PUSH2 0x115 PUSH2 0x329 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x32F JUMP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x33E JUMP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x403 JUMP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x43C JUMP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD SSTORE PUSH3 0x93A80 TIMESTAMP DIV PUSH3 0x93A80 MUL PUSH1 0x2 SSTORE JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x34 GT PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x93A80 ADD TIMESTAMP GT PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP6 LT PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7A9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x486 DUP6 DUP6 PUSH2 0x61C JUMP JUMPDEST ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x760 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x60 SHL DUP3 DUP5 ADD MSTORE PUSH1 0x54 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x74 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH2 0x51D SWAP2 DUP6 SWAP2 DUP6 SWAP2 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0x50C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x788 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x562 DUP7 DUP7 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE CALLER DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xB94BF7F9302EDF52A596286915A69B4B0685574CFFDEDD0712E3C62F2550F0BA SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH2 0x100 DUP5 DIV DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x6A0 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x6E6 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x718 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x68A JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH2 0x100 DUP5 DIV DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4D PUSH6 0x726B6C654469 PUSH20 0x7472696275746F723A2044726F7020616C726561 PUSH5 0x7920636C61 PUSH10 0x6D65642E4D65726B6C65 DIFFICULTY PUSH10 0x737472696275746F723A KECCAK256 0x49 PUSH15 0x76616C69642070726F6F662E4D6572 PUSH12 0x6C654469737472696275746F PUSH19 0x3A20496E76616C6964206D65726B6C65496E64 PUSH6 0x78A264697066 PUSH20 0x582212206494E8BB46D41B8127560093815CC329 SWAP10 0xE2 0xAF 0xF6 ADDRESS 0x25 0xA5 0xB4 PUSH21 0xC27A391074FEB164736F6C63430007060033000000 ",
  "pcMap": {
    "0": {
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [300, 4598],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [300, 4598],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [300, 4598],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [300, 4598],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [300, 4598],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [300, 4598],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [300, 4598],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [300, 4598],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [300, 4598],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA1622BB0"
    },
    "38": {
      "fn": null,
      "offset": [300, 4598],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB74A29CE"
    },
    "49": {
      "fn": null,
      "offset": [300, 4598],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB74A29CE"
    },
    "60": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AB"
    },
    "64": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xEA25E176"
    },
    "71": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D1"
    },
    "75": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF364C90C"
    },
    "82": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x254"
    },
    "86": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFCA3B5AA"
    },
    "93": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B"
    },
    "97": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMP",
      "path": "12"
    },
    "102": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPDEST",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "104": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA1622BB0"
    },
    "109": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x167"
    },
    "113": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA795E7D3"
    },
    "120": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x186"
    },
    "124": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB58166F2"
    },
    "131": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A3"
    },
    "135": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMP",
      "path": "12"
    },
    "140": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPDEST",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "142": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x10531AA2"
    },
    "147": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "153": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x71C5ECB1"
    },
    "158": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8"
    },
    "162": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "163": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "164": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x71FAD23E"
    },
    "169": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x127"
    },
    "173": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "174": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "175": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x891DFEF3"
    },
    "180": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "181": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14F"
    },
    "184": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "185": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9637F475"
    },
    "191": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "192": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x157"
    },
    "195": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "196": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9B8E5563"
    },
    "202": {
      "fn": null,
      "offset": [300, 4598],
      "op": "EQ",
      "path": "12"
    },
    "203": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15F"
    },
    "206": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPI",
      "path": "12"
    },
    "207": {
      "fn": null,
      "offset": [300, 4598],
      "op": "JUMPDEST",
      "path": "12"
    },
    "208": {
      "fn": null,
      "offset": [300, 4598],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [300, 4598],
      "op": "DUP1",
      "path": "12"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [300, 4598],
      "op": "REVERT",
      "path": "12"
    },
    "212": {
      "offset": [608, 638],
      "op": "JUMPDEST",
      "path": "12"
    },
    "213": {
      "fn": null,
      "offset": [608, 638],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "216": {
      "fn": null,
      "offset": [608, 638],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B1"
    },
    "219": {
      "fn": null,
      "jump": "i",
      "offset": [608, 638],
      "op": "JUMP",
      "path": "12"
    },
    "220": {
      "fn": null,
      "offset": [608, 638],
      "op": "JUMPDEST",
      "path": "12"
    },
    "221": {
      "fn": null,
      "offset": [608, 638],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "223": {
      "fn": null,
      "offset": [608, 638],
      "op": "DUP1",
      "path": "12"
    },
    "224": {
      "fn": null,
      "offset": [608, 638],
      "op": "MLOAD",
      "path": "12"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "SUB"
    },
    "233": {
      "offset": [608, 638],
      "op": "SWAP1",
      "path": "12"
    },
    "234": {
      "fn": null,
      "offset": [608, 638],
      "op": "SWAP3",
      "path": "12"
    },
    "235": {
      "fn": null,
      "offset": [608, 638],
      "op": "AND",
      "path": "12"
    },
    "236": {
      "fn": null,
      "offset": [608, 638],
      "op": "DUP3",
      "path": "12"
    },
    "237": {
      "fn": null,
      "offset": [608, 638],
      "op": "MSTORE",
      "path": "12"
    },
    "238": {
      "fn": null,
      "offset": [608, 638],
      "op": "MLOAD",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [608, 638],
      "op": "SWAP1",
      "path": "12"
    },
    "240": {
      "fn": null,
      "offset": [608, 638],
      "op": "DUP2",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [608, 638],
      "op": "SWAP1",
      "path": "12"
    },
    "242": {
      "fn": null,
      "offset": [608, 638],
      "op": "SUB",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [608, 638],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "245": {
      "fn": null,
      "offset": [608, 638],
      "op": "ADD",
      "path": "12"
    },
    "246": {
      "fn": null,
      "offset": [608, 638],
      "op": "SWAP1",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [608, 638],
      "op": "RETURN",
      "path": "12"
    },
    "248": {
      "offset": [334, 362],
      "op": "JUMPDEST",
      "path": "12"
    },
    "249": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH2",
      "path": "12",
      "value": "0x115"
    },
    "252": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "254": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [334, 362],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "256": {
      "fn": null,
      "offset": [334, 362],
      "op": "SUB",
      "path": "12"
    },
    "257": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "259": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "260": {
      "fn": null,
      "offset": [334, 362],
      "op": "LT",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [334, 362],
      "op": "ISZERO",
      "path": "12"
    },
    "262": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10E"
    },
    "265": {
      "fn": null,
      "offset": [334, 362],
      "op": "JUMPI",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "268": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP1",
      "path": "12"
    },
    "269": {
      "fn": null,
      "offset": [334, 362],
      "op": "REVERT",
      "path": "12"
    },
    "270": {
      "fn": null,
      "offset": [334, 362],
      "op": "JUMPDEST",
      "path": "12"
    },
    "271": {
      "op": "POP"
    },
    "272": {
      "offset": [334, 362],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "273": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C0"
    },
    "276": {
      "fn": null,
      "jump": "i",
      "offset": [334, 362],
      "op": "JUMP",
      "path": "12"
    },
    "277": {
      "fn": null,
      "offset": [334, 362],
      "op": "JUMPDEST",
      "path": "12"
    },
    "278": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "280": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP1",
      "path": "12"
    },
    "281": {
      "fn": null,
      "offset": [334, 362],
      "op": "MLOAD",
      "path": "12"
    },
    "282": {
      "fn": null,
      "offset": [334, 362],
      "op": "SWAP2",
      "path": "12"
    },
    "283": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP3",
      "path": "12"
    },
    "284": {
      "fn": null,
      "offset": [334, 362],
      "op": "MSTORE",
      "path": "12"
    },
    "285": {
      "fn": null,
      "offset": [334, 362],
      "op": "MLOAD",
      "path": "12"
    },
    "286": {
      "fn": null,
      "offset": [334, 362],
      "op": "SWAP1",
      "path": "12"
    },
    "287": {
      "fn": null,
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "288": {
      "fn": null,
      "offset": [334, 362],
      "op": "SWAP1",
      "path": "12"
    },
    "289": {
      "fn": null,
      "offset": [334, 362],
      "op": "SUB",
      "path": "12"
    },
    "290": {
      "fn": null,
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "292": {
      "fn": null,
      "offset": [334, 362],
      "op": "ADD",
      "path": "12"
    },
    "293": {
      "fn": null,
      "offset": [334, 362],
      "op": "SWAP1",
      "path": "12"
    },
    "294": {
      "fn": null,
      "offset": [334, 362],
      "op": "RETURN",
      "path": "12"
    },
    "295": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "JUMPDEST",
      "path": "12"
    },
    "296": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "299": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "301": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "DUP1",
      "path": "12"
    },
    "302": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "303": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "SUB",
      "path": "12"
    },
    "304": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "306": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "DUP2",
      "path": "12"
    },
    "307": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "LT",
      "path": "12"
    },
    "308": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "ISZERO",
      "path": "12"
    },
    "309": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13D"
    },
    "312": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "JUMPI",
      "path": "12"
    },
    "313": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "315": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "DUP1",
      "path": "12"
    },
    "316": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "REVERT",
      "path": "12"
    },
    "317": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "JUMPDEST",
      "path": "12"
    },
    "318": {
      "op": "POP"
    },
    "319": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "AND",
      "path": "12"
    },
    "329": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E1"
    },
    "332": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "i",
      "offset": [1244, 1394],
      "op": "JUMP",
      "path": "12"
    },
    "333": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "JUMPDEST",
      "path": "12"
    },
    "334": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "STOP",
      "path": "12"
    },
    "335": {
      "offset": [500, 532],
      "op": "JUMPDEST",
      "path": "12"
    },
    "336": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [500, 532],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "339": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [500, 532],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31A"
    },
    "342": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "i",
      "offset": [500, 532],
      "op": "JUMP",
      "path": "12"
    },
    "343": {
      "offset": [368, 400],
      "op": "JUMPDEST",
      "path": "12"
    },
    "344": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [368, 400],
      "op": "PUSH2",
      "path": "12",
      "value": "0x115"
    },
    "347": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [368, 400],
      "op": "PUSH2",
      "path": "12",
      "value": "0x329"
    },
    "350": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "i",
      "offset": [368, 400],
      "op": "JUMP",
      "path": "12"
    },
    "351": {
      "offset": [890, 916],
      "op": "JUMPDEST",
      "path": "12"
    },
    "352": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [890, 916],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "355": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [890, 916],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32F"
    },
    "358": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "i",
      "offset": [890, 916],
      "op": "JUMP",
      "path": "12"
    },
    "359": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "JUMPDEST",
      "path": "12"
    },
    "360": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "363": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "365": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "DUP1",
      "path": "12"
    },
    "366": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "367": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "SUB",
      "path": "12"
    },
    "368": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "370": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "DUP2",
      "path": "12"
    },
    "371": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "LT",
      "path": "12"
    },
    "372": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "ISZERO",
      "path": "12"
    },
    "373": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "376": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "JUMPI",
      "path": "12"
    },
    "377": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "379": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "DUP1",
      "path": "12"
    },
    "380": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "REVERT",
      "path": "12"
    },
    "381": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "JUMPDEST",
      "path": "12"
    },
    "382": {
      "op": "POP"
    },
    "383": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "384": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "ISZERO",
      "path": "12"
    },
    "385": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "ISZERO",
      "path": "12"
    },
    "386": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33E"
    },
    "389": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "jump": "i",
      "offset": [2093, 2424],
      "op": "JUMP",
      "path": "12"
    },
    "390": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "JUMPDEST",
      "path": "12"
    },
    "391": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "394": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "396": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "DUP1",
      "path": "12"
    },
    "397": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "398": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "SUB",
      "path": "12"
    },
    "399": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "401": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "DUP2",
      "path": "12"
    },
    "402": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "LT",
      "path": "12"
    },
    "403": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "ISZERO",
      "path": "12"
    },
    "404": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19C"
    },
    "407": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "JUMPI",
      "path": "12"
    },
    "408": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "410": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "DUP1",
      "path": "12"
    },
    "411": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "REVERT",
      "path": "12"
    },
    "412": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "JUMPDEST",
      "path": "12"
    },
    "413": {
      "op": "POP"
    },
    "414": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "415": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B2"
    },
    "418": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "jump": "i",
      "offset": [1642, 1936],
      "op": "JUMP",
      "path": "12"
    },
    "419": {
      "offset": [406, 429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "420": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [406, 429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x115"
    },
    "423": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [406, 429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FD"
    },
    "426": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "jump": "i",
      "offset": [406, 429],
      "op": "JUMP",
      "path": "12"
    },
    "427": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "JUMPDEST",
      "path": "12"
    },
    "428": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "431": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "433": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "DUP1",
      "path": "12"
    },
    "434": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "435": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "SUB",
      "path": "12"
    },
    "436": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "438": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "DUP2",
      "path": "12"
    },
    "439": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "LT",
      "path": "12"
    },
    "440": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "ISZERO",
      "path": "12"
    },
    "441": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C1"
    },
    "444": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "JUMPI",
      "path": "12"
    },
    "445": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "447": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "DUP1",
      "path": "12"
    },
    "448": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "REVERT",
      "path": "12"
    },
    "449": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "JUMPDEST",
      "path": "12"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "AND",
      "path": "12"
    },
    "461": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "PUSH2",
      "path": "12",
      "value": "0x403"
    },
    "464": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "jump": "i",
      "offset": [1400, 1544],
      "op": "JUMP",
      "path": "12"
    },
    "465": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "466": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "469": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "471": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "472": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "473": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SUB",
      "path": "12"
    },
    "474": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "476": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "477": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "LT",
      "path": "12"
    },
    "478": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ISZERO",
      "path": "12"
    },
    "479": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E7"
    },
    "482": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPI",
      "path": "12"
    },
    "483": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "485": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "486": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "REVERT",
      "path": "12"
    },
    "487": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "488": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "489": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "490": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP2",
      "path": "12"
    },
    "491": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "493": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "494": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "495": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "496": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP2",
      "path": "12"
    },
    "497": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "499": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP3",
      "path": "12"
    },
    "500": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "501": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "502": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP2",
      "path": "12"
    },
    "503": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP1",
      "path": "12"
    },
    "504": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "505": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "506": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP1",
      "path": "12"
    },
    "507": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "509": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "510": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "511": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "513": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP3",
      "path": "12"
    },
    "514": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "515": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "516": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "522": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP2",
      "path": "12"
    },
    "523": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "GT",
      "path": "12"
    },
    "524": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ISZERO",
      "path": "12"
    },
    "525": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x215"
    },
    "528": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPI",
      "path": "12"
    },
    "529": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "531": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "532": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "REVERT",
      "path": "12"
    },
    "533": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "534": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP3",
      "path": "12"
    },
    "535": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "536": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP4",
      "path": "12"
    },
    "537": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "539": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP3",
      "path": "12"
    },
    "540": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "541": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "GT",
      "path": "12"
    },
    "542": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ISZERO",
      "path": "12"
    },
    "543": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x227"
    },
    "546": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPI",
      "path": "12"
    },
    "547": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "549": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "550": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "REVERT",
      "path": "12"
    },
    "551": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "552": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "553": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "554": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP1",
      "path": "12"
    },
    "555": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "557": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "558": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP2",
      "path": "12"
    },
    "559": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP5",
      "path": "12"
    },
    "560": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "562": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP4",
      "path": "12"
    },
    "563": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "MUL",
      "path": "12"
    },
    "564": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP5",
      "path": "12"
    },
    "565": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ADD",
      "path": "12"
    },
    "566": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "GT",
      "path": "12"
    },
    "567": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "573": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP4",
      "path": "12"
    },
    "574": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "GT",
      "path": "12"
    },
    "575": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "OR",
      "path": "12"
    },
    "576": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "ISZERO",
      "path": "12"
    },
    "577": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x249"
    },
    "580": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPI",
      "path": "12"
    },
    "581": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "583": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "DUP1",
      "path": "12"
    },
    "584": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "REVERT",
      "path": "12"
    },
    "585": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP1",
      "path": "12"
    },
    "588": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP3",
      "path": "12"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "SWAP1",
      "path": "12"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43C"
    },
    "595": {
      "fn": "MerkleDistributor.claim",
      "jump": "i",
      "offset": [3085, 3808],
      "op": "JUMP",
      "path": "12"
    },
    "596": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "JUMPDEST",
      "path": "12"
    },
    "597": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH2",
      "path": "12",
      "value": "0x277"
    },
    "600": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "602": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP1",
      "path": "12"
    },
    "603": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "604": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SUB",
      "path": "12"
    },
    "605": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "607": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP2",
      "path": "12"
    },
    "608": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "LT",
      "path": "12"
    },
    "609": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "ISZERO",
      "path": "12"
    },
    "610": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "613": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "JUMPI",
      "path": "12"
    },
    "614": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "616": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP1",
      "path": "12"
    },
    "617": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "REVERT",
      "path": "12"
    },
    "618": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "JUMPDEST",
      "path": "12"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP1",
      "path": "12"
    },
    "621": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "622": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SWAP1",
      "path": "12"
    },
    "623": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "625": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "ADD",
      "path": "12"
    },
    "626": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "627": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61C"
    },
    "630": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "i",
      "offset": [2430, 2780],
      "op": "JUMP",
      "path": "12"
    },
    "631": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "JUMPDEST",
      "path": "12"
    },
    "632": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "634": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP1",
      "path": "12"
    },
    "635": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "MLOAD",
      "path": "12"
    },
    "636": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SWAP2",
      "path": "12"
    },
    "637": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "ISZERO",
      "path": "12"
    },
    "638": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "ISZERO",
      "path": "12"
    },
    "639": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP3",
      "path": "12"
    },
    "640": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "MSTORE",
      "path": "12"
    },
    "641": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "MLOAD",
      "path": "12"
    },
    "642": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SWAP1",
      "path": "12"
    },
    "643": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "DUP2",
      "path": "12"
    },
    "644": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SWAP1",
      "path": "12"
    },
    "645": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SUB",
      "path": "12"
    },
    "646": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "648": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "ADD",
      "path": "12"
    },
    "649": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "SWAP1",
      "path": "12"
    },
    "650": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "RETURN",
      "path": "12"
    },
    "651": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "JUMPDEST",
      "path": "12"
    },
    "652": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "655": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "657": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "DUP1",
      "path": "12"
    },
    "658": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "659": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "SUB",
      "path": "12"
    },
    "660": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "662": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "DUP2",
      "path": "12"
    },
    "663": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "LT",
      "path": "12"
    },
    "664": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "ISZERO",
      "path": "12"
    },
    "665": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A1"
    },
    "668": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "JUMPI",
      "path": "12"
    },
    "669": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "671": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "DUP1",
      "path": "12"
    },
    "672": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "REVERT",
      "path": "12"
    },
    "673": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "JUMPDEST",
      "path": "12"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "SUB"
    },
    "684": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "AND",
      "path": "12"
    },
    "685": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "PUSH2",
      "path": "12",
      "value": "0x64D"
    },
    "688": {
      "fn": "MerkleDistributor.setMinter",
      "jump": "i",
      "offset": [1101, 1238],
      "op": "JUMP",
      "path": "12"
    },
    "689": {
      "offset": [608, 638],
      "op": "JUMPDEST",
      "path": "12"
    },
    "690": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [608, 638],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "692": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [608, 638],
      "op": "SLOAD",
      "path": "12"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "offset": [608, 638],
      "op": "AND",
      "path": "12"
    },
    "702": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [608, 638],
      "op": "DUP2",
      "path": "12"
    },
    "703": {
      "fn": "MerkleDistributor.setMinter",
      "jump": "o",
      "offset": [608, 638],
      "op": "JUMP",
      "path": "12"
    },
    "704": {
      "offset": [334, 362],
      "op": "JUMPDEST",
      "path": "12"
    },
    "705": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "707": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "708": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "709": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SLOAD",
      "path": "12"
    },
    "710": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "711": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "LT",
      "path": "12"
    },
    "712": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D0"
    },
    "715": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "JUMPI",
      "path": "12"
    },
    "716": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "718": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "DUP1",
      "path": "12"
    },
    "719": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "REVERT",
      "path": "12"
    },
    "720": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "JUMPDEST",
      "path": "12"
    },
    "721": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "723": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SWAP2",
      "path": "12"
    },
    "724": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "DUP3",
      "path": "12"
    },
    "725": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "MSTORE",
      "path": "12"
    },
    "726": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "728": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SWAP1",
      "path": "12"
    },
    "729": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SWAP2",
      "path": "12"
    },
    "730": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "KECCAK256",
      "path": "12"
    },
    "731": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "ADD",
      "path": "12"
    },
    "732": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SLOAD",
      "path": "12"
    },
    "733": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [334, 362],
      "op": "SWAP1",
      "path": "12"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "offset": [334, 362],
      "op": "DUP2",
      "path": "12"
    },
    "736": {
      "fn": "MerkleDistributor.setMinter",
      "jump": "o",
      "offset": [334, 362],
      "op": "JUMP",
      "path": "12"
    },
    "737": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1244, 1394],
      "op": "JUMPDEST",
      "path": "12"
    },
    "738": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1331, 1348],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x3"
    },
    "740": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1331, 1348],
      "op": "SLOAD",
      "path": "12"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1331, 1348],
      "op": "AND",
      "path": "12"
    },
    "750": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1317, 1327],
      "op": "CALLER",
      "path": "12"
    },
    "751": {
      "branch": 28,
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1317, 1348],
      "op": "EQ",
      "path": "12"
    },
    "752": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F8"
    },
    "755": {
      "branch": 28,
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "JUMPI",
      "path": "12"
    },
    "756": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "758": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "DUP1",
      "path": "12"
    },
    "759": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "REVERT",
      "path": "12"
    },
    "760": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1309, 1349],
      "op": "JUMPDEST",
      "path": "12"
    },
    "761": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1376],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x3"
    },
    "763": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "DUP1",
      "path": "12"
    },
    "764": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SLOAD",
      "path": "12"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "op": "SUB"
    },
    "773": {
      "op": "NOT"
    },
    "774": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "AND",
      "path": "12"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "781": {
      "op": "SHL"
    },
    "782": {
      "op": "SUB"
    },
    "783": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP3",
      "path": "12"
    },
    "784": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP1",
      "path": "12"
    },
    "785": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP3",
      "path": "12"
    },
    "786": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "AND",
      "path": "12"
    },
    "787": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP2",
      "path": "12"
    },
    "788": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP1",
      "path": "12"
    },
    "789": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP2",
      "path": "12"
    },
    "790": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "OR",
      "path": "12"
    },
    "791": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SWAP1",
      "path": "12"
    },
    "792": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [1359, 1387],
      "op": "SSTORE",
      "path": "12"
    },
    "793": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "o",
      "offset": [1244, 1394],
      "op": "JUMP",
      "path": "12"
    },
    "794": {
      "offset": [500, 532],
      "op": "JUMPDEST",
      "path": "12"
    },
    "795": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [500, 532],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "797": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [500, 532],
      "op": "SLOAD",
      "path": "12"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "offset": [500, 532],
      "op": "AND",
      "path": "12"
    },
    "807": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [500, 532],
      "op": "DUP2",
      "path": "12"
    },
    "808": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "o",
      "offset": [500, 532],
      "op": "JUMP",
      "path": "12"
    },
    "809": {
      "offset": [368, 400],
      "op": "JUMPDEST",
      "path": "12"
    },
    "810": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [368, 400],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "812": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [368, 400],
      "op": "SLOAD",
      "path": "12"
    },
    "813": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [368, 400],
      "op": "DUP2",
      "path": "12"
    },
    "814": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "o",
      "offset": [368, 400],
      "op": "JUMP",
      "path": "12"
    },
    "815": {
      "offset": [890, 916],
      "op": "JUMPDEST",
      "path": "12"
    },
    "816": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [890, 916],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "818": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [890, 916],
      "op": "SLOAD",
      "path": "12"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "offset": [890, 916],
      "op": "AND",
      "path": "12"
    },
    "828": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "offset": [890, 916],
      "op": "DUP2",
      "path": "12"
    },
    "829": {
      "fn": "MerkleDistributor.setProposalAuthority",
      "jump": "o",
      "offset": [890, 916],
      "op": "JUMP",
      "path": "12"
    },
    "830": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2093, 2424],
      "op": "JUMPDEST",
      "path": "12"
    },
    "831": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2181, 2196],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x4"
    },
    "833": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2181, 2196],
      "op": "SLOAD",
      "path": "12"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2181, 2196],
      "op": "AND",
      "path": "12"
    },
    "843": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2167, 2177],
      "op": "CALLER",
      "path": "12"
    },
    "844": {
      "branch": 29,
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2167, 2196],
      "op": "EQ",
      "path": "12"
    },
    "845": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "PUSH2",
      "path": "12",
      "value": "0x355"
    },
    "848": {
      "branch": 29,
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "JUMPI",
      "path": "12"
    },
    "849": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "851": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "DUP1",
      "path": "12"
    },
    "852": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "REVERT",
      "path": "12"
    },
    "853": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2159, 2197],
      "op": "JUMPDEST",
      "path": "12"
    },
    "854": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2215, 2232],
      "op": "PUSH1",
      "path": "12",
      "statement": 3,
      "value": "0x1"
    },
    "856": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2215, 2232],
      "op": "SLOAD",
      "path": "12"
    },
    "857": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "PUSH2",
      "path": "12",
      "value": "0x361"
    },
    "860": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "JUMPI",
      "path": "12"
    },
    "861": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "863": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "DUP1",
      "path": "12"
    },
    "864": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "REVERT",
      "path": "12"
    },
    "865": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2207, 2241],
      "op": "JUMPDEST",
      "path": "12"
    },
    "866": {
      "branch": 30,
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2255, 2264],
      "op": "DUP1",
      "path": "12"
    },
    "867": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2251, 2384],
      "op": "ISZERO",
      "path": "12"
    },
    "868": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2251, 2384],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AA"
    },
    "871": {
      "branch": 30,
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2251, 2384],
      "op": "JUMPI",
      "path": "12"
    },
    "872": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2297, 2314],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x1"
    },
    "874": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2297, 2314],
      "op": "DUP1",
      "path": "12"
    },
    "875": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2297, 2314],
      "op": "SLOAD",
      "path": "12"
    },
    "876": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2291],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "878": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "DUP1",
      "path": "12"
    },
    "879": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SLOAD",
      "path": "12"
    },
    "880": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SWAP3",
      "path": "12"
    },
    "881": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "DUP4",
      "path": "12"
    },
    "882": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "ADD",
      "path": "12"
    },
    "883": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "DUP2",
      "path": "12"
    },
    "884": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SSTORE",
      "path": "12"
    },
    "885": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "DUP1",
      "path": "12"
    },
    "886": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "MSTORE",
      "path": "12"
    },
    "887": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "PUSH32",
      "path": "12",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
    },
    "920": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SWAP1",
      "path": "12"
    },
    "921": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SWAP2",
      "path": "12"
    },
    "922": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "ADD",
      "path": "12"
    },
    "923": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2280, 2315],
      "op": "SSTORE",
      "path": "12"
    },
    "924": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2358, 2364],
      "op": "PUSH3",
      "path": "12",
      "statement": 5,
      "value": "0x93A80"
    },
    "928": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2340, 2355],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "929": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2340, 2364],
      "op": "DIV",
      "path": "12"
    },
    "930": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2367, 2373],
      "op": "PUSH3",
      "path": "12",
      "value": "0x93A80"
    },
    "934": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2340, 2373],
      "op": "MUL",
      "path": "12"
    },
    "935": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2329, 2337],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "937": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2329, 2373],
      "op": "SSTORE",
      "path": "12"
    },
    "938": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2251, 2384],
      "op": "JUMPDEST",
      "path": "12"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2393, 2417],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x0"
    },
    "942": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2400, 2417],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "944": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "offset": [2393, 2417],
      "op": "SSTORE",
      "path": "12"
    },
    "945": {
      "fn": "MerkleDistributor.reviewPendingMerkleRoot",
      "jump": "o",
      "offset": [2093, 2424],
      "op": "JUMP",
      "path": "12"
    },
    "946": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1642, 1936],
      "op": "JUMPDEST",
      "path": "12"
    },
    "947": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1730, 1747],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x3"
    },
    "949": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1730, 1747],
      "op": "SLOAD",
      "path": "12"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1730, 1747],
      "op": "AND",
      "path": "12"
    },
    "959": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1716, 1726],
      "op": "CALLER",
      "path": "12"
    },
    "960": {
      "branch": 31,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1716, 1747],
      "op": "EQ",
      "path": "12"
    },
    "961": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C9"
    },
    "964": {
      "branch": 31,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "JUMPI",
      "path": "12"
    },
    "965": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "967": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "DUP1",
      "path": "12"
    },
    "968": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "REVERT",
      "path": "12"
    },
    "969": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1708, 1748],
      "op": "JUMPDEST",
      "path": "12"
    },
    "970": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1766, 1783],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x1"
    },
    "972": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1766, 1783],
      "op": "SLOAD",
      "path": "12"
    },
    "973": {
      "branch": 32,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1766, 1791],
      "op": "ISZERO",
      "path": "12"
    },
    "974": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D6"
    },
    "977": {
      "branch": 32,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "JUMPI",
      "path": "12"
    },
    "978": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "980": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "DUP1",
      "path": "12"
    },
    "981": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "REVERT",
      "path": "12"
    },
    "982": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1758, 1792],
      "op": "JUMPDEST",
      "path": "12"
    },
    "983": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1810, 1821],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x0"
    },
    "985": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1810, 1828],
      "op": "SLOAD",
      "path": "12"
    },
    "986": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1831, 1833],
      "op": "PUSH1",
      "path": "12",
      "value": "0x34"
    },
    "988": {
      "op": "GT"
    },
    "989": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E5"
    },
    "992": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "JUMPI",
      "path": "12"
    },
    "993": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "995": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "DUP1",
      "path": "12"
    },
    "996": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "REVERT",
      "path": "12"
    },
    "997": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1802, 1834],
      "op": "JUMPDEST",
      "path": "12"
    },
    "998": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1870, 1878],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x2"
    },
    "1000": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1870, 1878],
      "op": "SLOAD",
      "path": "12"
    },
    "1001": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1881, 1887],
      "op": "PUSH3",
      "path": "12",
      "value": "0x93A80"
    },
    "1005": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1870, 1887],
      "op": "ADD",
      "path": "12"
    },
    "1006": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1852, 1867],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "1007": {
      "branch": 33,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1852, 1887],
      "op": "GT",
      "path": "12"
    },
    "1008": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F8"
    },
    "1011": {
      "branch": 33,
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "JUMPI",
      "path": "12"
    },
    "1012": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1014": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "DUP1",
      "path": "12"
    },
    "1015": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "REVERT",
      "path": "12"
    },
    "1016": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1844, 1888],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1017": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1898, 1915],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x1"
    },
    "1019": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [1898, 1929],
      "op": "SSTORE",
      "path": "12"
    },
    "1020": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "jump": "o",
      "offset": [1642, 1936],
      "op": "JUMP",
      "path": "12"
    },
    "1021": {
      "offset": [406, 429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1022": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [406, 429],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1024": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [406, 429],
      "op": "SLOAD",
      "path": "12"
    },
    "1025": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "offset": [406, 429],
      "op": "DUP2",
      "path": "12"
    },
    "1026": {
      "fn": "MerkleDistributor.proposewMerkleRoot",
      "jump": "o",
      "offset": [406, 429],
      "op": "JUMP",
      "path": "12"
    },
    "1027": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1400, 1544],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1028": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1485, 1500],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x4"
    },
    "1030": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1485, 1500],
      "op": "SLOAD",
      "path": "12"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1485, 1500],
      "op": "AND",
      "path": "12"
    },
    "1040": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1471, 1481],
      "op": "CALLER",
      "path": "12"
    },
    "1041": {
      "branch": 34,
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1471, 1500],
      "op": "EQ",
      "path": "12"
    },
    "1042": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41A"
    },
    "1045": {
      "branch": 34,
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "JUMPI",
      "path": "12"
    },
    "1046": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1048": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "DUP1",
      "path": "12"
    },
    "1049": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "REVERT",
      "path": "12"
    },
    "1050": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1463, 1501],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1051": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1526],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x4"
    },
    "1053": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "DUP1",
      "path": "12"
    },
    "1054": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SLOAD",
      "path": "12"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "op": "NOT"
    },
    "1064": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "AND",
      "path": "12"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "SUB"
    },
    "1073": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP3",
      "path": "12"
    },
    "1074": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP1",
      "path": "12"
    },
    "1075": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP3",
      "path": "12"
    },
    "1076": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "AND",
      "path": "12"
    },
    "1077": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP2",
      "path": "12"
    },
    "1078": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP1",
      "path": "12"
    },
    "1079": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP2",
      "path": "12"
    },
    "1080": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "OR",
      "path": "12"
    },
    "1081": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SWAP1",
      "path": "12"
    },
    "1082": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "offset": [1511, 1537],
      "op": "SSTORE",
      "path": "12"
    },
    "1083": {
      "fn": "MerkleDistributor.setReviewAuthority",
      "jump": "o",
      "offset": [1400, 1544],
      "op": "JUMP",
      "path": "12"
    },
    "1084": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1085": {
      "fn": "MerkleDistributor.claim",
      "offset": [3225, 3236],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x0"
    },
    "1087": {
      "fn": "MerkleDistributor.claim",
      "offset": [3225, 3243],
      "op": "SLOAD",
      "path": "12"
    },
    "1088": {
      "fn": "MerkleDistributor.claim",
      "offset": [3211, 3243],
      "op": "DUP6",
      "path": "12"
    },
    "1089": {
      "branch": 35,
      "fn": "MerkleDistributor.claim",
      "offset": [3211, 3243],
      "op": "LT",
      "path": "12"
    },
    "1090": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47C"
    },
    "1093": {
      "branch": 35,
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "JUMPI",
      "path": "12"
    },
    "1094": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1096": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "MLOAD",
      "path": "12"
    },
    "1097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1103": {
      "op": "SHL"
    },
    "1104": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP2",
      "path": "12"
    },
    "1105": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "MSTORE",
      "path": "12"
    },
    "1106": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1108": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "ADD",
      "path": "12"
    },
    "1109": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP1",
      "path": "12"
    },
    "1110": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP1",
      "path": "12"
    },
    "1111": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1113": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "ADD",
      "path": "12"
    },
    "1114": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP3",
      "path": "12"
    },
    "1115": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP2",
      "path": "12"
    },
    "1116": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SUB",
      "path": "12"
    },
    "1117": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP3",
      "path": "12"
    },
    "1118": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "MSTORE",
      "path": "12"
    },
    "1119": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x26"
    },
    "1121": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP2",
      "path": "12"
    },
    "1122": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "MSTORE",
      "path": "12"
    },
    "1123": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1125": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "ADD",
      "path": "12"
    },
    "1126": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP1",
      "path": "12"
    },
    "1127": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A9"
    },
    "1130": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x26"
    },
    "1132": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SWAP2",
      "path": "12"
    },
    "1133": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "CODECOPY",
      "path": "12"
    },
    "1134": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1136": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "ADD",
      "path": "12"
    },
    "1137": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SWAP2",
      "path": "12"
    },
    "1138": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "POP",
      "path": "12"
    },
    "1139": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "POP",
      "path": "12"
    },
    "1140": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1142": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "MLOAD",
      "path": "12"
    },
    "1143": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "DUP1",
      "path": "12"
    },
    "1144": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SWAP2",
      "path": "12"
    },
    "1145": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SUB",
      "path": "12"
    },
    "1146": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "SWAP1",
      "path": "12"
    },
    "1147": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "REVERT",
      "path": "12"
    },
    "1148": {
      "fn": "MerkleDistributor.claim",
      "offset": [3203, 3286],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1149": {
      "fn": "MerkleDistributor.claim",
      "offset": [3305, 3334],
      "op": "PUSH2",
      "path": "12",
      "statement": 15,
      "value": "0x486"
    },
    "1152": {
      "fn": "MerkleDistributor.claim",
      "offset": [3315, 3326],
      "op": "DUP6",
      "path": "12"
    },
    "1153": {
      "fn": "MerkleDistributor.claim",
      "offset": [3328, 3333],
      "op": "DUP6",
      "path": "12"
    },
    "1154": {
      "fn": "MerkleDistributor.claim",
      "offset": [3305, 3314],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61C"
    },
    "1157": {
      "fn": "MerkleDistributor.claim",
      "jump": "i",
      "offset": [3305, 3334],
      "op": "JUMP",
      "path": "12"
    },
    "1158": {
      "fn": "MerkleDistributor.claim",
      "offset": [3305, 3334],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1159": {
      "branch": 36,
      "fn": "MerkleDistributor.claim",
      "offset": [3304, 3334],
      "op": "ISZERO",
      "path": "12"
    },
    "1160": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C2"
    },
    "1163": {
      "branch": 36,
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "JUMPI",
      "path": "12"
    },
    "1164": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1166": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "MLOAD",
      "path": "12"
    },
    "1167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP2",
      "path": "12"
    },
    "1175": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "MSTORE",
      "path": "12"
    },
    "1176": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1178": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "ADD",
      "path": "12"
    },
    "1179": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP1",
      "path": "12"
    },
    "1180": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP1",
      "path": "12"
    },
    "1181": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1183": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "ADD",
      "path": "12"
    },
    "1184": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP3",
      "path": "12"
    },
    "1185": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP2",
      "path": "12"
    },
    "1186": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SUB",
      "path": "12"
    },
    "1187": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP3",
      "path": "12"
    },
    "1188": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "MSTORE",
      "path": "12"
    },
    "1189": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x28"
    },
    "1191": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP2",
      "path": "12"
    },
    "1192": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "MSTORE",
      "path": "12"
    },
    "1193": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1195": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "ADD",
      "path": "12"
    },
    "1196": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP1",
      "path": "12"
    },
    "1197": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH2",
      "path": "12",
      "value": "0x760"
    },
    "1200": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x28"
    },
    "1202": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SWAP2",
      "path": "12"
    },
    "1203": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "CODECOPY",
      "path": "12"
    },
    "1204": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1206": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "ADD",
      "path": "12"
    },
    "1207": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SWAP2",
      "path": "12"
    },
    "1208": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "POP",
      "path": "12"
    },
    "1209": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "POP",
      "path": "12"
    },
    "1210": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1212": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "MLOAD",
      "path": "12"
    },
    "1213": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "DUP1",
      "path": "12"
    },
    "1214": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SWAP2",
      "path": "12"
    },
    "1215": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SUB",
      "path": "12"
    },
    "1216": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "SWAP1",
      "path": "12"
    },
    "1217": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "REVERT",
      "path": "12"
    },
    "1218": {
      "fn": "MerkleDistributor.claim",
      "offset": [3296, 3379],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1219": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1221": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP1",
      "path": "12"
    },
    "1222": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MLOAD",
      "path": "12"
    },
    "1223": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1225": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP1",
      "path": "12"
    },
    "1226": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP3",
      "path": "12"
    },
    "1227": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "ADD",
      "path": "12"
    },
    "1228": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP8",
      "path": "12"
    },
    "1229": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP1",
      "path": "12"
    },
    "1230": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MSTORE",
      "path": "12"
    },
    "1231": {
      "fn": "MerkleDistributor.claim",
      "offset": [3475, 3485],
      "op": "CALLER",
      "path": "12"
    },
    "1232": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1234": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SHL",
      "path": "12"
    },
    "1235": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP3",
      "path": "12"
    },
    "1236": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP5",
      "path": "12"
    },
    "1237": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "ADD",
      "path": "12"
    },
    "1238": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MSTORE",
      "path": "12"
    },
    "1239": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "PUSH1",
      "path": "12",
      "value": "0x54"
    },
    "1241": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP1",
      "path": "12"
    },
    "1242": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP4",
      "path": "12"
    },
    "1243": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "ADD",
      "path": "12"
    },
    "1244": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP8",
      "path": "12"
    },
    "1245": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP1",
      "path": "12"
    },
    "1246": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MSTORE",
      "path": "12"
    },
    "1247": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP4",
      "path": "12"
    },
    "1248": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MLOAD",
      "path": "12"
    },
    "1249": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP1",
      "path": "12"
    },
    "1250": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP5",
      "path": "12"
    },
    "1251": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SUB",
      "path": "12"
    },
    "1252": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP1",
      "path": "12"
    },
    "1253": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP2",
      "path": "12"
    },
    "1254": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "ADD",
      "path": "12"
    },
    "1255": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "DUP2",
      "path": "12"
    },
    "1256": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MSTORE",
      "path": "12"
    },
    "1257": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "PUSH1",
      "path": "12",
      "value": "0x74"
    },
    "1259": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP1",
      "path": "12"
    },
    "1260": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP3",
      "path": "12"
    },
    "1261": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "ADD",
      "path": "12"
    },
    "1262": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP1",
      "path": "12"
    },
    "1263": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "SWAP3",
      "path": "12"
    },
    "1264": {
      "fn": "MerkleDistributor.claim",
      "offset": [3451, 3494],
      "op": "MSTORE",
      "path": "12"
    },
    "1265": {
      "fn": "MerkleDistributor.claim",
      "offset": [3441, 3495],
      "op": "DUP1",
      "path": "12"
    },
    "1266": {
      "fn": "MerkleDistributor.claim",
      "offset": [3441, 3495],
      "op": "MLOAD",
      "path": "12"
    },
    "1267": {
      "fn": "MerkleDistributor.claim",
      "offset": [3441, 3495],
      "op": "SWAP2",
      "path": "12"
    },
    "1268": {
      "fn": "MerkleDistributor.claim",
      "offset": [3441, 3495],
      "op": "ADD",
      "path": "12"
    },
    "1269": {
      "fn": "MerkleDistributor.claim",
      "offset": [3441, 3495],
      "op": "KECCAK256",
      "path": "12"
    },
    "1270": {
      "fn": "MerkleDistributor.claim",
      "offset": [3426, 3438],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1272": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "DUP1",
      "path": "12",
      "statement": 16
    },
    "1273": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "SLOAD",
      "path": "12"
    },
    "1274": {
      "fn": "MerkleDistributor.claim",
      "offset": [3513, 3564],
      "op": "PUSH2",
      "path": "12",
      "value": "0x51D"
    },
    "1277": {
      "fn": "MerkleDistributor.claim",
      "offset": [3513, 3564],
      "op": "SWAP2",
      "path": "12"
    },
    "1278": {
      "fn": "MerkleDistributor.claim",
      "offset": [3520, 3531],
      "op": "DUP6",
      "path": "12"
    },
    "1279": {
      "fn": "MerkleDistributor.claim",
      "offset": [3520, 3531],
      "op": "SWAP2",
      "path": "12"
    },
    "1280": {
      "fn": "MerkleDistributor.claim",
      "offset": [3520, 3531],
      "op": "DUP6",
      "path": "12"
    },
    "1281": {
      "fn": "MerkleDistributor.claim",
      "offset": [3520, 3531],
      "op": "SWAP2",
      "path": "12"
    },
    "1282": {
      "fn": "MerkleDistributor.claim",
      "offset": [3426, 3438],
      "op": "SWAP1",
      "path": "12"
    },
    "1283": {
      "fn": "MerkleDistributor.claim",
      "offset": [3545, 3556],
      "op": "DUP11",
      "path": "12"
    },
    "1284": {
      "fn": "MerkleDistributor.claim",
      "offset": [3545, 3556],
      "op": "SWAP1",
      "path": "12"
    },
    "1285": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "DUP2",
      "path": "12"
    },
    "1286": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "LT",
      "path": "12"
    },
    "1287": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "PUSH2",
      "path": "12",
      "value": "0x50C"
    },
    "1290": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "JUMPI",
      "path": "12"
    },
    "1291": {
      "dev": "Index out of range",
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "INVALID",
      "path": "12"
    },
    "1292": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1293": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "SWAP1",
      "path": "12"
    },
    "1294": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1296": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "MSTORE",
      "path": "12"
    },
    "1297": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1299": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1301": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "KECCAK256",
      "path": "12"
    },
    "1302": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "ADD",
      "path": "12"
    },
    "1303": {
      "fn": "MerkleDistributor.claim",
      "offset": [3533, 3557],
      "op": "SLOAD",
      "path": "12"
    },
    "1304": {
      "fn": "MerkleDistributor.claim",
      "offset": [3559, 3563],
      "op": "DUP5",
      "path": "12"
    },
    "1305": {
      "fn": "MerkleDistributor.claim",
      "offset": [3513, 3519],
      "op": "PUSH2",
      "path": "12",
      "value": "0x685"
    },
    "1308": {
      "fn": "MerkleDistributor.claim",
      "jump": "i",
      "offset": [3513, 3564],
      "op": "JUMP",
      "path": "12"
    },
    "1309": {
      "branch": 37,
      "fn": "MerkleDistributor.claim",
      "offset": [3513, 3564],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1310": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH2",
      "path": "12",
      "value": "0x558"
    },
    "1313": {
      "branch": 37,
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "JUMPI",
      "path": "12"
    },
    "1314": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1316": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "MLOAD",
      "path": "12"
    },
    "1317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP2",
      "path": "12"
    },
    "1325": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "MSTORE",
      "path": "12"
    },
    "1326": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1328": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "ADD",
      "path": "12"
    },
    "1329": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP1",
      "path": "12"
    },
    "1330": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP1",
      "path": "12"
    },
    "1331": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1333": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "ADD",
      "path": "12"
    },
    "1334": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP3",
      "path": "12"
    },
    "1335": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP2",
      "path": "12"
    },
    "1336": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SUB",
      "path": "12"
    },
    "1337": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP3",
      "path": "12"
    },
    "1338": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "MSTORE",
      "path": "12"
    },
    "1339": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x21"
    },
    "1341": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP2",
      "path": "12"
    },
    "1342": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "MSTORE",
      "path": "12"
    },
    "1343": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1345": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "ADD",
      "path": "12"
    },
    "1346": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP1",
      "path": "12"
    },
    "1347": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH2",
      "path": "12",
      "value": "0x788"
    },
    "1350": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x21"
    },
    "1352": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SWAP2",
      "path": "12"
    },
    "1353": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "CODECOPY",
      "path": "12"
    },
    "1354": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1356": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "ADD",
      "path": "12"
    },
    "1357": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SWAP2",
      "path": "12"
    },
    "1358": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "POP",
      "path": "12"
    },
    "1359": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "POP",
      "path": "12"
    },
    "1360": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1362": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "MLOAD",
      "path": "12"
    },
    "1363": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "DUP1",
      "path": "12"
    },
    "1364": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SWAP2",
      "path": "12"
    },
    "1365": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SUB",
      "path": "12"
    },
    "1366": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "SWAP1",
      "path": "12"
    },
    "1367": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "REVERT",
      "path": "12"
    },
    "1368": {
      "fn": "MerkleDistributor.claim",
      "offset": [3505, 3602],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1369": {
      "fn": "MerkleDistributor.claim",
      "offset": [3660, 3691],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0x562"
    },
    "1372": {
      "fn": "MerkleDistributor.claim",
      "offset": [3672, 3683],
      "op": "DUP7",
      "path": "12"
    },
    "1373": {
      "fn": "MerkleDistributor.claim",
      "offset": [3685, 3690],
      "op": "DUP7",
      "path": "12"
    },
    "1374": {
      "fn": "MerkleDistributor.claim",
      "offset": [3660, 3671],
      "op": "PUSH2",
      "path": "12",
      "value": "0x72D"
    },
    "1377": {
      "fn": "MerkleDistributor.claim",
      "jump": "i",
      "offset": [3660, 3691],
      "op": "JUMP",
      "path": "12"
    },
    "1378": {
      "fn": "MerkleDistributor.claim",
      "offset": [3660, 3691],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1379": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x6"
    },
    "1381": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "SLOAD",
      "path": "12"
    },
    "1382": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1384": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1385": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "MLOAD",
      "path": "12"
    },
    "1386": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP2",
      "path": "12"
    },
    "1395": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "MSTORE",
      "path": "12"
    },
    "1396": {
      "fn": "MerkleDistributor.claim",
      "offset": [3719, 3729],
      "op": "CALLER",
      "path": "12"
    },
    "1397": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1399": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP3",
      "path": "12"
    },
    "1400": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ADD",
      "path": "12"
    },
    "1401": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "MSTORE",
      "path": "12"
    },
    "1402": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1404": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP2",
      "path": "12"
    },
    "1405": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ADD",
      "path": "12"
    },
    "1406": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP8",
      "path": "12"
    },
    "1407": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP1",
      "path": "12"
    },
    "1408": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "MSTORE",
      "path": "12"
    },
    "1409": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP1",
      "path": "12"
    },
    "1410": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "MLOAD",
      "path": "12"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "SUB"
    },
    "1419": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "SWAP1",
      "path": "12"
    },
    "1420": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "SWAP3",
      "path": "12"
    },
    "1421": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "AND",
      "path": "12"
    },
    "1422": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "SWAP2",
      "path": "12"
    },
    "1423": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3718],
      "op": "PUSH4",
      "path": "12",
      "value": "0x40C10F19"
    },
    "1428": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3718],
      "op": "SWAP2",
      "path": "12"
    },
    "1429": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "1431": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1432": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP3",
      "path": "12"
    },
    "1433": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ADD",
      "path": "12"
    },
    "1434": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP3",
      "path": "12"
    },
    "1435": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1437": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "SWAP3",
      "path": "12"
    },
    "1438": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP1",
      "path": "12"
    },
    "1439": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP2",
      "path": "12"
    },
    "1440": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP1",
      "path": "12"
    },
    "1441": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP3",
      "path": "12"
    },
    "1442": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SWAP1",
      "path": "12"
    },
    "1443": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "SUB",
      "path": "12"
    },
    "1444": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ADD",
      "path": "12"
    },
    "1445": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP2",
      "path": "12"
    },
    "1446": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "DUP4",
      "path": "12"
    },
    "1447": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3713],
      "op": "DUP8",
      "path": "12"
    },
    "1448": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1449": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1450": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ISZERO",
      "path": "12"
    },
    "1451": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1452": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ISZERO",
      "path": "12"
    },
    "1453": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B5"
    },
    "1456": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "JUMPI",
      "path": "12"
    },
    "1457": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1459": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1460": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "REVERT",
      "path": "12"
    },
    "1461": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1462": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "POP",
      "path": "12"
    },
    "1463": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "GAS",
      "path": "12"
    },
    "1464": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "CALL",
      "path": "12"
    },
    "1465": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ISZERO",
      "path": "12"
    },
    "1466": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1467": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "ISZERO",
      "path": "12"
    },
    "1468": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5C9"
    },
    "1471": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "JUMPI",
      "path": "12"
    },
    "1472": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1473": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1475": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "DUP1",
      "path": "12"
    },
    "1476": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1477": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1478": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1480": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "REVERT",
      "path": "12"
    },
    "1481": {
      "fn": "MerkleDistributor.claim",
      "offset": [3701, 3738],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x40"
    },
    "1486": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP1",
      "path": "12"
    },
    "1487": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MLOAD",
      "path": "12"
    },
    "1488": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP10",
      "path": "12"
    },
    "1489": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP2",
      "path": "12"
    },
    "1490": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MSTORE",
      "path": "12"
    },
    "1491": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1493": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP2",
      "path": "12"
    },
    "1494": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "ADD",
      "path": "12"
    },
    "1495": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP10",
      "path": "12"
    },
    "1496": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP1",
      "path": "12"
    },
    "1497": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MSTORE",
      "path": "12"
    },
    "1498": {
      "fn": "MerkleDistributor.claim",
      "offset": [3782, 3792],
      "op": "CALLER",
      "path": "12"
    },
    "1499": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP2",
      "path": "12"
    },
    "1500": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP4",
      "path": "12"
    },
    "1501": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "ADD",
      "path": "12"
    },
    "1502": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MSTORE",
      "path": "12"
    },
    "1503": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1505": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP2",
      "path": "12"
    },
    "1506": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "ADD",
      "path": "12"
    },
    "1507": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP9",
      "path": "12"
    },
    "1508": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP1",
      "path": "12"
    },
    "1509": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MSTORE",
      "path": "12"
    },
    "1510": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP1",
      "path": "12"
    },
    "1511": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "MLOAD",
      "path": "12"
    },
    "1512": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "PUSH32",
      "path": "12",
      "value": "0xB94BF7F9302EDF52A596286915A69B4B0685574CFFDEDD0712E3C62F2550F0BA"
    },
    "1545": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP4",
      "path": "12"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP1",
      "path": "12"
    },
    "1548": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "DUP2",
      "path": "12"
    },
    "1549": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP1",
      "path": "12"
    },
    "1550": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SUB",
      "path": "12"
    },
    "1551": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "1553": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "ADD",
      "path": "12"
    },
    "1554": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "SWAP2",
      "path": "12"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "fn": "MerkleDistributor.claim",
      "offset": [3754, 3801],
      "op": "LOG1",
      "path": "12"
    },
    "1557": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1558": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1559": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1560": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1561": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1562": {
      "fn": "MerkleDistributor.claim",
      "offset": [3085, 3808],
      "op": "POP",
      "path": "12"
    },
    "1563": {
      "fn": "MerkleDistributor.claim",
      "jump": "o",
      "offset": [3085, 3808],
      "op": "JUMP",
      "path": "12"
    },
    "1564": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2430, 2780],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1565": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2506, 2510],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1567": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "SWAP2",
      "path": "12"
    },
    "1568": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "DUP3",
      "path": "12"
    },
    "1569": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "MSTORE",
      "path": "12"
    },
    "1570": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2652],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1572": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1574": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "SWAP1",
      "path": "12"
    },
    "1575": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "DUP2",
      "path": "12"
    },
    "1576": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "MSTORE",
      "path": "12"
    },
    "1577": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1579": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "DUP1",
      "path": "12"
    },
    "1580": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "DUP5",
      "path": "12"
    },
    "1581": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2665],
      "op": "KECCAK256",
      "path": "12"
    },
    "1582": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2557, 2560],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1585": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2549, 2560],
      "op": "DUP5",
      "path": "12"
    },
    "1586": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2549, 2560],
      "op": "DIV",
      "path": "12"
    },
    "1587": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "DUP6",
      "path": "12"
    },
    "1588": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "MSTORE",
      "path": "12"
    },
    "1589": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "SWAP1",
      "path": "12"
    },
    "1590": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "SWAP2",
      "path": "12"
    },
    "1591": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "MSTORE",
      "path": "12"
    },
    "1592": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "SWAP1",
      "path": "12"
    },
    "1593": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "SWAP2",
      "path": "12"
    },
    "1594": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "KECCAK256",
      "path": "12"
    },
    "1595": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2639, 2683],
      "op": "SLOAD",
      "path": "12"
    },
    "1596": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2709, 2710],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1598": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2596, 2607],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1600": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2596, 2607],
      "op": "SWAP1",
      "path": "12"
    },
    "1601": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2596, 2607],
      "op": "SWAP3",
      "path": "12"
    },
    "1602": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2596, 2607],
      "op": "AND",
      "path": "12"
    },
    "1603": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2709, 2729],
      "op": "SWAP2",
      "path": "12"
    },
    "1604": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2709, 2729],
      "op": "SWAP1",
      "path": "12"
    },
    "1605": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2709, 2729],
      "op": "SWAP2",
      "path": "12"
    },
    "1606": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2709, 2729],
      "op": "SHL",
      "path": "12"
    },
    "1607": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2747, 2765],
      "op": "SWAP1",
      "path": "12",
      "statement": 20
    },
    "1608": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2747, 2765],
      "op": "DUP2",
      "path": "12"
    },
    "1609": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2747, 2765],
      "op": "AND",
      "path": "12"
    },
    "1610": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2747, 2773],
      "op": "EQ",
      "path": "12"
    },
    "1611": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [2747, 2773],
      "op": "SWAP1",
      "path": "12"
    },
    "1612": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "o",
      "offset": [2430, 2780],
      "op": "JUMP",
      "path": "12"
    },
    "1613": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1101, 1238],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1614": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1167, 1179],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0x6"
    },
    "1616": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1167, 1179],
      "op": "SLOAD",
      "path": "12"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1167, 1179],
      "op": "AND",
      "path": "12"
    },
    "1626": {
      "branch": 38,
      "fn": "MerkleDistributor.setMinter",
      "offset": [1167, 1192],
      "op": "ISZERO",
      "path": "12"
    },
    "1627": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "PUSH2",
      "path": "12",
      "value": "0x663"
    },
    "1630": {
      "branch": 38,
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "JUMPI",
      "path": "12"
    },
    "1631": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1633": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "DUP1",
      "path": "12"
    },
    "1634": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "REVERT",
      "path": "12"
    },
    "1635": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1159, 1193],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1636": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1215],
      "op": "PUSH1",
      "path": "12",
      "statement": 22,
      "value": "0x6"
    },
    "1638": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "DUP1",
      "path": "12"
    },
    "1639": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SLOAD",
      "path": "12"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "op": "NOT"
    },
    "1649": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "AND",
      "path": "12"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP3",
      "path": "12"
    },
    "1659": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP1",
      "path": "12"
    },
    "1660": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP3",
      "path": "12"
    },
    "1661": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "AND",
      "path": "12"
    },
    "1662": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP2",
      "path": "12"
    },
    "1663": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP1",
      "path": "12"
    },
    "1664": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP2",
      "path": "12"
    },
    "1665": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "OR",
      "path": "12"
    },
    "1666": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SWAP1",
      "path": "12"
    },
    "1667": {
      "fn": "MerkleDistributor.setMinter",
      "offset": [1203, 1231],
      "op": "SSTORE",
      "path": "12"
    },
    "1668": {
      "fn": "MerkleDistributor.setMinter",
      "jump": "o",
      "offset": [1101, 1238],
      "op": "JUMP",
      "path": "12"
    },
    "1669": {
      "fn": "MerkleDistributor.verify",
      "offset": [3814, 4595],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1670": {
      "fn": "MerkleDistributor.verify",
      "offset": [3907, 3911],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1672": {
      "fn": "MerkleDistributor.verify",
      "offset": [3946, 3950],
      "op": "DUP2",
      "path": "12"
    },
    "1673": {
      "fn": "MerkleDistributor.verify",
      "offset": [3907, 3911],
      "op": "DUP2",
      "path": "12"
    },
    "1674": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1675": {
      "fn": "MerkleDistributor.verify",
      "offset": [3981, 3997],
      "op": "DUP6",
      "path": "12"
    },
    "1676": {
      "fn": "MerkleDistributor.verify",
      "offset": [3981, 3997],
      "op": "DUP2",
      "path": "12"
    },
    "1677": {
      "fn": "MerkleDistributor.verify",
      "offset": [3981, 3997],
      "op": "LT",
      "path": "12"
    },
    "1678": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "ISZERO",
      "path": "12"
    },
    "1679": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "PUSH2",
      "path": "12",
      "value": "0x721"
    },
    "1682": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "JUMPI",
      "path": "12"
    },
    "1683": {
      "fn": "MerkleDistributor.verify",
      "offset": [4018, 4038],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1685": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4046],
      "op": "DUP8",
      "path": "12"
    },
    "1686": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4046],
      "op": "DUP8",
      "path": "12"
    },
    "1687": {
      "fn": "MerkleDistributor.verify",
      "offset": [4047, 4048],
      "op": "DUP4",
      "path": "12"
    },
    "1688": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "DUP2",
      "path": "12"
    },
    "1689": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "DUP2",
      "path": "12"
    },
    "1690": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "LT",
      "path": "12"
    },
    "1691": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6A0"
    },
    "1694": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "JUMPI",
      "path": "12"
    },
    "1695": {
      "dev": "Index out of range",
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "INVALID",
      "path": "12"
    },
    "1696": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1697": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "SWAP1",
      "path": "12"
    },
    "1698": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "POP",
      "path": "12"
    },
    "1699": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1701": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "MUL",
      "path": "12"
    },
    "1702": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "ADD",
      "path": "12"
    },
    "1703": {
      "fn": "MerkleDistributor.verify",
      "offset": [4041, 4049],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1704": {
      "fn": "MerkleDistributor.verify",
      "offset": [4018, 4049],
      "op": "SWAP1",
      "path": "12"
    },
    "1705": {
      "fn": "MerkleDistributor.verify",
      "offset": [4018, 4049],
      "op": "POP",
      "path": "12"
    },
    "1706": {
      "fn": "MerkleDistributor.verify",
      "offset": [4084, 4096],
      "op": "DUP1",
      "path": "12"
    },
    "1707": {
      "fn": "MerkleDistributor.verify",
      "offset": [4068, 4080],
      "op": "DUP4",
      "path": "12"
    },
    "1708": {
      "branch": 39,
      "fn": "MerkleDistributor.verify",
      "offset": [4068, 4096],
      "op": "GT",
      "path": "12"
    },
    "1709": {
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E6"
    },
    "1712": {
      "branch": 39,
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "JUMPI",
      "path": "12"
    },
    "1713": {
      "fn": "MerkleDistributor.verify",
      "offset": [4236, 4248],
      "op": "DUP3",
      "path": "12",
      "statement": 23
    },
    "1714": {
      "fn": "MerkleDistributor.verify",
      "offset": [4250, 4262],
      "op": "DUP2",
      "path": "12"
    },
    "1715": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1717": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MLOAD",
      "path": "12"
    },
    "1718": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1720": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "ADD",
      "path": "12"
    },
    "1721": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP1",
      "path": "12"
    },
    "1722": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP4",
      "path": "12"
    },
    "1723": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP2",
      "path": "12"
    },
    "1724": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MSTORE",
      "path": "12"
    },
    "1725": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1727": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "ADD",
      "path": "12"
    },
    "1728": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP3",
      "path": "12"
    },
    "1729": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP2",
      "path": "12"
    },
    "1730": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MSTORE",
      "path": "12"
    },
    "1731": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1733": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "ADD",
      "path": "12"
    },
    "1734": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "SWAP3",
      "path": "12"
    },
    "1735": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "POP",
      "path": "12"
    },
    "1736": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "POP",
      "path": "12"
    },
    "1737": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "POP",
      "path": "12"
    },
    "1738": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1740": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MLOAD",
      "path": "12"
    },
    "1741": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1743": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP2",
      "path": "12"
    },
    "1744": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP4",
      "path": "12"
    },
    "1745": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "SUB",
      "path": "12"
    },
    "1746": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "SUB",
      "path": "12"
    },
    "1747": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "DUP2",
      "path": "12"
    },
    "1748": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MSTORE",
      "path": "12"
    },
    "1749": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "SWAP1",
      "path": "12"
    },
    "1750": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1752": {
      "fn": "MerkleDistributor.verify",
      "offset": [4219, 4263],
      "op": "MSTORE",
      "path": "12"
    },
    "1753": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "DUP1",
      "path": "12"
    },
    "1754": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "MLOAD",
      "path": "12"
    },
    "1755": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "SWAP1",
      "path": "12"
    },
    "1756": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1758": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "ADD",
      "path": "12"
    },
    "1759": {
      "fn": "MerkleDistributor.verify",
      "offset": [4209, 4264],
      "op": "KECCAK256",
      "path": "12"
    },
    "1760": {
      "fn": "MerkleDistributor.verify",
      "offset": [4194, 4264],
      "op": "SWAP3",
      "path": "12"
    },
    "1761": {
      "fn": "MerkleDistributor.verify",
      "offset": [4194, 4264],
      "op": "POP",
      "path": "12"
    },
    "1762": {
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "PUSH2",
      "path": "12",
      "value": "0x718"
    },
    "1765": {
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "JUMP",
      "path": "12"
    },
    "1766": {
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1767": {
      "fn": "MerkleDistributor.verify",
      "offset": [4423, 4435],
      "op": "DUP1",
      "path": "12",
      "statement": 24
    },
    "1768": {
      "fn": "MerkleDistributor.verify",
      "offset": [4437, 4449],
      "op": "DUP4",
      "path": "12"
    },
    "1769": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1771": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MLOAD",
      "path": "12"
    },
    "1772": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1774": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "ADD",
      "path": "12"
    },
    "1775": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP1",
      "path": "12"
    },
    "1776": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP4",
      "path": "12"
    },
    "1777": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP2",
      "path": "12"
    },
    "1778": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MSTORE",
      "path": "12"
    },
    "1779": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1781": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "ADD",
      "path": "12"
    },
    "1782": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP3",
      "path": "12"
    },
    "1783": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP2",
      "path": "12"
    },
    "1784": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MSTORE",
      "path": "12"
    },
    "1785": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1787": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "ADD",
      "path": "12"
    },
    "1788": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "SWAP3",
      "path": "12"
    },
    "1789": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "POP",
      "path": "12"
    },
    "1790": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "POP",
      "path": "12"
    },
    "1791": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "POP",
      "path": "12"
    },
    "1792": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1794": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MLOAD",
      "path": "12"
    },
    "1795": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1797": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP2",
      "path": "12"
    },
    "1798": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP4",
      "path": "12"
    },
    "1799": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "SUB",
      "path": "12"
    },
    "1800": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "SUB",
      "path": "12"
    },
    "1801": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "DUP2",
      "path": "12"
    },
    "1802": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MSTORE",
      "path": "12"
    },
    "1803": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "SWAP1",
      "path": "12"
    },
    "1804": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1806": {
      "fn": "MerkleDistributor.verify",
      "offset": [4406, 4450],
      "op": "MSTORE",
      "path": "12"
    },
    "1807": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "DUP1",
      "path": "12"
    },
    "1808": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "MLOAD",
      "path": "12"
    },
    "1809": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "SWAP1",
      "path": "12"
    },
    "1810": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1812": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "ADD",
      "path": "12"
    },
    "1813": {
      "fn": "MerkleDistributor.verify",
      "offset": [4396, 4451],
      "op": "KECCAK256",
      "path": "12"
    },
    "1814": {
      "fn": "MerkleDistributor.verify",
      "offset": [4381, 4451],
      "op": "SWAP3",
      "path": "12"
    },
    "1815": {
      "fn": "MerkleDistributor.verify",
      "offset": [4381, 4451],
      "op": "POP",
      "path": "12"
    },
    "1816": {
      "fn": "MerkleDistributor.verify",
      "offset": [4064, 4466],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "fn": "MerkleDistributor.verify",
      "offset": [3999, 4002],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0x1"
    },
    "1820": {
      "fn": "MerkleDistributor.verify",
      "offset": [3999, 4002],
      "op": "ADD",
      "path": "12"
    },
    "1821": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "PUSH2",
      "path": "12",
      "value": "0x68A"
    },
    "1824": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "JUMP",
      "path": "12"
    },
    "1825": {
      "fn": "MerkleDistributor.verify",
      "offset": [3961, 4476],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "fn": "MerkleDistributor.verify",
      "offset": [4568, 4588],
      "op": "SWAP1",
      "path": "12",
      "statement": 26
    },
    "1828": {
      "fn": "MerkleDistributor.verify",
      "offset": [4568, 4588],
      "op": "SWAP3",
      "path": "12"
    },
    "1829": {
      "fn": "MerkleDistributor.verify",
      "offset": [4568, 4588],
      "op": "EQ",
      "path": "12"
    },
    "1830": {
      "fn": "MerkleDistributor.verify",
      "offset": [4568, 4588],
      "op": "SWAP5",
      "path": "12"
    },
    "1831": {
      "fn": "MerkleDistributor.verify",
      "offset": [3814, 4595],
      "op": "SWAP4",
      "path": "12"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "fn": "MerkleDistributor.verify",
      "jump": "o",
      "offset": [3814, 4595],
      "op": "JUMP",
      "path": "12"
    },
    "1837": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2786, 3079],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1838": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2861, 2885],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1840": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "SWAP2",
      "path": "12",
      "statement": 27
    },
    "1841": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "DUP3",
      "path": "12"
    },
    "1842": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "MSTORE",
      "path": "12"
    },
    "1843": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3016],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1845": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1847": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "SWAP1",
      "path": "12"
    },
    "1848": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "DUP2",
      "path": "12"
    },
    "1849": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "MSTORE",
      "path": "12"
    },
    "1850": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1852": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "DUP1",
      "path": "12"
    },
    "1853": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "DUP5",
      "path": "12"
    },
    "1854": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3029],
      "op": "KECCAK256",
      "path": "12"
    },
    "1855": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2896, 2899],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1858": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2888, 2899],
      "op": "DUP5",
      "path": "12"
    },
    "1859": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2888, 2899],
      "op": "DIV",
      "path": "12"
    },
    "1860": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "DUP6",
      "path": "12"
    },
    "1861": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "MSTORE",
      "path": "12"
    },
    "1862": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "SWAP1",
      "path": "12"
    },
    "1863": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "SWAP2",
      "path": "12"
    },
    "1864": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "MSTORE",
      "path": "12"
    },
    "1865": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "SWAP1",
      "path": "12"
    },
    "1866": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "SWAP2",
      "path": "12"
    },
    "1867": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "KECCAK256",
      "path": "12"
    },
    "1868": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "DUP1",
      "path": "12"
    },
    "1869": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3047],
      "op": "SLOAD",
      "path": "12"
    },
    "1870": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3051, 3052],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1872": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2935, 2946],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1874": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2935, 2946],
      "op": "SWAP1",
      "path": "12"
    },
    "1875": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2935, 2946],
      "op": "SWAP4",
      "path": "12"
    },
    "1876": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2935, 2946],
      "op": "AND",
      "path": "12"
    },
    "1877": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3051, 3071],
      "op": "SWAP3",
      "path": "12"
    },
    "1878": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3051, 3071],
      "op": "SWAP1",
      "path": "12"
    },
    "1879": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3051, 3071],
      "op": "SWAP3",
      "path": "12"
    },
    "1880": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3051, 3071],
      "op": "SHL",
      "path": "12"
    },
    "1881": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3072],
      "op": "SWAP1",
      "path": "12"
    },
    "1882": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3072],
      "op": "SWAP2",
      "path": "12"
    },
    "1883": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [3003, 3072],
      "op": "OR",
      "path": "12"
    },
    "1884": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2956, 3072],
      "op": "SWAP1",
      "path": "12"
    },
    "1885": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [2956, 3072],
      "op": "SSTORE",
      "path": "12"
    },
    "1886": {
      "fn": "MerkleDistributor._setClaimed",
      "jump": "o",
      "offset": [2786, 3079],
      "op": "JUMP",
      "path": "12"
    }
  },
  "sha1": "7e12df6cd8a73658f6c49f646e49992b653d6fa9",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.7.6;\n\ninterface Minter {\n    function mint(address _receiver, uint256 _amount) external;\n}\n\n\n// MerkleDistributor for ongoing EPS airdrop to veCRV holders\n// Based on the EMN refund contract by banteg - https://github.com/banteg/your-eminence\ncontract MerkleDistributor {\n\n    bytes32[] public merkleRoots;\n    bytes32 public pendingMerkleRoot;\n    uint256 public lastRoot;\n\n    // admin address which can propose adding a new merkle root\n    address public proposalAuthority;\n    // admin address which approves or rejects a proposed merkle root\n    address public reviewAuthority;\n\n    event Claimed(\n        uint256 merkleIndex,\n        uint256 index,\n        address account,\n        uint256 amount\n    );\n\n    // This is a packed array of booleans.\n    mapping(uint256 => mapping(uint256 => uint256)) private claimedBitMap;\n    Minter public rewardMinter;\n\n    constructor(address _proposalAuthority, address _reviewAuthority) public {\n        proposalAuthority = _proposalAuthority;\n        reviewAuthority = _reviewAuthority;\n    }\n\n    function setMinter(Minter _rewardMinter) public {\n        require(rewardMinter == Minter(0));\n        rewardMinter = _rewardMinter;\n    }\n\n    function setProposalAuthority(address _account) public {\n        require(msg.sender == proposalAuthority);\n        proposalAuthority = _account;\n    }\n\n    function setReviewAuthority(address _account) public {\n        require(msg.sender == reviewAuthority);\n        reviewAuthority = _account;\n    }\n\n    // Each week, the proposal authority calls to submit the merkle root for a new airdrop.\n    function proposewMerkleRoot(bytes32 _merkleRoot) public {\n        require(msg.sender == proposalAuthority);\n        require(pendingMerkleRoot == 0x00);\n        require(merkleRoots.length < 52);\n        require(block.timestamp > lastRoot + 604800);\n        pendingMerkleRoot = _merkleRoot;\n    }\n\n    // After validating the correctness of the pending merkle root, the reviewing authority\n    // calls to confirm it and the distribution may begin.\n    function reviewPendingMerkleRoot(bool _approved) public {\n        require(msg.sender == reviewAuthority);\n        require(pendingMerkleRoot != 0x00);\n        if (_approved) {\n            merkleRoots.push(pendingMerkleRoot);\n            lastRoot = block.timestamp / 604800 * 604800;\n        }\n        delete pendingMerkleRoot;\n    }\n\n    function isClaimed(uint256 merkleIndex, uint256 index) public view returns (bool) {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        uint256 claimedWord = claimedBitMap[merkleIndex][claimedWordIndex];\n        uint256 mask = (1 << claimedBitIndex);\n        return claimedWord & mask == mask;\n    }\n\n    function _setClaimed(uint256 merkleIndex, uint256 index) private {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        claimedBitMap[merkleIndex][claimedWordIndex] = claimedBitMap[merkleIndex][claimedWordIndex] | (1 << claimedBitIndex);\n    }\n\n    function claim(uint256 merkleIndex, uint256 index, uint256 amount, bytes32[] calldata merkleProof) external {\n        require(merkleIndex < merkleRoots.length, \"MerkleDistributor: Invalid merkleIndex\");\n        require(!isClaimed(merkleIndex, index), 'MerkleDistributor: Drop already claimed.');\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(index, msg.sender, amount));\n        require(verify(merkleProof, merkleRoots[merkleIndex], node), 'MerkleDistributor: Invalid proof.');\n\n        // Mark it claimed and send the token.\n        _setClaimed(merkleIndex, index);\n        rewardMinter.mint(msg.sender, amount);\n\n        emit Claimed(merkleIndex, index, msg.sender, amount);\n    }\n\n    function verify(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        bytes32 computedHash = leaf;\n\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\n            }\n        }\n\n        // Check if the computed hash (root) is equal to the provided root\n        return computedHash == root;\n    }\n\n}\n",
  "sourceMap": "300:4298:12:-:0;;;923:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;923:172:12;;;;;;;1006:17;:38;;-1:-1:-1;;;;;1006:38:12;;;-1:-1:-1;;;;;;1006:38:12;;;;;;;1054:15;:34;;;;;;;;;;;;;;300:4298;;;;;;",
  "sourcePath": "contracts/MerkleDistributor.sol",
  "type": "contract"
}
