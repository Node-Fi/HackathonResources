{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "fees",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "NewAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDepositFee",
          "type": "uint256"
        }
      ],
      "name": "NewDepositFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "NewSwapFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newWithdrawFee",
          "type": "uint256"
        }
      ],
      "name": "NewWithdrawFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "RampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "fees",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityImbalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "boughtId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensBought",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityOne",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "StopRampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensBought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "soldId",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "boughtId",
          "type": "uint128"
        }
      ],
      "name": "TokenSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensBought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "soldId",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "boughtId",
          "type": "uint128"
        }
      ],
      "name": "TokenSwapUnderlying",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minToMint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "calculateCurrentWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndex",
          "type": "uint8"
        }
      ],
      "name": "calculateRemoveLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "tokenIndexFrom",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndexTo",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "calculateSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "tokenIndexFrom",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndexTo",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "calculateSwapUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "deposit",
          "type": "bool"
        }
      ],
      "name": "calculateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPrecise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAdminBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalances",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getDepositTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLpToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "getTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVirtualPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "_pooledTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "decimals",
          "type": "uint8[]"
        },
        {
          "internalType": "string",
          "name": "lpTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lpTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adminFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "_pooledTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "decimals",
          "type": "uint8[]"
        },
        {
          "internalType": "string",
          "name": "lpTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lpTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adminFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "contract ISwap",
          "name": "baseSwap",
          "type": "address"
        }
      ],
      "name": "initializeMetaSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metaSwapStorage",
      "outputs": [
        {
          "internalType": "contract ISwap",
          "name": "baseSwap",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "baseVirtualPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseCacheLastUpdated",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "maxBurnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityImbalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "setAdminFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDepositFee",
          "type": "uint256"
        }
      ],
      "name": "setDefaultDepositFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newWithdrawFee",
          "type": "uint256"
        }
      ],
      "name": "setDefaultWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "setDevAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "tokenIndexFrom",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndexTo",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapStorage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "initialA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialATime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureATime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "adminFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "defaultDepositFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "defaultWithdrawFee",
          "type": "uint256"
        },
        {
          "internalType": "contract LPToken",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "devaddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "tokenIndexFrom",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "tokenIndexTo",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferAmount",
          "type": "uint256"
        }
      ],
      "name": "updateUserWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAdminFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "1": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "10": "contracts/LPToken.sol",
    "11": "contracts/MathUtils.sol",
    "12": "contracts/OwnerPausable.sol",
    "13": "contracts/Swap.sol",
    "14": "contracts/SwapUtils.sol",
    "15": "interfaces/ISwap.sol",
    "2": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "3": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
    "4": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "5": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "7": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "8": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Pausable.sol",
    "9": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol"
  },
  "ast": {
    "absolutePath": "contracts/Swap.sol",
    "exportedSymbols": {
      "Swap": [993]
    },
    "id": 994,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "0.6", ".12"],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 4872,
        "src": "58:79:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 5085,
        "src": "138:87:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 5125,
        "src": "226:87:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OwnerPausable.sol",
        "file": "./OwnerPausable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 5223,
        "src": "314:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SwapUtils.sol",
        "file": "./SwapUtils.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 4517,
        "src": "344:25:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MathUtils.sol",
        "file": "./MathUtils.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 994,
        "sourceUnit": 5189,
        "src": "370:25:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "OwnerPausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5222,
              "src": "1336:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerPausable_$5222",
                "typeString": "contract OwnerPausable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1336:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5124,
              "src": "1351:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$5124",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "1351:15:13"
          }
        ],
        "contractDependencies": [5124, 5222, 5316, 5800, 5892, 5984],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "397:921:13",
          "text": " @title Swap - A StableSwap implementation in solidity.\n @notice This contract is responsible for custody of closely pegged assets (eg. group of stablecoins)\n and automatic market making system. Users become an LP (Liquidity Provider) by depositing their tokens\n in desired ratios for an exchange of the pool token that represents their share of the pool.\n Users can burn pool tokens and withdraw their share of token(s).\n Each time a swap between the pooled tokens happens, a set fee incurs which effectively gets\n distributed to the LPs.\n In case of emergencies, admin can pause additional deposits, swaps, or single-asset withdraws - which\n stops the ratio of the tokens in the pool from changing.\n Users can always withdraw their tokens via multi-asset withdraws.\n @dev Most of the logic is stored as a library `SwapUtils` for the sake of reducing contract's\n deployment size."
        },
        "fullyImplemented": true,
        "id": 993,
        "linearizedBaseContracts": [993, 5124, 5222, 5892, 5800, 5984],
        "name": "Swap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5084,
              "src": "1379:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5084",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1373:27:13",
            "typeName": {
              "contractScope": null,
              "id": 14,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5394,
              "src": "1393:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5394",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 18,
            "libraryName": {
              "contractScope": null,
              "id": 16,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4871,
              "src": "1411:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4871",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1405:27:13",
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1424:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21,
            "libraryName": {
              "contractScope": null,
              "id": 19,
              "name": "MathUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5188,
              "src": "1443:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathUtils_$5188",
                "typeString": "library MathUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1437:28:13",
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1457:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 24,
            "libraryName": {
              "contractScope": null,
              "id": 22,
              "name": "SwapUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4516,
              "src": "1476:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapUtils_$4516",
                "typeString": "library SwapUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1470:35:13",
            "typeName": {
              "contractScope": null,
              "id": 23,
              "name": "SwapUtils.Swap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1140,
              "src": "1490:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Swap_$1140_storage_ptr",
                "typeString": "struct SwapUtils.Swap"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "5fd65f0f",
            "id": 26,
            "mutability": "mutable",
            "name": "swapStorage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 993,
            "src": "1705:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Swap_$1140_storage",
              "typeString": "struct SwapUtils.Swap"
            },
            "typeName": {
              "contractScope": null,
              "id": 25,
              "name": "SwapUtils.Swap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1140,
              "src": "1705:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Swap_$1140_storage_ptr",
                "typeString": "struct SwapUtils.Swap"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "tokenIndexes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 993,
            "src": "1925:46:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1933:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1925:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 28,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1944:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "TokenSwap",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "2112:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensSold",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "2143:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensBought",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "2171:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "soldId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "2201:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "boughtId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "2225:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2102:145:13"
            },
            "src": "2087:161:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 56,
            "name": "AddLiquidity",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "2281:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "2315:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2315:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2315:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "2347:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2347:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 49,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2347:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "invariant",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "2371:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "2398:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2271:154:13"
            },
            "src": "2253:173:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 65,
            "name": "RemoveLiquidity",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "2462:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "2496:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2496:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2496:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "2528:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2452:103:13"
            },
            "src": "2431:125:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 77,
            "name": "RemoveLiquidityOne",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "2595:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "2629:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "2660:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "boughtId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "2691:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensBought",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "2717:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2717:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2585:158:13"
            },
            "src": "2561:183:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 91,
            "name": "RemoveLiquidityImbalance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2789:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2823:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2823:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2823:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2855:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 83,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2855:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 84,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2855:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "invariant",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2879:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2906:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2779:154:13"
            },
            "src": "2749:185:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 95,
            "name": "NewAdminFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdminFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "2957:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:21:13"
            },
            "src": "2939:39:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 99,
            "name": "NewSwapFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newSwapFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "3000:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3000:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2999:20:13"
            },
            "src": "2983:37:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 103,
            "name": "NewDepositFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDepositFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "3045:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3045:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3044:23:13"
            },
            "src": "3025:43:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 107,
            "name": "NewWithdrawFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newWithdrawFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 107,
                  "src": "3094:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3094:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3093:24:13"
            },
            "src": "3073:45:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 117,
            "name": "RampA",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3144:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3166:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3188:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3188:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "futureTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3217:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3134:107:13"
            },
            "src": "3123:119:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 123,
            "name": "StopRampA",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 123,
                  "src": "3263:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 123,
                  "src": "3281:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3262:32:13"
            },
            "src": "3247:48:13"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "4739:2739:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "_pooledTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "4813:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4813:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4836:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4813:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f706f6f6c6564546f6b656e732e6c656e677468203c3d2031",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4839:27:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_970799e1f627408fdded2dc5c7134cb1d811dd980578c56c1b2a095ba293abce",
                          "typeString": "literal_string \"_pooledTokens.length <= 1\""
                        },
                        "value": "_pooledTokens.length <= 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_970799e1f627408fdded2dc5c7134cb1d811dd980578c56c1b2a095ba293abce",
                          "typeString": "literal_string \"_pooledTokens.length <= 1\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4805:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4805:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:62:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 162,
                            "name": "_pooledTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "4885:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4885:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3332",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4909:2:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "4885:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f706f6f6c6564546f6b656e732e6c656e677468203e203332",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4913:27:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cbc151dafe7e970130b8a0f7dece6730906d94e840e378a68a9b23627ef3e07",
                          "typeString": "literal_string \"_pooledTokens.length > 32\""
                        },
                        "value": "_pooledTokens.length > 32"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cbc151dafe7e970130b8a0f7dece6730906d94e840e378a68a9b23627ef3e07",
                          "typeString": "literal_string \"_pooledTokens.length > 32\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4877:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:64:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "_pooledTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "4972:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4972:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 172,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "4996:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4996:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4972:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f706f6f6c6564546f6b656e7320646563696d616c73206d69736d61746368",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5025:33:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_920ab7aea64abf6f625f3ec866769a336d71d85943ea085dcc6d4f83565e10e2",
                          "typeString": "literal_string \"_pooledTokens decimals mismatch\""
                        },
                        "value": "_pooledTokens decimals mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_920ab7aea64abf6f625f3ec866769a336d71d85943ea085dcc6d4f83565e10e2",
                          "typeString": "literal_string \"_pooledTokens decimals mismatch\""
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4951:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4951:117:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "4951:117:13"
                },
                {
                  "assignments": [182],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "precisionMultipliers",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 423,
                      "src": "5079:37:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5079:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 181,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5079:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 186,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "5133:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5133:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5119:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5123:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 184,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5123:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5119:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5079:70:13"
                },
                {
                  "body": {
                    "id": 284,
                    "nodeType": "Block",
                    "src": "5209:892:13",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "5227:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5231:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5227:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 227,
                        "nodeType": "IfStatement",
                        "src": "5223:327:13",
                        "trueBody": {
                          "id": 226,
                          "nodeType": "Block",
                          "src": "5234:316:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 205,
                                          "name": "tokenIndexes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30,
                                          "src": "5369:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                            "typeString": "mapping(address => uint8)"
                                          }
                                        },
                                        "id": 212,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 208,
                                                "name": "_pooledTokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 127,
                                                "src": "5390:13:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                                                  "typeString": "contract IERC20[] memory"
                                                }
                                              },
                                              "id": 210,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 209,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 191,
                                                "src": "5404:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5390:16:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$5394",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$5394",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 207,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5382:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 206,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5382:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 211,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5382:25:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5369:39:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5412:1:13",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5369:44:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_contract$_IERC20_$5394",
                                        "typeString": "contract IERC20"
                                      },
                                      "id": 221,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 215,
                                          "name": "_pooledTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 127,
                                          "src": "5441:13:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                                            "typeString": "contract IERC20[] memory"
                                          }
                                        },
                                        "id": 217,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 216,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5455:1:13",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5441:16:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$5394",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 218,
                                          "name": "_pooledTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 127,
                                          "src": "5461:13:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                                            "typeString": "contract IERC20[] memory"
                                          }
                                        },
                                        "id": 220,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 219,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 191,
                                          "src": "5475:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5461:16:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$5394",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "src": "5441:36:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5369:108:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4475706c696361746520746f6b656e73",
                                    "id": 223,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5499:18:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb",
                                      "typeString": "literal_string \"Duplicate tokens\""
                                    },
                                    "value": "Duplicate tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb",
                                      "typeString": "literal_string \"Duplicate tokens\""
                                    }
                                  ],
                                  "id": 204,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [-18, -18],
                                  "referencedDeclaration": -18,
                                  "src": "5340:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5340:195:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 225,
                              "nodeType": "ExpressionStatement",
                              "src": "5340:195:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 231,
                                      "name": "_pooledTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 127,
                                      "src": "5596:13:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                                        "typeString": "contract IERC20[] memory"
                                      }
                                    },
                                    "id": 233,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 232,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 191,
                                      "src": "5610:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5596:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5394",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$5394",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5588:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 229,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5588:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5588:25:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5625:1:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5617:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 235,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5617:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5617:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5588:39:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865203020616464726573732069736e277420616e204552432d3230",
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5645:31:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b906ee6e71cd5815b0e043fe7cf4686b9eba5c13a6e0a21a7bb55e8a6681b39d",
                                "typeString": "literal_string \"The 0 address isn't an ERC-20\""
                              },
                              "value": "The 0 address isn't an ERC-20"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b906ee6e71cd5815b0e043fe7cf4686b9eba5c13a6e0a21a7bb55e8a6681b39d",
                                "typeString": "literal_string \"The 0 address isn't an ERC-20\""
                              }
                            ],
                            "id": 228,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5563:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5563:127:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "5563:127:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 244,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "5729:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 246,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 245,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "5738:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5729:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 247,
                                  "name": "SwapUtils",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4516,
                                  "src": "5744:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                                    "typeString": "type(library SwapUtils)"
                                  }
                                },
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "POOL_PRECISION_DECIMALS",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1172,
                                "src": "5744:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "5729:48:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546f6b656e20646563696d616c732065786365656473206d6178",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5795:28:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3659d4e5f95ff79d6b4bfc4ef30ecea959c6574585372b1f2b55fd5d9b45e4f4",
                                "typeString": "literal_string \"Token decimals exceeds max\""
                              },
                              "value": "Token decimals exceeds max"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3659d4e5f95ff79d6b4bfc4ef30ecea959c6574585372b1f2b55fd5d9b45e4f4",
                                "typeString": "literal_string \"Token decimals exceeds max\""
                              }
                            ],
                            "id": 243,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5704:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5704:133:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "5704:133:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 253,
                              "name": "precisionMultipliers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "5851:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 255,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 254,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "5872:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5851:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5893:2:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 265,
                                        "name": "decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 130,
                                        "src": "5999:8:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                          "typeString": "uint8[] memory"
                                        }
                                      },
                                      "id": 267,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 266,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
                                        "src": "6008:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5999:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5991:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 263,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5991:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5991:20:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 259,
                                        "name": "SwapUtils",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4516,
                                        "src": "5927:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                                          "typeString": "type(library SwapUtils)"
                                        }
                                      },
                                      "id": 260,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "POOL_PRECISION_DECIMALS",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1172,
                                      "src": "5927:33:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5919:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 257,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5919:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5919:42:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4720,
                                "src": "5919:46:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5919:114:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5893:140:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5851:182:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "5851:182:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 273,
                              "name": "tokenIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "6047:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                "typeString": "mapping(address => uint8)"
                              }
                            },
                            "id": 280,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 276,
                                    "name": "_pooledTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 127,
                                    "src": "6068:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                                      "typeString": "contract IERC20[] memory"
                                    }
                                  },
                                  "id": 278,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 277,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 191,
                                    "src": "6082:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6068:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$5394",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$5394",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6060:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 274,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6060:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6060:25:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6047:39:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "6089:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "6047:43:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 283,
                        "nodeType": "ExpressionStatement",
                        "src": "6047:43:13"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "5178:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_pooledTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "5182:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5182:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5178:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 285,
                  "initializationExpression": {
                    "assignments": [191],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 285,
                        "src": "5165:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5165:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 193,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5175:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5165:11:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5204:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "5204:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 200,
                    "nodeType": "ExpressionStatement",
                    "src": "5204:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "5160:941:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "6183:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 288,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6188:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_A",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1208,
                          "src": "6188:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6183:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f612065786365656473206d6178696d756d",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6205:20:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        },
                        "value": "_a exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6175:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6175:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "6175:51:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "6244:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6251:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_SWAP_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1182,
                          "src": "6251:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6244:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6665652065786365656473206d6178696d756d",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6275:22:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        },
                        "value": "_fee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6236:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6236:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "6236:62:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 303,
                          "name": "_adminFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "6329:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6341:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_ADMIN_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1187,
                          "src": "6341:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6329:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f61646d696e4665652065786365656473206d6178696d756d",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6378:27:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        },
                        "value": "_adminFee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6308:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6308:107:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "6308:107:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 311,
                          "name": "_withdrawFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "6446:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 312,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6461:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_WITHDRAW_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1192,
                          "src": "6461:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6446:41:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f77697468647261774665652065786365656473206d6178696d756d",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6501:30:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5610fa65ef47ce8ec833b9f638f43c2516abcf99c64efa6eca0c369a916ccef",
                          "typeString": "literal_string \"_withdrawFee exceeds maximum\""
                        },
                        "value": "_withdrawFee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5610fa65ef47ce8ec833b9f638f43c2516abcf99c64efa6eca0c369a916ccef",
                          "typeString": "literal_string \"_withdrawFee exceeds maximum\""
                        }
                      ],
                      "id": 310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6425:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6425:116:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "6425:116:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "_depositFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "6572:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6586:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_DEPOSIT_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1197,
                          "src": "6586:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6572:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6465706f7369744665652065786365656473206d6178696d756d",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6625:29:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0e183acfbfec849e409a3e2824f1e0197370844274260b186d12f2d43a3d52f",
                          "typeString": "literal_string \"_depositFee exceeds maximum\""
                        },
                        "value": "_depositFee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0e183acfbfec849e409a3e2824f1e0197370844274260b186d12f2d43a3d52f",
                          "typeString": "literal_string \"_depositFee exceeds maximum\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6551:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6551:113:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:113:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 326,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "6716:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1122,
                      "src": "6716:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPToken_$5316",
                        "typeString": "contract LPToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "lpTokenName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "6763:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "lpTokenSymbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "6788:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "6815:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "POOL_PRECISION_DECIMALS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1172,
                          "src": "6815:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6738:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_LPToken_$5316_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract LPToken)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 329,
                          "name": "LPToken",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5316,
                          "src": "6742:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LPToken_$5316",
                            "typeString": "contract LPToken"
                          }
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6738:120:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPToken_$5316",
                        "typeString": "contract LPToken"
                      }
                    },
                    "src": "6716:142:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LPToken_$5316",
                      "typeString": "contract LPToken"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "6716:142:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 338,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "6868:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pooledTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "6868:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "_pooledTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "6895:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "6868:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "6868:40:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "6918:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPrecisionMultipliers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "6918:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "precisionMultipliers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "6958:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6918:60:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "6918:60:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "6988:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "6988:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "_pooledTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "7025:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7025:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7011:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 353,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7015:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 354,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "7015:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7011:35:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6988:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "6988:58:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7056:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1104,
                      "src": "7056:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "7086:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "A_PRECISION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1203,
                          "src": "7086:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 364,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "7079:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4754,
                        "src": "7079:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7079:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7056:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "7056:52:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7118:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "futureA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1106,
                      "src": "7118:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 376,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4516,
                            "src": "7147:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$4516_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "A_PRECISION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1203,
                          "src": "7147:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 374,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "7140:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4754,
                        "src": "7140:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7140:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7118:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "7118:51:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7179:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialATime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1108,
                      "src": "7179:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7206:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7179:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:28:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7217:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "futureATime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1110,
                      "src": "7217:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7243:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7217:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "7217:27:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7254:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "swapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1112,
                      "src": "7254:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "7276:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7254:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7290:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "adminFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1114,
                      "src": "7290:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "_adminFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "7313:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7290:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "7290:32:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7332:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "defaultDepositFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1116,
                      "src": "7332:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 408,
                      "name": "_depositFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "7364:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7332:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "7332:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7385:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "defaultWithdrawFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1118,
                      "src": "7385:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "_withdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "7418:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7385:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "7385:45:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "7440:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "devaddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1120,
                      "src": "7440:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "7462:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7440:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "7440:30:13"
                }
              ]
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "3301:1076:13",
              "text": " @notice Deploys this Swap contract with given parameters as default\n values. This will also deploy a LPToken that represents users\n LP position. The owner of LPToken will be this contract - which means\n only this contract is allowed to mint new tokens.\n @param _pooledTokens an array of ERC20s this pool will accept\n @param decimals the decimals to use for each pooled token,\n eg 8 for WBTC. Cannot be larger than POOL_PRECISION_DECIMALS\n @param lpTokenName the long-form name of the token to be deployed\n @param lpTokenSymbol the short symbol for the token to be deployed\n @param _a the amplification coefficient * n * (n - 1). See the\n StableSwap paper for details\n @param _fee default swap fee to be initialized with\n @param _adminFee default adminFee to be initialized with\n @param _depositFee default depositFee to be initialized with\n @param _withdrawFee default withdrawFee to be initialized with\n @param _devaddr default _devaddr to be initialized with"
            },
            "id": 424,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 148,
                  "name": "OwnerPausable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5222,
                  "src": "4705:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OwnerPausable_$5222_$",
                    "typeString": "type(contract OwnerPausable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4705:15:13"
              },
              {
                "arguments": [],
                "id": 151,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 150,
                  "name": "ReentrancyGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5124,
                  "src": "4721:15:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ReentrancyGuard_$5124_$",
                    "typeString": "type(contract ReentrancyGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4721:17:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_pooledTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4403:29:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 125,
                      "name": "IERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5394,
                      "src": "4403:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5394",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 126,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4403:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4442:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4442:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 129,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4442:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "lpTokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4475:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4475:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "lpTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4510:27:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4547:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4547:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4567:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_adminFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4589:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_depositFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4616:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_withdrawFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4645:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 424,
                  "src": "4675:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4675:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:304:13"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4739:0:13"
            },
            "scope": 993,
            "src": "4382:3096:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "7701:84:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7719:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7719:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 432,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "7738:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7719:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "446561646c696e65206e6f74206d6574",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7748:18:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        },
                        "value": "Deadline not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7711:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7711:56:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7711:56:13"
                },
                {
                  "id": 437,
                  "nodeType": "PlaceholderStatement",
                  "src": "7777:1:13"
                }
              ]
            },
            "documentation": {
              "id": 425,
              "nodeType": "StructuredDocumentation",
              "src": "7509:146:13",
              "text": " @notice Modifier to check deadline against current timestamp\n @param deadline latest timestamp to accept this transaction"
            },
            "id": 439,
            "name": "deadlineCheck",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 439,
                  "src": "7683:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7682:18:13"
            },
            "src": "7660:125:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "8030:42:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 445,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "8047:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1227,
                      "src": "8047:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 444,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "8040:25:13"
                }
              ]
            },
            "documentation": {
              "id": 440,
              "nodeType": "StructuredDocumentation",
              "src": "7821:156:13",
              "text": " @notice Return A, the amplification coefficient * n * (n - 1)\n @dev See the StableSwap paper for details\n @return A parameter"
            },
            "functionSelector": "d46300fd",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getA",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7995:2:13"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 450,
                  "src": "8021:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8021:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8020:9:13"
            },
            "scope": 993,
            "src": "7982:90:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 460,
              "nodeType": "Block",
              "src": "8301:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "8318:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAPrecise",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "8318:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8318:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 455,
                  "id": 459,
                  "nodeType": "Return",
                  "src": "8311:32:13"
                }
              ]
            },
            "documentation": {
              "id": 451,
              "nodeType": "StructuredDocumentation",
              "src": "8078:163:13",
              "text": " @notice Return A in its raw precision form\n @dev See the StableSwap paper for details\n @return A parameter in its raw precision form"
            },
            "functionSelector": "0ba81959",
            "id": 461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAPrecise",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8266:2:13"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 461,
                  "src": "8292:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8292:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8291:9:13"
            },
            "scope": 993,
            "src": "8246:104:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "8631:129:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "8649:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "swapStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "8657:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1140_storage",
                                "typeString": "struct SwapUtils.Swap storage ref"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pooledTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1125,
                            "src": "8657:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage",
                              "typeString": "contract IERC20[] storage ref"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8657:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8649:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7574206f662072616e6765",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8690:14:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
                          "typeString": "literal_string \"Out of range\""
                        },
                        "value": "Out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
                          "typeString": "literal_string \"Out of range\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "8641:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8641:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "8641:64:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "8722:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pooledTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "8722:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "id": 481,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 480,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "8747:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8722:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5394",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 468,
                  "id": 482,
                  "nodeType": "Return",
                  "src": "8715:38:13"
                }
              ]
            },
            "documentation": {
              "id": 462,
              "nodeType": "StructuredDocumentation",
              "src": "8356:210:13",
              "text": " @notice Return address of the pooled token at given index. Reverts if tokenIndex is out of range.\n @param index the index of the token\n @return address of the token at given index"
            },
            "functionSelector": "82b86600",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "8589:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8589:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8588:13:13"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "8623:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5394",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 466,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5394,
                    "src": "8623:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5394",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8622:8:13"
            },
            "scope": 993,
            "src": "8571:189:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "9063:196:13",
              "statements": [
                {
                  "assignments": [493],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 512,
                      "src": "9073:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "9073:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 494,
                      "name": "tokenIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "9087:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                        "typeString": "mapping(address => uint8)"
                      }
                    },
                    "id": 496,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "9100:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9087:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9073:40:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 502,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 493,
                                  "src": "9161:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 501,
                                "name": "getToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 484,
                                "src": "9152:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_contract$_IERC20_$5394_$",
                                  "typeString": "function (uint8) view returns (contract IERC20)"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9152:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5394",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$5394",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9144:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 499,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9144:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9144:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 505,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "9172:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9144:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20646f6573206e6f74206578697374",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9198:22:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        },
                        "value": "Token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                          "typeString": "literal_string \"Token does not exist\""
                        }
                      ],
                      "id": 498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9123:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9123:107:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "9123:107:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 510,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 493,
                    "src": "9247:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 491,
                  "id": 511,
                  "nodeType": "Return",
                  "src": "9240:12:13"
                }
              ]
            },
            "documentation": {
              "id": 485,
              "nodeType": "StructuredDocumentation",
              "src": "8766:217:13",
              "text": " @notice Return the index of the given token address. Reverts if no matching\n token is found.\n @param tokenAddress address of the token\n @return the index of the given token address"
            },
            "functionSelector": "66c0bd24",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 513,
                  "src": "9011:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9011:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9010:22:13"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 513,
                  "src": "9056:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9056:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9055:7:13"
            },
            "scope": 993,
            "src": "8988:271:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "9492:61:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "9541:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "9509:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDepositTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1358,
                      "src": "9509:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address) view returns (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9509:37:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 520,
                  "id": 525,
                  "nodeType": "Return",
                  "src": "9502:44:13"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "9265:147:13",
              "text": " @notice Return timestamp of last deposit of given address\n @return timestamp of the last deposit made by the given address"
            },
            "functionSelector": "da7a77be",
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 527,
                  "src": "9446:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9446:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9445:14:13"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 527,
                  "src": "9483:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9482:9:13"
            },
            "scope": 993,
            "src": "9417:136:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "9857:131:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "9875:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 537,
                              "name": "swapStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "9883:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1140_storage",
                                "typeString": "struct SwapUtils.Swap storage ref"
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pooledTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1125,
                            "src": "9883:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$5394_$dyn_storage",
                              "typeString": "contract IERC20[] storage ref"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9883:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9875:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e646578206f7574206f662072616e6765",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9916:20:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        },
                        "value": "Index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9867:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9867:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "9867:70:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 544,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "9954:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "9954:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 547,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 546,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "9975:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9954:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 534,
                  "id": 548,
                  "nodeType": "Return",
                  "src": "9947:34:13"
                }
              ]
            },
            "documentation": {
              "id": 528,
              "nodeType": "StructuredDocumentation",
              "src": "9559:223:13",
              "text": " @notice Return current balance of the pooled token at given index\n @param index the index of the token\n @return current balance of the pooled token at given index with token's native precision"
            },
            "functionSelector": "91ceb3eb",
            "id": 550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 550,
                  "src": "9812:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9812:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9811:13:13"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 550,
                  "src": "9848:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9848:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9847:9:13"
            },
            "scope": 993,
            "src": "9787:201:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "10176:44:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "swapStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "10193:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1140_storage",
                        "typeString": "struct SwapUtils.Swap storage ref"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balances",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1131,
                    "src": "10193:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 556,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "10186:27:13"
                }
              ]
            },
            "documentation": {
              "id": 551,
              "nodeType": "StructuredDocumentation",
              "src": "9994:113:13",
              "text": " @notice Return balances of pooled tokens\n @return current balances of all tokens in pool"
            },
            "functionSelector": "00113e08",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalances",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10132:2:13"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 561,
                  "src": "10158:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 553,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10158:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 554,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "10158:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10157:18:13"
            },
            "scope": 993,
            "src": "10112:108:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "10367:45:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "swapStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "10385:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1140_storage",
                        "typeString": "struct SwapUtils.Swap storage ref"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "swapFee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1112,
                    "src": "10385:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "10378:26:13"
                }
              ]
            },
            "documentation": {
              "id": 562,
              "nodeType": "StructuredDocumentation",
              "src": "10226:81:13",
              "text": "@notice Returns the swap fee\n@return current swap fee"
            },
            "functionSelector": "d4cadf68",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10332:2:13"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 571,
                  "src": "10358:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10358:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10357:9:13"
            },
            "scope": 993,
            "src": "10313:99:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "10569:54:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "swapStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "10595:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1140_storage",
                            "typeString": "struct SwapUtils.Swap storage ref"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1122,
                        "src": "10595:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$5316",
                          "typeString": "contract LPToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LPToken_$5316",
                          "typeString": "contract LPToken"
                        }
                      ],
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10587:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 577,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10587:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10587:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 576,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "10580:35:13"
                }
              ]
            },
            "documentation": {
              "id": 572,
              "nodeType": "StructuredDocumentation",
              "src": "10418:91:13",
              "text": "@notice Returns address of lp token\n@return address of lp token"
            },
            "functionSelector": "8214f5a4",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLpToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10534:2:13"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "10560:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10560:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10559:9:13"
            },
            "scope": 993,
            "src": "10515:108:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "10839:53:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "10856:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVirtualPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "10856:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 589,
                  "id": 593,
                  "nodeType": "Return",
                  "src": "10849:36:13"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "10629:146:13",
              "text": " @notice Get the virtual price, to help calculate profit\n @return the virtual price, scaled to the POOL_PRECISION_DECIMALS"
            },
            "functionSelector": "e25aa5fa",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVirtualPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10804:2:13"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "10830:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10830:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10829:9:13"
            },
            "scope": 993,
            "src": "10780:112:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "11452:83:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 609,
                        "name": "tokenIndexFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "11495:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 610,
                        "name": "tokenIndexTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "11511:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "dx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "11525:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "11469:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2392,
                      "src": "11469:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_uint8_$_t_uint8_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint8,uint8,uint256) view returns (uint256)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11469:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 613,
                  "nodeType": "Return",
                  "src": "11462:66:13"
                }
              ]
            },
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "10898:410:13",
              "text": " @notice Calculate amount of tokens you receive on swap\n @param tokenIndexFrom the token the user wants to sell\n @param tokenIndexTo the token the user wants to buy\n @param dx the amount of tokens the user wants to sell. If the token charges\n a fee on transfers, use the amount that gets transferred after the fee.\n @return amount of tokens the user will receive"
            },
            "functionSelector": "a95b089f",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSwap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "tokenIndexFrom",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 615,
                  "src": "11345:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11345:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "tokenIndexTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 615,
                  "src": "11375:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11375:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "dx",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 615,
                  "src": "11403:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11403:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11335:84:13"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 615,
                  "src": "11443:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11443:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11442:9:13"
            },
            "scope": 993,
            "src": "11313:222:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 635,
              "nodeType": "Block",
              "src": "12494:83:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "12544:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "12553:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "12562:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "12511:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2787,
                      "src": "12511:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address,uint256[] memory,bool) view returns (uint256)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12511:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 627,
                  "id": 634,
                  "nodeType": "Return",
                  "src": "12504:66:13"
                }
              ]
            },
            "documentation": {
              "id": 616,
              "nodeType": "StructuredDocumentation",
              "src": "11541:797:13",
              "text": " @notice A simple method to calculate prices from deposits or\n withdrawals, excluding fees but including slippage. This is\n helpful as an input into the various \"min\" parameters on calls\n to fight front-running\n @dev This shouldn't be used outside frontends for user estimates.\n @param account address that is depositing or withdrawing tokens\n @param amounts an array of token amounts to deposit or withdrawal,\n corresponding to pooledTokens. The amount should be in each\n pooled token's native precision. If a token charges a fee on transfers,\n use the amount that gets transferred after the fee.\n @param deposit whether this is a deposit or a withdrawal\n @return token amount the user will receive"
            },
            "functionSelector": "f9273ffb",
            "id": 636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTokenAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "12382:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12382:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "12407:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 619,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12407:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "12407:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "12443:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12443:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12372:89:13"
            },
            "returnParameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 636,
                  "src": "12485:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12485:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12484:9:13"
            },
            "scope": 993,
            "src": "12343:234:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "13082:77:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "13136:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "13145:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 647,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "13099:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 648,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRemoveLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2512,
                      "src": "13099:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address,uint256) view returns (uint256[] memory)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13099:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 652,
                  "nodeType": "Return",
                  "src": "13092:60:13"
                }
              ]
            },
            "documentation": {
              "id": 637,
              "nodeType": "StructuredDocumentation",
              "src": "12583:358:13",
              "text": " @notice A simple method to calculate amount of each underlying\n tokens that is returned upon burning given amount of LP tokens\n @param account the address that is withdrawing tokens\n @param amount the amount of LP tokens that would be burned on withdrawal\n @return array of token balances that the user will receive"
            },
            "functionSelector": "7c61e561",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 654,
                  "src": "12980:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12980:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 654,
                  "src": "12997:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12997:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12979:33:13"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 654,
                  "src": "13060:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 643,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13060:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 644,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "13060:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13059:18:13"
            },
            "scope": 993,
            "src": "12946:213:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "13771:161:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 666,
                          "name": "availableTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "13782:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 667,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13781:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 670,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "13859:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 671,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "13880:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "13905:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 668,
                          "name": "swapStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "13808:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1140_storage",
                            "typeString": "struct SwapUtils.Swap storage ref"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateWithdrawOneToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1431,
                        "src": "13808:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$_t_uint256_$_t_uint8_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                          "typeString": "function (struct SwapUtils.Swap storage pointer,address,uint256,uint8) view returns (uint256,uint256)"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13808:117:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "13781:144:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "13781:144:13"
                }
              ]
            },
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "13165:420:13",
              "text": " @notice Calculate the amount of underlying token available to withdraw\n when withdrawing via only single token\n @param account the address that is withdrawing tokens\n @param tokenAmount the amount of LP token to burn\n @param tokenIndex index of which token will be withdrawn\n @return availableTokenAmount calculated amount of underlying token\n available to withdraw"
            },
            "functionSelector": "98899f40",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidityOneToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 677,
                  "src": "13641:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13641:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 677,
                  "src": "13666:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13666:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "tokenIndex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 677,
                  "src": "13695:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13695:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13631:86:13"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "availableTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 677,
                  "src": "13741:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13741:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13740:30:13"
            },
            "scope": 993,
            "src": "13590:342:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "14597:69:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "14654:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "14614:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateCurrentWithdrawFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2642,
                      "src": "14614:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address) view returns (uint256)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14614:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 684,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "14607:52:13"
                }
              ]
            },
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "13938:543:13",
              "text": " @notice Calculate the fee that is applied when the given user withdraws. The withdraw fee\n decays linearly over period of 4 weeks. For example, depositing and withdrawing right away\n will charge you the full amount of withdraw fee. But withdrawing after 4 weeks will charge you\n no additional fees.\n @dev returned value should be divided by FEE_DENOMINATOR to convert to correct decimals\n @param user address you want to calculate withdraw fee of\n @return current withdraw fee of the user"
            },
            "functionSelector": "4a1b0d57",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurrentWithdrawFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 691,
                  "src": "14523:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14523:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14522:14:13"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 691,
                  "src": "14584:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14584:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14583:9:13"
            },
            "scope": 993,
            "src": "14486:180:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "14970:58:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 701,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "15015:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "14987:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAdminBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2824,
                      "src": "14987:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14987:34:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 698,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "14980:41:13"
                }
              ]
            },
            "documentation": {
              "id": 692,
              "nodeType": "StructuredDocumentation",
              "src": "14672:221:13",
              "text": " @notice This function reads the accumulated amount of admin fees of the token with given index\n @param index Index of the pooled token\n @return admin's token balance in the token's precision"
            },
            "functionSelector": "ef0a712f",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdminBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 705,
                  "src": "14923:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14923:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14922:15:13"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 705,
                  "src": "14961:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14961:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14960:9:13"
            },
            "scope": 993,
            "src": "14898:130:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "15748:81:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "tokenIndexFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "15782:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "tokenIndexTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "15798:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 732,
                        "name": "dx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "15812:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 733,
                        "name": "minDy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "15816:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "15765:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3015,
                      "src": "15765:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint8,uint8,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15765:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 727,
                  "id": 735,
                  "nodeType": "Return",
                  "src": "15758:64:13"
                }
              ]
            },
            "documentation": {
              "id": 706,
              "nodeType": "StructuredDocumentation",
              "src": "15075:399:13",
              "text": " @notice Swap two tokens using this pool\n @param tokenIndexFrom the token the user wants to swap from\n @param tokenIndexTo the token the user wants to swap to\n @param dx the amount of tokens the user wants to swap from\n @param minDy the min amount the user would like to receive, or revert.\n @param deadline latest timestamp to accept this transaction"
            },
            "functionSelector": "91695586",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 719,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 718,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5123,
                  "src": "15651:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15651:12:13"
              },
              {
                "arguments": null,
                "id": 721,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 720,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5848,
                  "src": "15672:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15672:13:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 723,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 716,
                    "src": "15708:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 722,
                  "name": "deadlineCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 439,
                  "src": "15694:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15694:23:13"
              }
            ],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "tokenIndexFrom",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15502:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15502:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "tokenIndexTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15532:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15532:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "dx",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15560:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15560:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "minDy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15580:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15580:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15603:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15603:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15492:133:13"
            },
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 737,
                  "src": "15735:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15734:9:13"
            },
            "scope": 993,
            "src": "15479:350:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "16509:68:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "16551:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 760,
                        "name": "minToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "16560:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "16526:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3446,
                      "src": "16526:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256[] memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16526:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 756,
                  "id": 762,
                  "nodeType": "Return",
                  "src": "16519:51:13"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "15835:430:13",
              "text": " @notice Add liquidity to the pool with given amounts\n @param amounts the amounts of each token to add, in their native precision\n @param minToMint the minimum LP tokens adding this amount of liquidity\n should mint, otherwise revert. Handy for front-running mitigation\n @param deadline latest timestamp to accept this transaction\n @return amount of LP token user minted and received"
            },
            "functionSelector": "4d49e87d",
            "id": 764,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 748,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 747,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5123,
                  "src": "16412:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "16412:12:13"
              },
              {
                "arguments": null,
                "id": 750,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 749,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5848,
                  "src": "16433:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "16433:13:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 752,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 745,
                    "src": "16469:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 753,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 751,
                  "name": "deadlineCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 439,
                  "src": "16455:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "16455:23:13"
              }
            ],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "16301:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 739,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16301:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 740,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "16301:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "minToMint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "16337:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16337:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "16364:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16364:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16291:95:13"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "16496:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16496:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16495:9:13"
            },
            "scope": 993,
            "src": "16270:307:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "17342:71:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "17387:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "minAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "17395:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 783,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "17359:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3676,
                      "src": "17359:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256,uint256[] memory) returns (uint256[] memory)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17359:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "17352:54:13"
                }
              ]
            },
            "documentation": {
              "id": 765,
              "nodeType": "StructuredDocumentation",
              "src": "16583:561:13",
              "text": " @notice Burn LP tokens to remove liquidity from the pool. Withdraw fee that decays linearly\n over period of 4 weeks since last deposit will apply.\n @dev Liquidity can always be removed, even when the pool is paused.\n @param amount the amount of LP tokens to burn\n @param minAmounts the minimum amounts of each token in the pool\n        acceptable for this burn. Useful as a front-running mitigation\n @param deadline latest timestamp to accept this transaction\n @return amounts of tokens user received"
            },
            "functionSelector": "31cd52b0",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 775,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 774,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5123,
                  "src": "17278:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17278:12:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 777,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 772,
                    "src": "17305:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 778,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 776,
                  "name": "deadlineCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 439,
                  "src": "17291:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17291:23:13"
              }
            ],
            "name": "removeLiquidity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 790,
                  "src": "17183:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17183:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "minAmounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 790,
                  "src": "17207:29:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 768,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17207:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 769,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17207:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 790,
                  "src": "17246:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17246:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17173:95:13"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 790,
                  "src": "17324:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 779,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17324:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 780,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17324:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17323:18:13"
            },
            "scope": 993,
            "src": "17149:264:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "18193:169:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 813,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "18275:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 814,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "18304:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "minAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "18332:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "18222:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidityOneToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3804,
                      "src": "18222:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$_t_uint8_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256,uint8,uint256) returns (uint256)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18222:133:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 810,
                  "id": 817,
                  "nodeType": "Return",
                  "src": "18203:152:13"
                }
              ]
            },
            "documentation": {
              "id": 791,
              "nodeType": "StructuredDocumentation",
              "src": "17419:500:13",
              "text": " @notice Remove liquidity from the pool all in one token. Withdraw fee that decays linearly\n over period of 4 weeks since last deposit will apply.\n @param tokenAmount the amount of the token you want to receive\n @param tokenIndex the index of the token you want to receive\n @param minAmount the minimum amount to withdraw, otherwise revert\n @param deadline latest timestamp to accept this transaction\n @return amount of chosen token user received"
            },
            "functionSelector": "3e3a1560",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 801,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5123,
                  "src": "18096:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18096:12:13"
              },
              {
                "arguments": null,
                "id": 804,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 803,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5848,
                  "src": "18117:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18117:13:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 806,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "18153:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 807,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 805,
                  "name": "deadlineCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 439,
                  "src": "18139:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18139:23:13"
              }
            ],
            "name": "removeLiquidityOneToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "17966:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17966:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "tokenIndex",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "17995:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17995:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "minAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "18021:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18021:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "18048:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18048:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17956:114:13"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "18180:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18180:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18179:9:13"
            },
            "scope": 993,
            "src": "17924:438:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 845,
              "nodeType": "Block",
              "src": "19147:84:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "19201:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 842,
                        "name": "maxBurnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "19210:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 839,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "19164:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidityImbalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4148,
                      "src": "19164:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256[] memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19164:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 838,
                  "id": 844,
                  "nodeType": "Return",
                  "src": "19157:67:13"
                }
              ]
            },
            "documentation": {
              "id": 820,
              "nodeType": "StructuredDocumentation",
              "src": "18368:519:13",
              "text": " @notice Remove liquidity from the pool, weighted differently than the\n pool's current balances. Withdraw fee that decays linearly\n over period of 4 weeks since last deposit will apply.\n @param amounts how much of each token to withdraw\n @param maxBurnAmount the max LP token provider is willing to pay to\n remove liquidity. Useful as a front-running mitigation.\n @param deadline latest timestamp to accept this transaction\n @return amount of LP tokens burned"
            },
            "functionSelector": "84cdd9bc",
            "id": 846,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 830,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 829,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5123,
                  "src": "19050:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19050:12:13"
              },
              {
                "arguments": null,
                "id": 832,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 831,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5848,
                  "src": "19071:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19071:13:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 834,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 827,
                    "src": "19107:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 835,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 833,
                  "name": "deadlineCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 439,
                  "src": "19093:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19093:23:13"
              }
            ],
            "name": "removeLiquidityImbalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 846,
                  "src": "18935:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 821,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18935:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 822,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "18935:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "maxBurnAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 846,
                  "src": "18971:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18971:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 846,
                  "src": "19002:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19002:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18925:99:13"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 846,
                  "src": "19134:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19134:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19133:9:13"
            },
            "scope": 993,
            "src": "18892:339:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "19866:203:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 855,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19897:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19897:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 859,
                                "name": "swapStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "19919:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1140_storage",
                                  "typeString": "struct SwapUtils.Swap storage ref"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1122,
                              "src": "19919:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LPToken_$5316",
                                "typeString": "contract LPToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LPToken_$5316",
                                "typeString": "contract LPToken"
                              }
                            ],
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19911:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 857,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19911:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19911:28:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19897:42:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792063616c6c61626c6520627920706f6f6c20746f6b656e",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19953:29:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04c0db89e17ea9cd410c83caab76b6a3065c35e3b306d77d093ad7d2a205d91d",
                          "typeString": "literal_string \"Only callable by pool token\""
                        },
                        "value": "Only callable by pool token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04c0db89e17ea9cd410c83caab76b6a3065c35e3b306d77d093ad7d2a205d91d",
                          "typeString": "literal_string \"Only callable by pool token\""
                        }
                      ],
                      "id": 854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "19876:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19876:116:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "19876:116:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 869,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "20036:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 870,
                        "name": "transferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "20047:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 866,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "20002:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateUserWithdrawFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3463,
                      "src": "20002:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address,uint256)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20002:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "20002:60:13"
                }
              ]
            },
            "documentation": {
              "id": 847,
              "nodeType": "StructuredDocumentation",
              "src": "19268:498:13",
              "text": " @notice Updates the user withdraw fee. This function can only be called by\n the pool token. Should be used to update the withdraw fee on transfer of pool tokens.\n Transferring your pool token will reset the 4 weeks period. If the recipient is already\n holding some pool tokens, the withdraw fee will be discounted in respective amounts.\n @param recipient address of the recipient of pool token\n @param transferAmount amount of pool token to transfer"
            },
            "functionSelector": "c00c125c",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUserWithdrawFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 874,
                  "src": "19802:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19802:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "transferAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 874,
                  "src": "19821:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19821:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19801:43:13"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19866:0:13"
            },
            "scope": 993,
            "src": "19771:298:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "20200:55:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 883,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5735,
                          "src": "20240:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20240:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 880,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "20210:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAdminFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4206,
                      "src": "20210:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20210:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "20210:38:13"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "20075:72:13",
              "text": " @notice Withdraw all admin fees to the contract owner"
            },
            "functionSelector": "0419b45a",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 878,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 877,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "20190:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20190:9:13"
              }
            ],
            "name": "withdrawAdminFees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20178:2:13"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20200:0:13"
            },
            "scope": 993,
            "src": "20152:103:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "20493:53:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 899,
                        "name": "newAdminFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "20527:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 896,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "20503:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAdminFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4232,
                      "src": "20503:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20503:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "20503:36:13"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "20261:166:13",
              "text": " @notice Update the admin fee. Admin fee takes portion of the swap fee.\n @param newAdminFee new admin fee to be applied on future transactions"
            },
            "functionSelector": "8beb60b6",
            "id": 903,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 894,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "20483:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20483:9:13"
              }
            ],
            "name": "setAdminFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "newAdminFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 903,
                  "src": "20453:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20453:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20452:21:13"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20493:0:13"
            },
            "scope": 993,
            "src": "20432:114:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "20760:51:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 914,
                        "name": "newSwapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "20793:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 911,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "20770:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4258,
                      "src": "20770:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256)"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20770:34:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "20770:34:13"
                }
              ]
            },
            "documentation": {
              "id": 904,
              "nodeType": "StructuredDocumentation",
              "src": "20552:144:13",
              "text": " @notice Update the swap fee to be applied on swaps\n @param newSwapFee new swap fee to be applied on future transactions"
            },
            "functionSelector": "34e19907",
            "id": 918,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 909,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 908,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "20750:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20750:9:13"
              }
            ],
            "name": "setSwapFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "newSwapFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 918,
                  "src": "20721:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20721:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20720:20:13"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20760:0:13"
            },
            "scope": 993,
            "src": "20701:110:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 932,
              "nodeType": "Block",
              "src": "21026:64:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 929,
                        "name": "newDepositFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "21069:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 926,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "21036:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDefaultDepositFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4310,
                      "src": "21036:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21036:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "21036:47:13"
                }
              ]
            },
            "documentation": {
              "id": 919,
              "nodeType": "StructuredDocumentation",
              "src": "20821:128:13",
              "text": " @notice Update the deposit fee. \n @param newDepositFee new deposit fee to be applied on future deposits"
            },
            "functionSelector": "52ff62ec",
            "id": 933,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 924,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 923,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "21016:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21016:9:13"
              }
            ],
            "name": "setDefaultDepositFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "newDepositFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 933,
                  "src": "20984:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20984:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20983:23:13"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21026:0:13"
            },
            "scope": 993,
            "src": "20954:136:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "21377:66:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 944,
                        "name": "newWithdrawFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "21421:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 941,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "21387:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDefaultWithdrawFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4284,
                      "src": "21387:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21387:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "21387:49:13"
                }
              ]
            },
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "21096:202:13",
              "text": " @notice Update the withdraw fee. This fee decays linearly over 4 weeks since\n user's last deposit.\n @param newWithdrawFee new withdraw fee to be applied on future deposits"
            },
            "functionSelector": "ac5bf263",
            "id": 948,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 939,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 938,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "21367:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21367:9:13"
              }
            ],
            "name": "setDefaultWithdrawFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "newWithdrawFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 948,
                  "src": "21334:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21334:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21333:24:13"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21377:0:13"
            },
            "scope": 993,
            "src": "21303:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "21860:55:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "21888:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 962,
                        "name": "futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "21897:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 958,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "21870:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4427,
                      "src": "21870:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21870:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "21870:38:13"
                }
              ]
            },
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "21449:335:13",
              "text": " @notice Start ramping up or down A parameter towards given futureA and futureTime\n Checks if the change is too rapid, and commits the new A value only when it falls under\n the limit range.\n @param futureA the new A to ramp towards\n @param futureTime timestamp when the new A should be reached"
            },
            "functionSelector": "593d132c",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 956,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 955,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "21850:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21850:9:13"
              }
            ],
            "name": "rampA",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "futureA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 966,
                  "src": "21804:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21804:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "futureTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 966,
                  "src": "21821:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21821:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21803:37:13"
            },
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21860:0:13"
            },
            "scope": 993,
            "src": "21789:126:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 977,
              "nodeType": "Block",
              "src": "22058:40:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 972,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "22068:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4481,
                      "src": "22068:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22068:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "22068:23:13"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "21921:92:13",
              "text": " @notice Stop ramping A immediately. Reverts if ramp A is already stopped."
            },
            "functionSelector": "c4db7fa0",
            "id": 978,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 970,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 969,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "22048:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22048:9:13"
              }
            ],
            "name": "stopRampA",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22036:2:13"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22058:0:13"
            },
            "scope": 993,
            "src": "22018:80:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "22215:52:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 988,
                        "name": "_devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "22251:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 985,
                        "name": "swapStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "22225:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1140_storage",
                          "typeString": "struct SwapUtils.Swap storage ref"
                        }
                      },
                      "id": 987,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4515,
                      "src": "22225:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Swap_$1140_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Swap_$1140_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Swap storage pointer,address)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22225:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "22225:35:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d0d41fe1",
            "id": 992,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 983,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 982,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5749,
                  "src": "22205:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22205:9:13"
              }
            ],
            "name": "setDevAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 992,
                  "src": "22178:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22178:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22177:18:13"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22215:0:13"
            },
            "scope": 993,
            "src": "22155:112:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 994,
        "src": "1319:20950:13"
      }
    ],
    "src": "33:22237:13"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620046c0380380620046c083398181016040526101408110156200003857600080fd5b81019080805160405193929190846401000000008211156200005957600080fd5b9083019060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b82525081516020918201928201910280838360005b83811015620000bc578181015183820152602001620000a2565b5050505090500160405260200180516040519392919084640100000000821115620000e657600080fd5b908301906020820185811115620000fc57600080fd5b82518660208202830111640100000000821117156200011a57600080fd5b82525081516020918201928201910280838360005b83811015620001495781810151838201526020016200012f565b50505050905001604052602001805160405193929190846401000000008211156200017357600080fd5b9083019060208201858111156200018957600080fd5b8251640100000000811182820188101715620001a457600080fd5b82525081516020918201929091019080838360005b83811015620001d3578181015183820152602001620001b9565b50505050905090810190601f168015620002015780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200022557600080fd5b9083019060208201858111156200023b57600080fd5b82516401000000008111828201881017156200025657600080fd5b82525081516020918201929091019080838360005b83811015620002855781810151838201526020016200026b565b50505050905090810190601f168015620002b35780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608084015160a085015160c0909501519396509194509290916000620002ec62000b03565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b1916905560018080558a51116200039d576040805162461bcd60e51b815260206004820152601960248201527f5f706f6f6c6564546f6b656e732e6c656e677468203c3d203100000000000000604482015290519081900360640190fd5b60208a511115620003f5576040805162461bcd60e51b815260206004820152601960248201527f5f706f6f6c6564546f6b656e732e6c656e677468203e20333200000000000000604482015290519081900360640190fd5b88518a51146200044c576040805162461bcd60e51b815260206004820152601f60248201527f5f706f6f6c6564546f6b656e7320646563696d616c73206d69736d6174636800604482015290519081900360640190fd5b606089516001600160401b03811180156200046657600080fd5b5060405190808252806020026020018201604052801562000491578160200160208202803683370190505b50905060005b8b518160ff161015620007185760ff8116156200057a57601160008d8360ff1681518110620004c257fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161580156200053557508b8160ff16815181106200050257fe5b60200260200101516001600160a01b03168c6000815181106200052157fe5b60200260200101516001600160a01b031614155b6200057a576040805162461bcd60e51b815260206004820152601060248201526f4475706c696361746520746f6b656e7360801b604482015290519081900360640190fd5b60006001600160a01b03168c8260ff16815181106200059557fe5b60200260200101516001600160a01b03161415620005fa576040805162461bcd60e51b815260206004820152601d60248201527f546865203020616464726573732069736e277420616e204552432d3230000000604482015290519081900360640190fd5b601260ff168b8260ff16815181106200060f57fe5b602002602001015160ff1611156200066e576040805162461bcd60e51b815260206004820152601a60248201527f546f6b656e20646563696d616c732065786365656473206d6178000000000000604482015290519081900360640190fd5b620006a68b8260ff16815181106200068257fe5b602002602001015160ff16601260ff1662000b0760201b620021e11790919060201c565b600a0a828260ff1681518110620006b957fe5b60200260200101818152505080601160008e8460ff1681518110620006da57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff9290921691909117905560010162000497565b50620f4240871062000766576040805162461bcd60e51b81526020600482015260126024820152715f612065786365656473206d6178696d756d60701b604482015290519081900360640190fd5b6305f5e1008610620007bf576040805162461bcd60e51b815260206004820152601460248201527f5f6665652065786365656473206d6178696d756d000000000000000000000000604482015290519081900360640190fd5b6402540be400851062000819576040805162461bcd60e51b815260206004820152601960248201527f5f61646d696e4665652065786365656473206d6178696d756d00000000000000604482015290519081900360640190fd5b6305f5e100831062000872576040805162461bcd60e51b815260206004820152601c60248201527f5f77697468647261774665652065786365656473206d6178696d756d00000000604482015290519081900360640190fd5b6305f5e1008410620008cb576040805162461bcd60e51b815260206004820152601b60248201527f5f6465706f7369744665652065786365656473206d6178696d756d0000000000604482015290519081900360640190fd5b88886012604051620008dd9062000bcf565b60ff82166040820152606080825284519082015283518190602080830191608084019188019080838360005b838110156200092357818101518382015260200162000909565b50505050905090810190601f168015620009515780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015620009865781810151838201526020016200096c565b50505050905090810190601f168015620009b45780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f080158015620009d9573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790558a5162000a0f90600c9060208e019062000bdd565b50805162000a2590600d90602084019062000c47565b508a516001600160401b038111801562000a3e57600080fd5b5060405190808252806020026020018201604052801562000a69578160200160208202803683370190505b50805162000a8091600e9160209091019062000c47565b5062000a9c60648862000b6a60201b6200223e1790919060201c565b60025562000ab887606462000b6a602090811b6200223e17901c565b6003555060006004819055600555600694909455600792909255600855600955600a80546001600160a01b0319166001600160a01b039092169190911790555062000ccb9350505050565b3390565b60008282111562000b5f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60008262000b7b5750600062000b64565b8282028284828162000b8957fe5b041462000bc85760405162461bcd60e51b81526004018080602001828103825260218152602001806200469f6021913960400191505060405180910390fd5b9392505050565b611539806200316683390190565b82805482825590600052602060002090810192821562000c35579160200282015b8281111562000c3557825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000bfe565b5062000c4392915062000c93565b5090565b82805482825590600052602060002090810192821562000c85579160200282015b8281111562000c8557825182559160200191906001019062000c68565b5062000c4392915062000cb4565b5b8082111562000c435780546001600160a01b031916815560010162000c94565b5b8082111562000c43576000815560010162000cb5565b61248b8062000cdb6000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c80638456cb5911610130578063c00c125c116100b8578063da7a77be1161007c578063da7a77be1461076a578063e25aa5fa14610790578063ef0a712f14610798578063f2fde38b146107b5578063f9273ffb146107db57610226565b8063c00c125c14610700578063c4db7fa01461072c578063d0d41fe114610734578063d46300fd1461075a578063d4cadf681461076257610226565b806391695586116100ff578063916955861461062257806391ceb3eb1461065e57806398899f401461067e578063a95b089f146106b3578063ac5bf263146106e357610226565b80638456cb591461058157806384cdd9bc146105895780638beb60b6146105fd5780638da5cb5b1461061a57610226565b806352ff62ec116101b357806366c0bd241161018257806366c0bd24146104cd578063715018a6146105095780637c61e561146105115780638214f5a41461053d57806382b866001461056157610226565b806352ff62ec1461040d578063593d132c1461042a5780635c975abb1461044d5780635fd65f0f1461046957610226565b806334e19907116101fa57806334e199071461031c5780633e3a1560146103395780633f4ba83a1461036b5780634a1b0d57146103735780634d49e87d1461039957610226565b8062113e081461022b5780630419b45a146102835780630ba819591461028d57806331cd52b0146102a7575b600080fd5b61023361085b565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561026f578181015183820152602001610257565b505050509050019250505060405180910390f35b61028b6108b6565b005b61029561099a565b60408051918252519081900360200190f35b610233600480360360608110156102bd57600080fd5b81359190810190604081016020820135600160201b8111156102de57600080fd5b8201836020820111156102f057600080fd5b803590602001918460208302840111600160201b8311171561031157600080fd5b919350915035610a1f565b61028b6004803603602081101561033257600080fd5b5035610c1c565b6102956004803603608081101561034f57600080fd5b5080359060ff6020820135169060408101359060600135610cf2565b61028b610e78565b6102956004803603602081101561038957600080fd5b50356001600160a01b0316610ee4565b610295600480360360608110156103af57600080fd5b810190602081018135600160201b8111156103c957600080fd5b8201836020820111156103db57600080fd5b803590602001918460208302840111600160201b831117156103fc57600080fd5b919350915080359060200135610f7b565b61028b6004803603602081101561042357600080fd5b50356110ef565b61028b6004803603604081101561044057600080fd5b50803590602001356111aa565b610455611288565b604080519115158252519081900360200190f35b610471611298565b604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e08501526001600160a01b039081166101008501521661012083015251908190036101400190f35b6104f3600480360360208110156104e357600080fd5b50356001600160a01b03166112c6565b6040805160ff9092168252519081900360200190f35b61028b611348565b6102336004803603604081101561052757600080fd5b506001600160a01b0381351690602001356113f4565b61054561152f565b604080516001600160a01b039092168252519081900360200190f35b6105456004803603602081101561057757600080fd5b503560ff1661153e565b61028b6115b5565b6102956004803603606081101561059f57600080fd5b810190602081018135600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b91935091508035906020013561161f565b61028b6004803603602081101561061357600080fd5b5035611793565b61054561184e565b610295600480360360a081101561063857600080fd5b5060ff81358116916020810135909116906040810135906060810135906080013561185d565b6102956004803603602081101561067457600080fd5b503560ff166119ec565b6102956004803603606081101561069457600080fd5b5080356001600160a01b0316906020810135906040013560ff16611a60565b610295600480360360608110156106c957600080fd5b5060ff813581169160208101359091169060400135611b04565b61028b600480360360208110156106f957600080fd5b5035611b9c565b61028b6004803603604081101561071657600080fd5b506001600160a01b038135169060200135611c57565b61028b611d1e565b61028b6004803603602081101561074a57600080fd5b50356001600160a01b0316611dd2565b610295611e95565b610295611ee9565b6102956004803603602081101561078057600080fd5b50356001600160a01b0316611eef565b610295611f54565b610295600480360360208110156107ae57600080fd5b5035611fa8565b61028b600480360360208110156107cb57600080fd5b50356001600160a01b0316612004565b610295600480360360608110156107f157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561081b57600080fd5b82018360208201111561082d57600080fd5b803590602001918460208302840111600160201b8311171561084e57600080fd5b9193509150351515612106565b60606002600c018054806020026020016040519081016040528092919081815260200182805480156108ac57602002820191906000526020600020905b815481526020019060010190808311610898575b5050505050905090565b6108be61229e565b6001600160a01b03166108cf61184e565b6001600160a01b031614610918576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b73__SwapUtils_____________________________6324c5c751600261093c61184e565b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060006040518083038186803b15801561098057600080fd5b505af4158015610994573d6000803e3d6000fd5b50505050565b6000600273__SwapUtils_____________________________63c9b64dcb90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b505af4158015610a02573d6000803e3d6000fd5b505050506040513d6020811015610a1857600080fd5b5051905090565b606060026001541415610a67576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b60026001558142811015610ab5576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__SwapUtils_____________________________6373fd6b3e90918888886040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060006040518083038186803b158015610b4657600080fd5b505af4158015610b5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b8357600080fd5b8101908080516040519392919084600160201b821115610ba257600080fd5b908301906020820185811115610bb757600080fd5b82518660208202830111600160201b82111715610bd357600080fd5b82525081516020918201928201910280838360005b83811015610c00578181015183820152602001610be8565b5050505090500160405250505091505060018055949350505050565b610c2461229e565b6001600160a01b0316610c3561184e565b6001600160a01b031614610c7e576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163119f861b60e21b81526002600482015260248101839052905173__SwapUtils_____________________________9163467e186c916044808301926000929190829003018186803b158015610cd757600080fd5b505af4158015610ceb573d6000803e3d6000fd5b5050505050565b600060026001541415610d3a576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155610d47611288565b15610d8c576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115610dd5576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b6040805163e7a4db8160e01b8152600260048201526024810188905260ff8716604482015260648101869052905173__SwapUtils_____________________________9163e7a4db81916084808301926020929190829003018186803b158015610e3e57600080fd5b505af4158015610e52573d6000803e3d6000fd5b505050506040513d6020811015610e6857600080fd5b5051600180559695505050505050565b610e8061229e565b6001600160a01b0316610e9161184e565b6001600160a01b031614610eda576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b610ee26122a2565b565b604080516325a3956560e21b8152600260048201526001600160a01b0383166024820152905160009173__SwapUtils_____________________________9163968e559491604480820192602092909190829003018186803b158015610f4957600080fd5b505af4158015610f5d573d6000803e3d6000fd5b505050506040513d6020811015610f7357600080fd5b505192915050565b600060026001541415610fc3576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155610fd0611288565b15611015576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b818042111561105e576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__SwapUtils_____________________________6340370edf90918888886040518563ffffffff1660e01b815260040180858152602001806020018381526020018281038252858582818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015610e3e57600080fd5b6110f761229e565b6001600160a01b031661110861184e565b6001600160a01b031614611151576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163d2a3948760e01b81526002600482015260248101839052905173__SwapUtils_____________________________9163d2a39487916044808301926000929190829003018186803b158015610cd757600080fd5b6111b261229e565b6001600160a01b03166111c361184e565b6001600160a01b03161461120c576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516358fdd79b60e01b8152600260048201526024810184905260448101839052905173__SwapUtils_____________________________916358fdd79b916064808301926000929190829003018186803b15801561126c57600080fd5b505af4158015611280573d6000803e3d6000fd5b505050505050565b600054600160a01b900460ff1690565b600254600354600454600554600654600754600854600954600a54600b546001600160a01b0391821691168a565b6001600160a01b038116600081815260116020526040812054909160ff909116906112f08261153e565b6001600160a01b031614611342576040805162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b92915050565b61135061229e565b6001600160a01b031661136161184e565b6001600160a01b0316146113aa576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6040805163f967a81f60e01b8152600260048201526001600160a01b038416602482015260448101839052905160609173__SwapUtils_____________________________9163f967a81f91606480820192600092909190829003018186803b15801561146057600080fd5b505af4158015611474573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561149d57600080fd5b8101908080516040519392919084600160201b8211156114bc57600080fd5b9083019060208201858111156114d157600080fd5b82518660208202830111600160201b821117156114ed57600080fd5b82525081516020918201928201910280838360005b8381101561151a578181015183820152602001611502565b50505050905001604052505050905092915050565b600b546001600160a01b031690565b600c5460009060ff831610611589576040805162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015290519081900360640190fd5b600c805460ff841690811061159a57fe5b6000918252602090912001546001600160a01b031692915050565b6115bd61229e565b6001600160a01b03166115ce61184e565b6001600160a01b031614611617576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b610ee2612345565b600060026001541415611667576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155611674611288565b156116b9576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115611702576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__SwapUtils_____________________________6341b91c2690918888886040518563ffffffff1660e01b815260040180858152602001806020018381526020018281038252858582818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015610e3e57600080fd5b61179b61229e565b6001600160a01b03166117ac61184e565b6001600160a01b0316146117f5576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b60408051633823393b60e11b81526002600482015260248101839052905173__SwapUtils_____________________________916370467276916044808301926000929190829003018186803b158015610cd757600080fd5b6000546001600160a01b031690565b6000600260015414156118a5576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b60026001556118b2611288565b156118f7576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115611940576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b6040805163529cbd9160e11b81526002600482015260ff808a166024830152881660448201526064810187905260848101869052905173__SwapUtils_____________________________9163a5397b229160a4808301926020929190829003018186803b1580156119b157600080fd5b505af41580156119c5573d6000803e3d6000fd5b505050506040513d60208110156119db57600080fd5b505160018055979650505050505050565b600c5460009060ff831610611a3d576040805162461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b604482015290519081900360640190fd5b600e805460ff8416908110611a4e57fe5b90600052602060002001549050919050565b60408051637254d06d60e11b8152600260048201526001600160a01b03851660248201526044810184905260ff83166064820152815160009273__SwapUtils_____________________________9263e4a9a0da9260848083019392829003018186803b158015611ad057600080fd5b505af4158015611ae4573d6000803e3d6000fd5b505050506040513d6040811015611afa57600080fd5b5051949350505050565b604080516312c8d80f60e21b81526002600482015260ff80861660248301528416604482015260648101839052905160009173__SwapUtils_____________________________91634b23603c91608480820192602092909190829003018186803b158015611b7257600080fd5b505af4158015611b86573d6000803e3d6000fd5b505050506040513d6020811015611afa57600080fd5b611ba461229e565b6001600160a01b0316611bb561184e565b6001600160a01b031614611bfe576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163455bb4bf60e11b81526002600482015260248101839052905173__SwapUtils_____________________________91638ab7697e916044808301926000929190829003018186803b158015610cd757600080fd5b600b546001600160a01b03163314611cb6576040805162461bcd60e51b815260206004820152601b60248201527f4f6e6c792063616c6c61626c6520627920706f6f6c20746f6b656e0000000000604482015290519081900360640190fd5b6040805163749296a360e11b8152600260048201526001600160a01b038416602482015260448101839052905173__SwapUtils_____________________________9163e9252d46916064808301926000929190829003018186803b15801561126c57600080fd5b611d2661229e565b6001600160a01b0316611d3761184e565b6001600160a01b031614611d80576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516378a7108f60e11b815260026004820152905173__SwapUtils_____________________________9163f14e211e916024808301926000929190829003018186803b15801561098057600080fd5b611dda61229e565b6001600160a01b0316611deb61184e565b6001600160a01b031614611e34576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516321c363e760e11b8152600260048201526001600160a01b0383166024820152905173__SwapUtils_____________________________91634386c7ce916044808301926000929190829003018186803b158015610cd757600080fd5b6000600273__SwapUtils_____________________________63b0a14cfc90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b60065490565b60408051633a311e9560e21b8152600260048201526001600160a01b0383166024820152905160009173__SwapUtils_____________________________9163e8c47a5491604480820192602092909190829003018186803b158015610f4957600080fd5b6000600273__SwapUtils_____________________________6371906c2c90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b6000600273__SwapUtils_____________________________637d0481609091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610f4957600080fd5b61200c61229e565b6001600160a01b031661201d61184e565b6001600160a01b031614612066576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6001600160a01b0381166120ab5760405162461bcd60e51b81526004018080602001828103825260268152602001806123ef6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000600273__SwapUtils_____________________________635e58579c9091878787876040518663ffffffff1660e01b815260040180868152602001856001600160a01b031681526020018060200183151581526020018281038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060206040518083038186803b1580156121ac57600080fd5b505af41580156121c0573d6000803e3d6000fd5b505050506040513d60208110156121d657600080fd5b505195945050505050565b600082821115612238576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008261224d57506000611342565b8282028284828161225a57fe5b04146122975760405162461bcd60e51b81526004018080602001828103825260218152602001806124156021913960400191505060405180910390fd5b9392505050565b3390565b6122aa611288565b6122f2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61232861229e565b604080516001600160a01b039092168252519081900360200190a1565b61234d611288565b15612392576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861232861229e56fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c004f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220a69d0a26e2930982bf9d92ad7bcb3efcd65b75bba966786e1eaaf74c0a2b9b7a64736f6c634300060c003360a06040523480156200001157600080fd5b506040516200153938038062001539833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491620001bd916003918501906200028e565b508051620001d39060049060208401906200028e565b50506005805460ff19166012179055506000620001ef62000274565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620002508162000278565b6200025a62000274565b60601b6001600160601b031916608052506200032a915050565b3390565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d157805160ff191683800117855562000301565b8280016001018555821562000301579182015b8281111562000301578251825591602001919060010190620002e4565b506200030f92915062000313565b5090565b5b808211156200030f576000815560010162000314565b60805160601c6111ec6200034d6000398061079f5280610f3952506111ec6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b4114610343578063a457c2d71461034b578063a9059cbb14610377578063dd62ed3e146103a3578063f2fde38b146103d157610116565b8063715018a6146102e357806379cc6790146102eb5780638119c065146103175780638da5cb5b1461033b57610116565b8063313ce567116100e9578063313ce56714610228578063395093511461024657806340c10f191461027257806342966c68146102a057806370a08231146102bd57610116565b806306fdde031461011b578063095ea7b31461019857806318160ddd146101d857806323b872dd146101f2575b600080fd5b6101236103f7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b03813516906020013561048d565b604080519115158252519081900360200190f35b6101e06104aa565b60408051918252519081900360200190f35b6101c46004803603606081101561020857600080fd5b506001600160a01b038135811691602081013590911690604001356104b0565b610230610537565b6040805160ff9092168252519081900360200190f35b6101c46004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610540565b61029e6004803603604081101561028857600080fd5b506001600160a01b03813516906020013561058e565b005b61029e600480360360208110156102b657600080fd5b5035610650565b6101e0600480360360208110156102d357600080fd5b50356001600160a01b0316610664565b61029e61067f565b61029e6004803603604081101561030157600080fd5b506001600160a01b038135169060200135610743565b61031f61079d565b604080516001600160a01b039092168252519081900360200190f35b61031f6107c1565b6101236107d5565b6101c46004803603604081101561036157600080fd5b506001600160a01b038135169060200135610836565b6101c46004803603604081101561038d57600080fd5b506001600160a01b03813516906020013561089e565b6101e0600480360360408110156103b957600080fd5b506001600160a01b03813581169160200135166108b2565b61029e600480360360208110156103e757600080fd5b50356001600160a01b03166108dd565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b60006104a161049a6109fd565b8484610a01565b50600192915050565b60025490565b60006104bd848484610aed565b61052d846104c96109fd565b610528856040518060600160405280602881526020016110dc602891396001600160a01b038a166000908152600160205260408120906105076109fd565b6001600160a01b031681526020810191909152604001600020549190610c48565b610a01565b5060019392505050565b60055460ff1690565b60006104a161054d6109fd565b84610528856001600061055e6109fd565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610cdf565b6105966109fd565b6001600160a01b03166105a76107c1565b6001600160a01b031614610602576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b80610642576040805162461bcd60e51b815260206004820152600b60248201526a0616d6f756e74203d3d20360ac1b604482015290519081900360640190fd5b61064c8282610d40565b5050565b61066161065b6109fd565b82610e30565b50565b6001600160a01b031660009081526020819052604090205490565b6106876109fd565b6001600160a01b03166106986107c1565b6001600160a01b0316146106f3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600061077a82604051806060016040528060248152602001611104602491396107738661076e6109fd565b6108b2565b9190610c48565b905061078e836107886109fd565b83610a01565b6107988383610e30565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104835780601f1061045857610100808354040283529160200191610483565b60006104a16108436109fd565b8461052885604051806060016040528060258152602001611192602591396001600061086d6109fd565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610c48565b60006104a16108ab6109fd565b8484610aed565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108e56109fd565b6001600160a01b03166108f66107c1565b6001600160a01b031614610951576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109965760405162461bcd60e51b815260040180806020018281038252602681526020018061106e6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b038316610a465760405162461bcd60e51b815260040180806020018281038252602481526020018061116e6024913960400191505060405180910390fd5b6001600160a01b038216610a8b5760405162461bcd60e51b81526004018080602001828103825260228152602001806110946022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b325760405162461bcd60e51b81526004018080602001828103825260258152602001806111496025913960400191505060405180910390fd5b6001600160a01b038216610b775760405162461bcd60e51b81526004018080602001828103825260238152602001806110296023913960400191505060405180910390fd5b610b82838383610f2c565b610bbf816040518060600160405280602681526020016110b6602691396001600160a01b0386166000908152602081905260409020549190610c48565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610bee9082610cdf565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610cd75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c9c578181015183820152602001610c84565b50505050905090810190601f168015610cc95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d39576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d9b576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610da760008383610f2c565b600254610db49082610cdf565b6002556001600160a01b038216600090815260208190526040902054610dda9082610cdf565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610e755760405162461bcd60e51b81526004018080602001828103825260218152602001806111286021913960400191505060405180910390fd5b610e8182600083610f2c565b610ebe8160405180606001604052806022815260200161104c602291396001600160a01b0385166000908152602081905260409020549190610c48565b6001600160a01b038316600090815260208190526040902055600254610ee49082610fcb565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610f37838383610798565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c00c125c83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b50505050505050565b600082821115611022576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e66721db69b22545e913dd1fb6c9e45e616abf286b9dca4b89e1e7190eec65ff64736f6c634300060c0033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Swap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "58": [1297, 1320, true],
          "59": [2099, 2121, true]
        }
      },
      "1": {
        "SafeMath.mul": {
          "63": [3619, 3625, false],
          "64": [3680, 3690, true]
        },
        "SafeMath.sub": {
          "62": [3221, 3227, true]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "Swap.getToken": {
          "54": [8649, 8688, true]
        },
        "Swap.getTokenBalance": {
          "56": [9875, 9914, true]
        },
        "Swap.getTokenIndex": {
          "53": [9144, 9184, true]
        },
        "Swap.swap": {
          "55": [7719, 7746, true]
        },
        "Swap.updateUserWithdrawFee": {
          "57": [19897, 19939, true]
        }
      },
      "14": {},
      "15": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "Pausable._unpause": {
          "60": [1631, 1639, true]
        }
      },
      "9": {
        "Swap.swap": {
          "61": [2277, 2296, true]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "23": [1150, 1163]
        },
        "Ownable.renounceOwnership": {
          "14": [1781, 1826],
          "15": [1836, 1855]
        },
        "Ownable.transferOwnership": {
          "39": [2091, 2164],
          "40": [2174, 2217],
          "41": [2227, 2244]
        }
      },
      "1": {
        "SafeMath.mul": {
          "45": [3627, 3635],
          "46": [3672, 3728],
          "47": [3738, 3746]
        },
        "SafeMath.sub": {
          "43": [3213, 3262],
          "44": [3272, 3284]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "OwnerPausable.pause": {
          "20": [612, 629]
        },
        "OwnerPausable.unpause": {
          "6": [778, 797]
        }
      },
      "13": {
        "Swap.addLiquidity": {
          "8": [16519, 16570]
        },
        "Swap.calculateCurrentWithdrawFee": {
          "7": [14607, 14659]
        },
        "Swap.calculateRemoveLiquidity": {
          "16": [13092, 13152]
        },
        "Swap.calculateRemoveLiquidityOneToken": {
          "27": [13781, 13925]
        },
        "Swap.calculateSwap": {
          "28": [11462, 11528]
        },
        "Swap.calculateTokenAmount": {
          "42": [12504, 12570]
        },
        "Swap.getA": {
          "34": [8040, 8065]
        },
        "Swap.getAPrecise": {
          "2": [8311, 8343]
        },
        "Swap.getAdminBalance": {
          "38": [14980, 15021]
        },
        "Swap.getBalances": {
          "0": [10186, 10213]
        },
        "Swap.getDepositTimestamp": {
          "36": [9502, 9546]
        },
        "Swap.getLpToken": {
          "17": [10580, 10615]
        },
        "Swap.getSwapFee": {
          "35": [10378, 10404]
        },
        "Swap.getToken": {
          "18": [8641, 8705],
          "19": [8715, 8753]
        },
        "Swap.getTokenBalance": {
          "25": [9867, 9937],
          "26": [9947, 9981]
        },
        "Swap.getTokenIndex": {
          "12": [9123, 9230],
          "13": [9240, 9252]
        },
        "Swap.getVirtualPrice": {
          "37": [10849, 10885]
        },
        "Swap.rampA": {
          "10": [21870, 21908]
        },
        "Swap.removeLiquidity": {
          "3": [17352, 17406]
        },
        "Swap.removeLiquidityImbalance": {
          "21": [19157, 19224]
        },
        "Swap.removeLiquidityOneToken": {
          "5": [18203, 18355]
        },
        "Swap.setAdminFee": {
          "22": [20503, 20539]
        },
        "Swap.setDefaultDepositFee": {
          "9": [21036, 21083]
        },
        "Swap.setDefaultWithdrawFee": {
          "29": [21387, 21436]
        },
        "Swap.setDevAddress": {
          "33": [22225, 22260]
        },
        "Swap.setSwapFee": {
          "4": [20770, 20804]
        },
        "Swap.stopRampA": {
          "32": [22068, 22091]
        },
        "Swap.swap": {
          "24": [15758, 15822]
        },
        "Swap.updateUserWithdrawFee": {
          "30": [19876, 19992],
          "31": [20002, 20062]
        },
        "Swap.withdrawAdminFees": {
          "1": [20210, 20248]
        }
      },
      "14": {},
      "15": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "48": [678, 695]
        }
      },
      "8": {
        "Pausable._pause": {
          "51": [1876, 1890],
          "52": [1900, 1925]
        },
        "Pausable._unpause": {
          "49": [2122, 2137],
          "50": [2147, 2174]
        },
        "Pausable.paused": {
          "11": [1115, 1129]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20Burnable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "ISwap",
    "LPToken",
    "MathUtils",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "OwnerPausable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "SwapUtils"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102265760003560e01c80638456cb5911610130578063c00c125c116100b8578063da7a77be1161007c578063da7a77be1461076a578063e25aa5fa14610790578063ef0a712f14610798578063f2fde38b146107b5578063f9273ffb146107db57610226565b8063c00c125c14610700578063c4db7fa01461072c578063d0d41fe114610734578063d46300fd1461075a578063d4cadf681461076257610226565b806391695586116100ff578063916955861461062257806391ceb3eb1461065e57806398899f401461067e578063a95b089f146106b3578063ac5bf263146106e357610226565b80638456cb591461058157806384cdd9bc146105895780638beb60b6146105fd5780638da5cb5b1461061a57610226565b806352ff62ec116101b357806366c0bd241161018257806366c0bd24146104cd578063715018a6146105095780637c61e561146105115780638214f5a41461053d57806382b866001461056157610226565b806352ff62ec1461040d578063593d132c1461042a5780635c975abb1461044d5780635fd65f0f1461046957610226565b806334e19907116101fa57806334e199071461031c5780633e3a1560146103395780633f4ba83a1461036b5780634a1b0d57146103735780634d49e87d1461039957610226565b8062113e081461022b5780630419b45a146102835780630ba819591461028d57806331cd52b0146102a7575b600080fd5b61023361085b565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561026f578181015183820152602001610257565b505050509050019250505060405180910390f35b61028b6108b6565b005b61029561099a565b60408051918252519081900360200190f35b610233600480360360608110156102bd57600080fd5b81359190810190604081016020820135600160201b8111156102de57600080fd5b8201836020820111156102f057600080fd5b803590602001918460208302840111600160201b8311171561031157600080fd5b919350915035610a1f565b61028b6004803603602081101561033257600080fd5b5035610c1c565b6102956004803603608081101561034f57600080fd5b5080359060ff6020820135169060408101359060600135610cf2565b61028b610e78565b6102956004803603602081101561038957600080fd5b50356001600160a01b0316610ee4565b610295600480360360608110156103af57600080fd5b810190602081018135600160201b8111156103c957600080fd5b8201836020820111156103db57600080fd5b803590602001918460208302840111600160201b831117156103fc57600080fd5b919350915080359060200135610f7b565b61028b6004803603602081101561042357600080fd5b50356110ef565b61028b6004803603604081101561044057600080fd5b50803590602001356111aa565b610455611288565b604080519115158252519081900360200190f35b610471611298565b604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e08501526001600160a01b039081166101008501521661012083015251908190036101400190f35b6104f3600480360360208110156104e357600080fd5b50356001600160a01b03166112c6565b6040805160ff9092168252519081900360200190f35b61028b611348565b6102336004803603604081101561052757600080fd5b506001600160a01b0381351690602001356113f4565b61054561152f565b604080516001600160a01b039092168252519081900360200190f35b6105456004803603602081101561057757600080fd5b503560ff1661153e565b61028b6115b5565b6102956004803603606081101561059f57600080fd5b810190602081018135600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b91935091508035906020013561161f565b61028b6004803603602081101561061357600080fd5b5035611793565b61054561184e565b610295600480360360a081101561063857600080fd5b5060ff81358116916020810135909116906040810135906060810135906080013561185d565b6102956004803603602081101561067457600080fd5b503560ff166119ec565b6102956004803603606081101561069457600080fd5b5080356001600160a01b0316906020810135906040013560ff16611a60565b610295600480360360608110156106c957600080fd5b5060ff813581169160208101359091169060400135611b04565b61028b600480360360208110156106f957600080fd5b5035611b9c565b61028b6004803603604081101561071657600080fd5b506001600160a01b038135169060200135611c57565b61028b611d1e565b61028b6004803603602081101561074a57600080fd5b50356001600160a01b0316611dd2565b610295611e95565b610295611ee9565b6102956004803603602081101561078057600080fd5b50356001600160a01b0316611eef565b610295611f54565b610295600480360360208110156107ae57600080fd5b5035611fa8565b61028b600480360360208110156107cb57600080fd5b50356001600160a01b0316612004565b610295600480360360608110156107f157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561081b57600080fd5b82018360208201111561082d57600080fd5b803590602001918460208302840111600160201b8311171561084e57600080fd5b9193509150351515612106565b60606002600c018054806020026020016040519081016040528092919081815260200182805480156108ac57602002820191906000526020600020905b815481526020019060010190808311610898575b5050505050905090565b6108be61229e565b6001600160a01b03166108cf61184e565b6001600160a01b031614610918576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b73__$a4e4384d4f8ec13c7a898ae597a4175ef6$__6324c5c751600261093c61184e565b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060006040518083038186803b15801561098057600080fd5b505af4158015610994573d6000803e3d6000fd5b50505050565b6000600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__63c9b64dcb90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b505af4158015610a02573d6000803e3d6000fd5b505050506040513d6020811015610a1857600080fd5b5051905090565b606060026001541415610a67576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b60026001558142811015610ab5576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__6373fd6b3e90918888886040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060006040518083038186803b158015610b4657600080fd5b505af4158015610b5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b8357600080fd5b8101908080516040519392919084600160201b821115610ba257600080fd5b908301906020820185811115610bb757600080fd5b82518660208202830111600160201b82111715610bd357600080fd5b82525081516020918201928201910280838360005b83811015610c00578181015183820152602001610be8565b5050505090500160405250505091505060018055949350505050565b610c2461229e565b6001600160a01b0316610c3561184e565b6001600160a01b031614610c7e576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163119f861b60e21b81526002600482015260248101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163467e186c916044808301926000929190829003018186803b158015610cd757600080fd5b505af4158015610ceb573d6000803e3d6000fd5b5050505050565b600060026001541415610d3a576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155610d47611288565b15610d8c576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115610dd5576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b6040805163e7a4db8160e01b8152600260048201526024810188905260ff8716604482015260648101869052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163e7a4db81916084808301926020929190829003018186803b158015610e3e57600080fd5b505af4158015610e52573d6000803e3d6000fd5b505050506040513d6020811015610e6857600080fd5b5051600180559695505050505050565b610e8061229e565b6001600160a01b0316610e9161184e565b6001600160a01b031614610eda576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b610ee26122a2565b565b604080516325a3956560e21b8152600260048201526001600160a01b0383166024820152905160009173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163968e559491604480820192602092909190829003018186803b158015610f4957600080fd5b505af4158015610f5d573d6000803e3d6000fd5b505050506040513d6020811015610f7357600080fd5b505192915050565b600060026001541415610fc3576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155610fd0611288565b15611015576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b818042111561105e576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__6340370edf90918888886040518563ffffffff1660e01b815260040180858152602001806020018381526020018281038252858582818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015610e3e57600080fd5b6110f761229e565b6001600160a01b031661110861184e565b6001600160a01b031614611151576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163d2a3948760e01b81526002600482015260248101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163d2a39487916044808301926000929190829003018186803b158015610cd757600080fd5b6111b261229e565b6001600160a01b03166111c361184e565b6001600160a01b03161461120c576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516358fdd79b60e01b8152600260048201526024810184905260448101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__916358fdd79b916064808301926000929190829003018186803b15801561126c57600080fd5b505af4158015611280573d6000803e3d6000fd5b505050505050565b600054600160a01b900460ff1690565b600254600354600454600554600654600754600854600954600a54600b546001600160a01b0391821691168a565b6001600160a01b038116600081815260116020526040812054909160ff909116906112f08261153e565b6001600160a01b031614611342576040805162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b92915050565b61135061229e565b6001600160a01b031661136161184e565b6001600160a01b0316146113aa576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6040805163f967a81f60e01b8152600260048201526001600160a01b038416602482015260448101839052905160609173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163f967a81f91606480820192600092909190829003018186803b15801561146057600080fd5b505af4158015611474573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561149d57600080fd5b8101908080516040519392919084600160201b8211156114bc57600080fd5b9083019060208201858111156114d157600080fd5b82518660208202830111600160201b821117156114ed57600080fd5b82525081516020918201928201910280838360005b8381101561151a578181015183820152602001611502565b50505050905001604052505050905092915050565b600b546001600160a01b031690565b600c5460009060ff831610611589576040805162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015290519081900360640190fd5b600c805460ff841690811061159a57fe5b6000918252602090912001546001600160a01b031692915050565b6115bd61229e565b6001600160a01b03166115ce61184e565b6001600160a01b031614611617576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b610ee2612345565b600060026001541415611667576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b6002600155611674611288565b156116b9576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115611702576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__6341b91c2690918888886040518563ffffffff1660e01b815260040180858152602001806020018381526020018281038252858582818152602001925060200280828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015610e3e57600080fd5b61179b61229e565b6001600160a01b03166117ac61184e565b6001600160a01b0316146117f5576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b60408051633823393b60e11b81526002600482015260248101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__916370467276916044808301926000929190829003018186803b158015610cd757600080fd5b6000546001600160a01b031690565b6000600260015414156118a5576040805162461bcd60e51b815260206004820152601f60248201526000805160206123cf833981519152604482015290519081900360640190fd5b60026001556118b2611288565b156118f7576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b8180421115611940576040805162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b604482015290519081900360640190fd5b6040805163529cbd9160e11b81526002600482015260ff808a166024830152881660448201526064810187905260848101869052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163a5397b229160a4808301926020929190829003018186803b1580156119b157600080fd5b505af41580156119c5573d6000803e3d6000fd5b505050506040513d60208110156119db57600080fd5b505160018055979650505050505050565b600c5460009060ff831610611a3d576040805162461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b604482015290519081900360640190fd5b600e805460ff8416908110611a4e57fe5b90600052602060002001549050919050565b60408051637254d06d60e11b8152600260048201526001600160a01b03851660248201526044810184905260ff83166064820152815160009273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9263e4a9a0da9260848083019392829003018186803b158015611ad057600080fd5b505af4158015611ae4573d6000803e3d6000fd5b505050506040513d6040811015611afa57600080fd5b5051949350505050565b604080516312c8d80f60e21b81526002600482015260ff80861660248301528416604482015260648101839052905160009173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__91634b23603c91608480820192602092909190829003018186803b158015611b7257600080fd5b505af4158015611b86573d6000803e3d6000fd5b505050506040513d6020811015611afa57600080fd5b611ba461229e565b6001600160a01b0316611bb561184e565b6001600160a01b031614611bfe576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6040805163455bb4bf60e11b81526002600482015260248101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__91638ab7697e916044808301926000929190829003018186803b158015610cd757600080fd5b600b546001600160a01b03163314611cb6576040805162461bcd60e51b815260206004820152601b60248201527f4f6e6c792063616c6c61626c6520627920706f6f6c20746f6b656e0000000000604482015290519081900360640190fd5b6040805163749296a360e11b8152600260048201526001600160a01b038416602482015260448101839052905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163e9252d46916064808301926000929190829003018186803b15801561126c57600080fd5b611d2661229e565b6001600160a01b0316611d3761184e565b6001600160a01b031614611d80576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516378a7108f60e11b815260026004820152905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163f14e211e916024808301926000929190829003018186803b15801561098057600080fd5b611dda61229e565b6001600160a01b0316611deb61184e565b6001600160a01b031614611e34576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b604080516321c363e760e11b8152600260048201526001600160a01b0383166024820152905173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__91634386c7ce916044808301926000929190829003018186803b158015610cd757600080fd5b6000600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__63b0a14cfc90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b60065490565b60408051633a311e9560e21b8152600260048201526001600160a01b0383166024820152905160009173__$a4e4384d4f8ec13c7a898ae597a4175ef6$__9163e8c47a5491604480820192602092909190829003018186803b158015610f4957600080fd5b6000600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__6371906c2c90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109ee57600080fd5b6000600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__637d0481609091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610f4957600080fd5b61200c61229e565b6001600160a01b031661201d61184e565b6001600160a01b031614612066576040805162461bcd60e51b81526020600482018190526024820152600080516020612436833981519152604482015290519081900360640190fd5b6001600160a01b0381166120ab5760405162461bcd60e51b81526004018080602001828103825260268152602001806123ef6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000600273__$a4e4384d4f8ec13c7a898ae597a4175ef6$__635e58579c9091878787876040518663ffffffff1660e01b815260040180868152602001856001600160a01b031681526020018060200183151581526020018281038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060206040518083038186803b1580156121ac57600080fd5b505af41580156121c0573d6000803e3d6000fd5b505050506040513d60208110156121d657600080fd5b505195945050505050565b600082821115612238576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008261224d57506000611342565b8282028284828161225a57fe5b04146122975760405162461bcd60e51b81526004018080602001828103825260218152602001806124156021913960400191505060405180910390fd5b9392505050565b3390565b6122aa611288565b6122f2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61232861229e565b604080516001600160a01b039092168252519081900360200190a1565b61234d611288565b15612392576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861232861229e56fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c004f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220a69d0a26e2930982bf9d92ad7bcb3efcd65b75bba966786e1eaaf74c0a2b9b7a64736f6c634300060c0033",
  "deployedSourceMap": "1319:20950:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20152:103;;;:::i;:::-;;8246:104;;;:::i;:::-;;;;;;;;;;;;;;;;17149:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17149:264:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17149:264:13;;;;;;;;;;;;-1:-1:-1;17149:264:13;-1:-1:-1;17149:264:13;;:::i;20701:110::-;;;;;;;;;;;;;;;;-1:-1:-1;20701:110:13;;:::i;17924:438::-;;;;;;;;;;;;;;;;-1:-1:-1;17924:438:13;;;;;;;;;;;;;;;;;;;:::i;729:76:12:-;;;:::i;14486:180:13:-;;;;;;;;;;;;;;;;-1:-1:-1;14486:180:13;-1:-1:-1;;;;;14486:180:13;;:::i;16270:307::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16270:307:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16270:307:13;;;;;;;;;;;;-1:-1:-1;16270:307:13;-1:-1:-1;16270:307:13;;;;;;;:::i;20954:136::-;;;;;;;;;;;;;;;;-1:-1:-1;20954:136:13;;:::i;21789:126::-;;;;;;;;;;;;;;;;-1:-1:-1;21789:126:13;;;;;;;:::i;1052:84:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1705:33:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1705:33:13;;;;;;;;;;;;;;;;;;;;;8988:271;;;;;;;;;;;;;;;;-1:-1:-1;8988:271:13;-1:-1:-1;;;;;8988:271:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:0;;;:::i;12946:213:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12946:213:13;;;;;;;;:::i;10515:108::-;;;:::i;:::-;;;;-1:-1:-1;;;;;10515:108:13;;;;;;;;;;;;;;8571:189;;;;;;;;;;;;;;;;-1:-1:-1;8571:189:13;;;;:::i;565:72:12:-;;;:::i;18892:339:13:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18892:339:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18892:339:13;;;;;;;;;;;;-1:-1:-1;18892:339:13;-1:-1:-1;18892:339:13;;;;;;;:::i;20432:114::-;;;;;;;;;;;;;;;;-1:-1:-1;20432:114:13;;:::i;1085:85:0:-;;;:::i;15479:350:13:-;;;;;;;;;;;;;;;;-1:-1:-1;15479:350:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9787:201::-;;;;;;;;;;;;;;;;-1:-1:-1;9787:201:13;;;;:::i;13590:342::-;;;;;;;;;;;;;;;;-1:-1:-1;13590:342:13;;-1:-1:-1;;;;;13590:342:13;;;;;;;;;;;;;:::i;11313:222::-;;;;;;;;;;;;;;;;-1:-1:-1;11313:222:13;;;;;;;;;;;;;;;;;;:::i;21303:140::-;;;;;;;;;;;;;;;;-1:-1:-1;21303:140:13;;:::i;19771:298::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19771:298:13;;;;;;;;:::i;22018:80::-;;;:::i;22155:112::-;;;;;;;;;;;;;;;;-1:-1:-1;22155:112:13;-1:-1:-1;;;;;22155:112:13;;:::i;7982:90::-;;;:::i;10313:99::-;;;:::i;9417:136::-;;;;;;;;;;;;;;;;-1:-1:-1;9417:136:13;-1:-1:-1;;;;;9417:136:13;;:::i;10780:112::-;;;:::i;14898:130::-;;;;;;;;;;;;;;;;-1:-1:-1;14898:130:13;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;12343:234:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12343:234:13;;;;;;;;;;;;;;;-1:-1:-1;;;12343:234:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12343:234:13;;;;;;;;;;;;-1:-1:-1;12343:234:13;-1:-1:-1;12343:234:13;;;;:::i;10112:108::-;10158:16;10193:11;:20;;10186:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:108;:::o;20152:103::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;20210:29:13::1;;:11;20240:7;:5;:7::i;:::-;20210:38;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;20210:38:13::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;20152:103::o:0;8246:104::-;8292:7;8318:11;:23;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8318:25:13;;-1:-1:-1;8246:104:13;:::o;17149:264::-;17324:16;1688:1:9;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:9;;;;;;;;;;;;;;;1688:1;2407:7;:18;17305:8:13;7719:15:::1;:27:::0;-1:-1:-1;7719:27:13::1;7711:56;;;::::0;;-1:-1:-1;;;7711:56:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7711:56:13;;;;;;;;;;;;;::::1;;17359:11:::2;:27;;;;17387:6;17395:10;;17359:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;17359:47:13::2;::::0;::::2;;::::0;::::2;::::0;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;-1:-1:-1::0;;;17359:47:13::2;;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;;;;;::::0;::::2;;;;;;;;;;;-1:-1:-1::0;;;17359:47:13::2;;;;;;;::::0;::::2;;::::0;;-1:-1:-1;17359:47:13;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;17352:54;;-1:-1:-1::0;1645:1:9;2580:22;;17149:264:13;;-1:-1:-1;;;;17149:264:13:o;20701:110::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;20770:34:13::1;::::0;;-1:-1:-1;;;20770:34:13;;:11:::1;:34;::::0;::::1;::::0;;;;;;;;;:22:::1;::::0;::::1;::::0;:34;;;;;-1:-1:-1;;20770:34:13;;;;;;;:22;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;20701:110:::0;:::o;17924:438::-;18180:7;1688:1:9;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:9;;;;;;;;;;;;;;;1688:1;2407:7;:18;1366:8:8::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;;::::1;;18153:8:13::2;7738;7719:15;:27;;7711:56;;;::::0;;-1:-1:-1;;;7711:56:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;7711:56:13;;;;;;;;;;;;;::::2;;18222:133:::3;::::0;;-1:-1:-1;;;18222:133:13;;:11:::3;:133;::::0;::::3;::::0;;;;;;;::::3;::::0;::::3;::::0;;;;;;;;;;;;:35:::3;::::0;::::3;::::0;:133;;;;;::::3;::::0;;;;;;;;:35;:133;::::3;;::::0;::::3;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;::::0;::::3;;-1:-1:-1::0;18222:133:13;1645:1:9;2580:22;;18222:133:13;17924:438;-1:-1:-1;;;;;;17924:438:13:o;729:76:12:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;778:19:12::1;:17;:19::i;:::-;729:76::o:0;14486:180:13:-;14614:45;;;-1:-1:-1;;;14614:45:13;;:11;:45;;;;-1:-1:-1;;;;;14614:45:13;;;;;;;;14584:7;;14614:39;;;;:45;;;;;;;;;;;;;;;:39;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14614:45:13;;14486:180;-1:-1:-1;;14486:180:13:o;16270:307::-;16496:7;1688:1:9;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:9;;;;;;;;;;;;;;;1688:1;2407:7;:18;1366:8:8::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;;::::1;;16469:8:13::2;7738;7719:15;:27;;7711:56;;;::::0;;-1:-1:-1;;;7711:56:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;7711:56:13;;;;;;;;;;;;;::::2;;16526:11:::3;:24;;;;16551:7;;16560:9;16526:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;20954:136:::0;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;21036:47:13::1;::::0;;-1:-1:-1;;;21036:47:13;;:11:::1;:47;::::0;::::1;::::0;;;;;;;;;:32:::1;::::0;::::1;::::0;:47;;;;;-1:-1:-1;;21036:47:13;;;;;;;:32;:47;::::1;;::::0;::::1;;;;::::0;::::1;21789:126:::0;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;21870:38:13::1;::::0;;-1:-1:-1;;;21870:38:13;;:11:::1;:38;::::0;::::1;::::0;;;;;;;;;;;;;;;:17:::1;::::0;::::1;::::0;:38;;;;;-1:-1:-1;;21870:38:13;;;;;;;:17;:38;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;21789:126:::0;;:::o;1052:84:8:-;1099:4;1122:7;-1:-1:-1;;;1122:7:8;;;;;1052:84::o;1705:33:13:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1705:33:13;;;;;;:::o;8988:271::-;-1:-1:-1;;;;;9087:26:13;;9056:5;9087:26;;;:12;:26;;;;;;9056:5;;9087:26;;;;;9152:15;9087:26;9152:8;:15::i;:::-;-1:-1:-1;;;;;9144:40:13;;9123:107;;;;;-1:-1:-1;;;9123:107:13;;;;;;;;;;;;-1:-1:-1;;;9123:107:13;;;;;;;;;;;;;;;9247:5;8988:271;-1:-1:-1;;8988:271:13:o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;12946:213:13:-;13099:53;;;-1:-1:-1;;;13099:53:13;;:11;:53;;;;-1:-1:-1;;;;;13099:53:13;;;;;;;;;;;;;;13060:16;;13099:36;;;;:53;;;;;-1:-1:-1;;13099:53:13;;;;;;;;:36;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13099:53:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13099:53:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13099:53:13;;;;;;;;;;;;-1:-1:-1;13099:53:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13092:60;;12946:213;;;;:::o;10515:108::-;10595:19;;-1:-1:-1;;;;;10595:19:13;10515:108;:::o;8571:189::-;8657:24;:31;8623:6;;8649:39;;;;8641:64;;;;;-1:-1:-1;;;8641:64:13;;;;;;;;;;;;-1:-1:-1;;;8641:64:13;;;;;;;;;;;;;;;8722:24;:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8722:31:13;;8571:189;-1:-1:-1;;8571:189:13:o;565:72:12:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;612:17:12::1;:15;:17::i;18892:339:13:-:0;19134:7;1688:1:9;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:9;;;;;;;;;;;;;;;1688:1;2407:7;:18;1366:8:8::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;;::::1;;19107:8:13::2;7738;7719:15;:27;;7711:56;;;::::0;;-1:-1:-1;;;7711:56:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;7711:56:13;;;;;;;;;;;;;::::2;;19164:11:::3;:36;;;;19201:7;;19210:13;19164:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;20432:114:::0;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;20503:36:13::1;::::0;;-1:-1:-1;;;20503:36:13;;:11:::1;:36;::::0;::::1;::::0;;;;;;;;;:23:::1;::::0;::::1;::::0;:36;;;;;-1:-1:-1;;20503:36:13;;;;;;;:23;:36;::::1;;::::0;::::1;;;;::::0;::::1;1085:85:0::0;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;15479:350:13:-;15735:7;1688:1:9;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:9;;;;;;;;;;;;;;;1688:1;2407:7;:18;1366:8:8::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;;::::1;;15708:8:13::2;7738;7719:15;:27;;7711:56;;;::::0;;-1:-1:-1;;;7711:56:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;7711:56:13;;;;;;;;;;;;;::::2;;15765:57:::3;::::0;;-1:-1:-1;;;15765:57:13;;:11:::3;:57;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;;;;;::::3;::::0;;;;;;;;;;;;;;;;;;:16:::3;::::0;::::3;::::0;:57;;;;;::::3;::::0;;;;;;;;:16;:57;::::3;;::::0;::::3;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;::::0;::::3;;-1:-1:-1::0;15765:57:13;1645:1:9;2580:22;;15765:57:13;15479:350;-1:-1:-1;;;;;;;15479:350:13:o;9787:201::-;9883:24;:31;9848:7;;9875:39;;;;9867:70;;;;;-1:-1:-1;;;9867:70:13;;;;;;;;;;;;-1:-1:-1;;;9867:70:13;;;;;;;;;;;;;;;9954:20;:27;;;;;;;;;;;;;;;;;;;;9947:34;;9787:201;;;:::o;13590:342::-;13808:117;;;-1:-1:-1;;;13808:117:13;;:11;:117;;;;-1:-1:-1;;;;;13808:117:13;;;;;;;;;;;;;;;;;;;;;13741:28;;13808:37;;;;:117;;;;;;;;;;;:37;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13808:117:13;;13590:342;-1:-1:-1;;;;13590:342:13:o;11313:222::-;11469:59;;;-1:-1:-1;;;11469:59:13;;:11;:59;;;;;;;;;;;;;;;;;;;;;;;;;;11443:7;;11469:25;;;;:59;;;;;;;;;;;;;;;:25;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21303:140;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;21387:49:13::1;::::0;;-1:-1:-1;;;21387:49:13;;:11:::1;:49;::::0;::::1;::::0;;;;;;;;;:33:::1;::::0;::::1;::::0;:49;;;;;-1:-1:-1;;21387:49:13;;;;;;;:33;:49;::::1;;::::0;::::1;;;;::::0;::::1;19771:298:::0;19919:19;;-1:-1:-1;;;;;19919:19:13;19897:10;:42;19876:116;;;;;-1:-1:-1;;;19876:116:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;20002:60;;;-1:-1:-1;;;20002:60:13;;:11;:60;;;;-1:-1:-1;;;;;20002:60:13;;;;;;;;;;;;;;:33;;;;:60;;;;;-1:-1:-1;;20002:60:13;;;;;;;:33;:60;;;;;;;;;;22018:80;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;22068:23:13::1;::::0;;-1:-1:-1;;;22068:23:13;;:11:::1;:23;::::0;::::1;::::0;;;:21:::1;::::0;::::1;::::0;:23;;;;;-1:-1:-1;;22068:23:13;;;;;;;:21;:23;::::1;;::::0;::::1;;;;::::0;::::1;22155:112:::0;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;22225:35:13::1;::::0;;-1:-1:-1;;;22225:35:13;;:11:::1;:35;::::0;::::1;::::0;-1:-1:-1;;;;;22225:35:13;::::1;::::0;;;;;;:25:::1;::::0;::::1;::::0;:35;;;;;-1:-1:-1;;22225:35:13;;;;;;;:25;:35;::::1;;::::0;::::1;;;;::::0;::::1;7982:90:::0;8021:7;8047:11;:16;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10313:99;10385:19;;10313:99;:::o;9417:136::-;9509:37;;;-1:-1:-1;;;9509:37:13;;:11;:37;;;;-1:-1:-1;;;;;9509:37:13;;;;;;;;9483:7;;9509:31;;;;:37;;;;;;;;;;;;;;;:31;:37;;;;;;;;;;10780:112;10830:7;10856:11;:27;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14898:130;14961:7;14987:11;:27;;;;15015:5;14987:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:240:0;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;12343:234:13:-;12485:7;12511:11;:32;;;;12544:7;12553;;12562;12511:59;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12511:59:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12511:59:13;;12343:234;-1:-1:-1;;;;;12343:234:13:o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:1;;;3136:155::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:1;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3538:215;-1:-1:-1;;;3538:215:1:o;598:104:7:-;685:10;598:104;:::o;2064:117:8:-;1631:8;:6;:8::i;:::-;1623:41;;;;;-1:-1:-1;;;1623:41:8;;;;;;;;;;;;-1:-1:-1;;;1623:41:8;;;;;;;;;;;;;;;2132:5:::1;2122:15:::0;;-1:-1:-1;;;;2122:15:8::1;::::0;;2152:22:::1;2161:12;:10;:12::i;:::-;2152:22;::::0;;-1:-1:-1;;;;;2152:22:8;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2064:117::o:0;1817:115::-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;-1:-1:-1;;;1357:38:8;;;;;;;;;;;;;;;1876:7:::1;:14:::0;;-1:-1:-1;;;;1876:14:8::1;-1:-1:-1::0;;;1876:14:8::1;::::0;;1905:20:::1;1912:12;:10;:12::i",
  "language": "Solidity",
  "natspec": {
    "details": "Most of the logic is stored as a library `SwapUtils` for the sake of reducing contract's deployment size.",
    "kind": "dev",
    "methods": {
      "addLiquidity(uint256[],uint256,uint256)": {
        "notice": "Add liquidity to the pool with given amounts",
        "params": {
          "amounts": "the amounts of each token to add, in their native precision",
          "deadline": "latest timestamp to accept this transaction",
          "minToMint": "the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation"
        },
        "returns": {
          "_0": "amount of LP token user minted and received"
        }
      },
      "calculateCurrentWithdrawFee(address)": {
        "details": "returned value should be divided by FEE_DENOMINATOR to convert to correct decimals",
        "notice": "Calculate the fee that is applied when the given user withdraws. The withdraw fee decays linearly over period of 4 weeks. For example, depositing and withdrawing right away will charge you the full amount of withdraw fee. But withdrawing after 4 weeks will charge you no additional fees.",
        "params": {
          "user": "address you want to calculate withdraw fee of"
        },
        "returns": {
          "_0": "current withdraw fee of the user"
        }
      },
      "calculateRemoveLiquidity(address,uint256)": {
        "notice": "A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens",
        "params": {
          "account": "the address that is withdrawing tokens",
          "amount": "the amount of LP tokens that would be burned on withdrawal"
        },
        "returns": {
          "_0": "array of token balances that the user will receive"
        }
      },
      "calculateRemoveLiquidityOneToken(address,uint256,uint8)": {
        "notice": "Calculate the amount of underlying token available to withdraw when withdrawing via only single token",
        "params": {
          "account": "the address that is withdrawing tokens",
          "tokenAmount": "the amount of LP token to burn",
          "tokenIndex": "index of which token will be withdrawn"
        },
        "returns": {
          "availableTokenAmount": "calculated amount of underlying token available to withdraw"
        }
      },
      "calculateSwap(uint8,uint8,uint256)": {
        "notice": "Calculate amount of tokens you receive on swap",
        "params": {
          "dx": "the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.",
          "tokenIndexFrom": "the token the user wants to sell",
          "tokenIndexTo": "the token the user wants to buy"
        },
        "returns": {
          "_0": "amount of tokens the user will receive"
        }
      },
      "calculateTokenAmount(address,uint256[],bool)": {
        "details": "This shouldn't be used outside frontends for user estimates.",
        "notice": "A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \"min\" parameters on calls to fight front-running",
        "params": {
          "account": "address that is depositing or withdrawing tokens",
          "amounts": "an array of token amounts to deposit or withdrawal, corresponding to pooledTokens. The amount should be in each pooled token's native precision. If a token charges a fee on transfers, use the amount that gets transferred after the fee.",
          "deposit": "whether this is a deposit or a withdrawal"
        },
        "returns": {
          "_0": "token amount the user will receive"
        }
      },
      "constructor": {
        "params": {
          "_a": "the amplification coefficient * n * (n - 1). See the StableSwap paper for details",
          "_adminFee": "default adminFee to be initialized with",
          "_depositFee": "default depositFee to be initialized with",
          "_devaddr": "default _devaddr to be initialized with",
          "_fee": "default swap fee to be initialized with",
          "_pooledTokens": "an array of ERC20s this pool will accept",
          "_withdrawFee": "default withdrawFee to be initialized with",
          "decimals": "the decimals to use for each pooled token, eg 8 for WBTC. Cannot be larger than POOL_PRECISION_DECIMALS",
          "lpTokenName": "the long-form name of the token to be deployed",
          "lpTokenSymbol": "the short symbol for the token to be deployed"
        }
      },
      "getA()": {
        "details": "See the StableSwap paper for details",
        "notice": "Return A, the amplification coefficient * n * (n - 1)",
        "returns": {
          "_0": "A parameter"
        }
      },
      "getAPrecise()": {
        "details": "See the StableSwap paper for details",
        "notice": "Return A in its raw precision form",
        "returns": {
          "_0": "A parameter in its raw precision form"
        }
      },
      "getAdminBalance(uint256)": {
        "notice": "This function reads the accumulated amount of admin fees of the token with given index",
        "params": {
          "index": "Index of the pooled token"
        },
        "returns": {
          "_0": "admin's token balance in the token's precision"
        }
      },
      "getBalances()": {
        "notice": "Return balances of pooled tokens",
        "returns": {
          "_0": "current balances of all tokens in pool"
        }
      },
      "getDepositTimestamp(address)": {
        "notice": "Return timestamp of last deposit of given address",
        "returns": {
          "_0": "timestamp of the last deposit made by the given address"
        }
      },
      "getLpToken()": {
        "notice": "Returns address of lp token",
        "returns": {
          "_0": "address of lp token"
        }
      },
      "getSwapFee()": {
        "notice": "Returns the swap fee",
        "returns": {
          "_0": "current swap fee"
        }
      },
      "getToken(uint8)": {
        "notice": "Return address of the pooled token at given index. Reverts if tokenIndex is out of range.",
        "params": {
          "index": "the index of the token"
        },
        "returns": {
          "_0": "address of the token at given index"
        }
      },
      "getTokenBalance(uint8)": {
        "notice": "Return current balance of the pooled token at given index",
        "params": {
          "index": "the index of the token"
        },
        "returns": {
          "_0": "current balance of the pooled token at given index with token's native precision"
        }
      },
      "getTokenIndex(address)": {
        "notice": "Return the index of the given token address. Reverts if no matching token is found.",
        "params": {
          "tokenAddress": "address of the token"
        },
        "returns": {
          "_0": "the index of the given token address"
        }
      },
      "getVirtualPrice()": {
        "notice": "Get the virtual price, to help calculate profit",
        "returns": {
          "_0": "the virtual price, scaled to the POOL_PRECISION_DECIMALS"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "notice": "Pause the contract. Revert if already paused."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "rampA(uint256,uint256)": {
        "notice": "Start ramping up or down A parameter towards given futureA and futureTime Checks if the change is too rapid, and commits the new A value only when it falls under the limit range.",
        "params": {
          "futureA": "the new A to ramp towards",
          "futureTime": "timestamp when the new A should be reached"
        }
      },
      "removeLiquidity(uint256,uint256[],uint256)": {
        "details": "Liquidity can always be removed, even when the pool is paused.",
        "notice": "Burn LP tokens to remove liquidity from the pool. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply.",
        "params": {
          "amount": "the amount of LP tokens to burn",
          "deadline": "latest timestamp to accept this transaction",
          "minAmounts": "the minimum amounts of each token in the pool        acceptable for this burn. Useful as a front-running mitigation"
        },
        "returns": {
          "_0": "amounts of tokens user received"
        }
      },
      "removeLiquidityImbalance(uint256[],uint256,uint256)": {
        "notice": "Remove liquidity from the pool, weighted differently than the pool's current balances. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply.",
        "params": {
          "amounts": "how much of each token to withdraw",
          "deadline": "latest timestamp to accept this transaction",
          "maxBurnAmount": "the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation."
        },
        "returns": {
          "_0": "amount of LP tokens burned"
        }
      },
      "removeLiquidityOneToken(uint256,uint8,uint256,uint256)": {
        "notice": "Remove liquidity from the pool all in one token. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply.",
        "params": {
          "deadline": "latest timestamp to accept this transaction",
          "minAmount": "the minimum amount to withdraw, otherwise revert",
          "tokenAmount": "the amount of the token you want to receive",
          "tokenIndex": "the index of the token you want to receive"
        },
        "returns": {
          "_0": "amount of chosen token user received"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdminFee(uint256)": {
        "notice": "Update the admin fee. Admin fee takes portion of the swap fee.",
        "params": {
          "newAdminFee": "new admin fee to be applied on future transactions"
        }
      },
      "setDefaultDepositFee(uint256)": {
        "notice": "Update the deposit fee. ",
        "params": {
          "newDepositFee": "new deposit fee to be applied on future deposits"
        }
      },
      "setDefaultWithdrawFee(uint256)": {
        "notice": "Update the withdraw fee. This fee decays linearly over 4 weeks since user's last deposit.",
        "params": {
          "newWithdrawFee": "new withdraw fee to be applied on future deposits"
        }
      },
      "setSwapFee(uint256)": {
        "notice": "Update the swap fee to be applied on swaps",
        "params": {
          "newSwapFee": "new swap fee to be applied on future transactions"
        }
      },
      "stopRampA()": {
        "notice": "Stop ramping A immediately. Reverts if ramp A is already stopped."
      },
      "swap(uint8,uint8,uint256,uint256,uint256)": {
        "notice": "Swap two tokens using this pool",
        "params": {
          "deadline": "latest timestamp to accept this transaction",
          "dx": "the amount of tokens the user wants to swap from",
          "minDy": "the min amount the user would like to receive, or revert.",
          "tokenIndexFrom": "the token the user wants to swap from",
          "tokenIndexTo": "the token the user wants to swap to"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "notice": "Unpause the contract. Revert if already unpaused."
      },
      "updateUserWithdrawFee(address,uint256)": {
        "notice": "Updates the user withdraw fee. This function can only be called by the pool token. Should be used to update the withdraw fee on transfer of pool tokens. Transferring your pool token will reset the 4 weeks period. If the recipient is already holding some pool tokens, the withdraw fee will be discounted in respective amounts.",
        "params": {
          "recipient": "address of the recipient of pool token",
          "transferAmount": "amount of pool token to transfer"
        }
      },
      "withdrawAdminFees()": {
        "notice": "Withdraw all admin fees to the contract owner"
      }
    },
    "notice": "This contract is responsible for custody of closely pegged assets (eg. group of stablecoins) and automatic market making system. Users become an LP (Liquidity Provider) by depositing their tokens in desired ratios for an exchange of the pool token that represents their share of the pool. Users can burn pool tokens and withdraw their share of token(s). Each time a swap between the pooled tokens happens, a set fee incurs which effectively gets distributed to the LPs. In case of emergencies, admin can pause additional deposits, swaps, or single-asset withdraws - which stops the ratio of the tokens in the pool from changing. Users can always withdraw their tokens via multi-asset withdraws.",
    "title": "Swap - A StableSwap implementation in solidity.",
    "version": 1
  },
  "offset": [1319, 22269],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x226 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xC00C125C GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDA7A77BE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDA7A77BE EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0xE25AA5FA EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xEF0A712F EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xF9273FFB EQ PUSH2 0x7DB JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0xC00C125C EQ PUSH2 0x700 JUMPI DUP1 PUSH4 0xC4DB7FA0 EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xD4CADF68 EQ PUSH2 0x762 JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0x91695586 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x91695586 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x91CEB3EB EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x98899F40 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xA95B089F EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xAC5BF263 EQ PUSH2 0x6E3 JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x84CDD9BC EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8BEB60B6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61A JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0x52FF62EC GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x66C0BD24 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x66C0BD24 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x7C61E561 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x8214F5A4 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x82B86600 EQ PUSH2 0x561 JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0x52FF62EC EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x593D132C EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x5FD65F0F EQ PUSH2 0x469 JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH4 0x34E19907 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x34E19907 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x3E3A1560 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x4A1B0D57 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x4D49E87D EQ PUSH2 0x399 JUMPI PUSH2 0x226 JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x419B45A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBA81959 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x31CD52B0 EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x233 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x257 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x455 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE DUP10 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE AND PUSH2 0x120 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x140 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x545 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x545 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x153E JUMP JUMPDEST PUSH2 0x28B PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x161F JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x545 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x185D JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1C57 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x1D1E JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x295 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1FA8 JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0xC ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x898 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CF PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x918 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0x24C5C751 PUSH1 0x2 PUSH2 0x93C PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH20 0x0 PUSH4 0xC9B64DCB SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP2 TIMESTAMP DUP2 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x111958591B1A5B99481B9BDD081B595D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH20 0x0 PUSH4 0x73FD6B3E SWAP1 SWAP2 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC00 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBE8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP2 POP POP PUSH1 0x1 DUP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC24 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC35 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x119F861B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x467E186C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xD47 PUSH2 0x1288 JUMP JUMPDEST ISZERO PUSH2 0xD8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x111958591B1A5B99481B9BDD081B595D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xE7A4DB81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xE7A4DB81 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP1 SSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE80 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE91 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEDA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xEE2 PUSH2 0x22A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x25A39565 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x968E5594 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xF5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFD0 PUSH2 0x1288 JUMP JUMPDEST ISZERO PUSH2 0x1015 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0x105E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x111958591B1A5B99481B9BDD081B595D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH20 0x0 PUSH4 0x40370EDF SWAP1 SWAP2 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F7 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1108 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1151 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xD2A39487 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xD2A39487 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C3 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x120C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x58FDD79B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x58FDD79B SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x12F0 DUP3 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1342 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1350 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1361 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xF967A81F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xF967A81F SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1474 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x14D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1502 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF DUP4 AND LT PUSH2 0x1589 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F7574206F662072616E6765 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x159A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15BD PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15CE PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xEE2 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1667 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1674 PUSH2 0x1288 JUMP JUMPDEST ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0x1702 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x111958591B1A5B99481B9BDD081B595D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH20 0x0 PUSH4 0x41B91C26 SWAP1 SWAP2 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179B PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17AC PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x3823393B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x70467276 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x18B2 PUSH2 0x1288 JUMP JUMPDEST ISZERO PUSH2 0x18F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP1 TIMESTAMP GT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x111958591B1A5B99481B9BDD081B595D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x529CBD91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xFF DUP1 DUP11 AND PUSH1 0x24 DUP4 ADD MSTORE DUP9 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xA5397B22 SWAP2 PUSH1 0xA4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x19C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF DUP4 AND LT PUSH2 0x1A3D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1A4E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x7254D06D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP3 PUSH20 0x0 SWAP3 PUSH4 0xE4A9A0DA SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1AE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x12C8D80F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x4B23603C SWAP2 PUSH1 0x84 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA4 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BB5 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1BFE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x455BB4BF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x8AB7697E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CB6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C6520627920706F6F6C20746F6B656E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x749296A3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xE9252D46 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D26 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D37 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x78A7108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xF14E211E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDA PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DEB PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E34 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x21C363E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x4386C7CE SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH20 0x0 PUSH4 0xB0A14CFC SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x3A311E95 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xE8C47A54 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH20 0x0 PUSH4 0x71906C2C SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH20 0x0 PUSH4 0x7D048160 SWAP1 SWAP2 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200C PUSH2 0x229E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x201D PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2066 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2436 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23EF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH20 0x0 PUSH4 0x5E58579C SWAP1 SWAP2 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x21C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2238 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x224D JUMPI POP PUSH1 0x0 PUSH2 0x1342 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x225A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2297 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2415 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x22AA PUSH2 0x1288 JUMP JUMPDEST PUSH2 0x22F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2328 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x234D PUSH2 0x1288 JUMP JUMPDEST ISZERO PUSH2 0x2392 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2328 PUSH2 0x229E JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C004F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP14 EXP 0x26 0xE2 SWAP4 MULMOD DUP3 0xBF SWAP14 SWAP3 0xAD PUSH28 0xCB3EFCD65B75BBA966786E1EAAF74C0A2B9B7A64736F6C634300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [1319, 22269],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "25": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8456CB59"
    },
    "38": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x130"
    },
    "42": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC00C125C"
    },
    "49": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDA7A77BE"
    },
    "60": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDA7A77BE"
    },
    "71": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76A"
    },
    "75": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE25AA5FA"
    },
    "82": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x790"
    },
    "86": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xEF0A712F"
    },
    "93": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x798"
    },
    "97": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "105": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7B5"
    },
    "108": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF9273FFB"
    },
    "115": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7DB"
    },
    "119": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "120": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "123": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC00C125C"
    },
    "131": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x700"
    },
    "135": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC4DB7FA0"
    },
    "142": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x72C"
    },
    "146": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD0D41FE1"
    },
    "153": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x734"
    },
    "157": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "158": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD46300FD"
    },
    "164": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "165": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x75A"
    },
    "168": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD4CADF68"
    },
    "175": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "176": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x762"
    },
    "179": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "180": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "183": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "185": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "186": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x91695586"
    },
    "191": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "192": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "196": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "197": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x91695586"
    },
    "202": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "203": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x622"
    },
    "206": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "207": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "208": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x91CEB3EB"
    },
    "213": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "214": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x65E"
    },
    "217": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "218": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "219": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x98899F40"
    },
    "224": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "225": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x67E"
    },
    "228": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "229": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA95B089F"
    },
    "235": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "236": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6B3"
    },
    "239": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "240": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "241": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAC5BF263"
    },
    "246": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "247": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6E3"
    },
    "250": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "251": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "254": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "255": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "256": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "257": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8456CB59"
    },
    "262": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "263": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x581"
    },
    "266": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "267": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "268": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x84CDD9BC"
    },
    "273": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "274": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x589"
    },
    "277": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "278": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "279": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8BEB60B6"
    },
    "284": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "285": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5FD"
    },
    "288": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "289": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "290": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "295": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "296": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x61A"
    },
    "299": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "300": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "303": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "304": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "305": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "306": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x52FF62EC"
    },
    "311": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "312": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B3"
    },
    "315": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "316": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "317": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x66C0BD24"
    },
    "322": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "323": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "327": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "328": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x66C0BD24"
    },
    "333": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "334": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4CD"
    },
    "337": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "338": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "339": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "344": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "345": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x509"
    },
    "348": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "349": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "350": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7C61E561"
    },
    "355": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "356": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x511"
    },
    "359": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "360": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "361": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8214F5A4"
    },
    "366": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "367": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x53D"
    },
    "370": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "371": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "372": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x82B86600"
    },
    "377": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "378": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x561"
    },
    "381": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "382": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "385": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "386": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "387": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "388": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x52FF62EC"
    },
    "393": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "394": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x40D"
    },
    "397": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "398": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "399": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x593D132C"
    },
    "404": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "405": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x42A"
    },
    "408": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "409": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "410": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5C975ABB"
    },
    "415": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "416": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x44D"
    },
    "419": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "420": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "421": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5FD65F0F"
    },
    "426": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "427": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x469"
    },
    "430": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "431": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "434": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "435": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "436": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "437": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x34E19907"
    },
    "442": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "GT",
      "path": "13"
    },
    "443": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FA"
    },
    "446": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "447": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "448": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x34E19907"
    },
    "453": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "454": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31C"
    },
    "457": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "458": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "459": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3E3A1560"
    },
    "464": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "465": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x339"
    },
    "468": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "469": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "470": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3F4BA83A"
    },
    "475": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "476": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x36B"
    },
    "479": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "480": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "481": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4A1B0D57"
    },
    "486": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "487": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x373"
    },
    "490": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "491": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "492": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4D49E87D"
    },
    "497": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "498": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x399"
    },
    "501": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "502": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x226"
    },
    "505": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMP",
      "path": "13"
    },
    "506": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "507": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "508": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH3",
      "path": "13",
      "value": "0x113E08"
    },
    "512": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "513": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22B"
    },
    "516": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "517": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "518": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x419B45A"
    },
    "523": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "524": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x283"
    },
    "527": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "528": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "529": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBA81959"
    },
    "534": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "535": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28D"
    },
    "538": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "539": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "540": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH4",
      "path": "13",
      "value": "0x31CD52B0"
    },
    "545": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "EQ",
      "path": "13"
    },
    "546": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A7"
    },
    "549": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPI",
      "path": "13"
    },
    "550": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "JUMPDEST",
      "path": "13"
    },
    "551": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "553": {
      "fn": null,
      "offset": [1319, 22269],
      "op": "DUP1",
      "path": "13"
    },
    "554": {
      "first_revert": true,
      "fn": null,
      "offset": [1319, 22269],
      "op": "REVERT",
      "path": "13"
    },
    "555": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPDEST",
      "path": "13"
    },
    "556": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "559": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH2",
      "path": "13",
      "value": "0x85B"
    },
    "562": {
      "fn": "Swap.getBalances",
      "jump": "i",
      "offset": [10112, 10220],
      "op": "JUMP",
      "path": "13"
    },
    "563": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPDEST",
      "path": "13"
    },
    "564": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "566": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP1",
      "path": "13"
    },
    "567": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MLOAD",
      "path": "13"
    },
    "568": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "570": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP1",
      "path": "13"
    },
    "571": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP3",
      "path": "13"
    },
    "572": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MSTORE",
      "path": "13"
    },
    "573": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "574": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MLOAD",
      "path": "13"
    },
    "575": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP2",
      "path": "13"
    },
    "576": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "577": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "578": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MSTORE",
      "path": "13"
    },
    "579": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "580": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MLOAD",
      "path": "13"
    },
    "581": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP2",
      "path": "13"
    },
    "582": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP3",
      "path": "13"
    },
    "583": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "584": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP3",
      "path": "13"
    },
    "585": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP1",
      "path": "13"
    },
    "586": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "587": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "588": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP2",
      "path": "13"
    },
    "589": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP6",
      "path": "13"
    },
    "590": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP2",
      "path": "13"
    },
    "591": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "592": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP2",
      "path": "13"
    },
    "593": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MUL",
      "path": "13"
    },
    "594": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP1",
      "path": "13"
    },
    "595": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "596": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "597": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "599": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPDEST",
      "path": "13"
    },
    "600": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "601": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP2",
      "path": "13"
    },
    "602": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "LT",
      "path": "13"
    },
    "603": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ISZERO",
      "path": "13"
    },
    "604": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH2",
      "path": "13",
      "value": "0x26F"
    },
    "607": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPI",
      "path": "13"
    },
    "608": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP2",
      "path": "13"
    },
    "609": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP2",
      "path": "13"
    },
    "610": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "611": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MLOAD",
      "path": "13"
    },
    "612": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP4",
      "path": "13"
    },
    "613": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP3",
      "path": "13"
    },
    "614": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "615": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MSTORE",
      "path": "13"
    },
    "616": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "618": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "619": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH2",
      "path": "13",
      "value": "0x257"
    },
    "622": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMP",
      "path": "13"
    },
    "623": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPDEST",
      "path": "13"
    },
    "624": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "625": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "626": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "627": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "628": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP1",
      "path": "13"
    },
    "629": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "630": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "ADD",
      "path": "13"
    },
    "631": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP3",
      "path": "13"
    },
    "632": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "633": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "634": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "POP",
      "path": "13"
    },
    "635": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "637": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "MLOAD",
      "path": "13"
    },
    "638": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "DUP1",
      "path": "13"
    },
    "639": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP2",
      "path": "13"
    },
    "640": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SUB",
      "path": "13"
    },
    "641": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP1",
      "path": "13"
    },
    "642": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "RETURN",
      "path": "13"
    },
    "643": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "JUMPDEST",
      "path": "13"
    },
    "644": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "647": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8B6"
    },
    "650": {
      "fn": "Swap.withdrawAdminFees",
      "jump": "i",
      "offset": [20152, 20255],
      "op": "JUMP",
      "path": "13"
    },
    "651": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "JUMPDEST",
      "path": "13"
    },
    "652": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "STOP",
      "path": "13"
    },
    "653": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "JUMPDEST",
      "path": "13"
    },
    "654": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "657": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "PUSH2",
      "path": "13",
      "value": "0x99A"
    },
    "660": {
      "fn": "Swap.getAPrecise",
      "jump": "i",
      "offset": [8246, 8350],
      "op": "JUMP",
      "path": "13"
    },
    "661": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "JUMPDEST",
      "path": "13"
    },
    "662": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "664": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "DUP1",
      "path": "13"
    },
    "665": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "MLOAD",
      "path": "13"
    },
    "666": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SWAP2",
      "path": "13"
    },
    "667": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "DUP3",
      "path": "13"
    },
    "668": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "MSTORE",
      "path": "13"
    },
    "669": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "MLOAD",
      "path": "13"
    },
    "670": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SWAP1",
      "path": "13"
    },
    "671": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "DUP2",
      "path": "13"
    },
    "672": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SWAP1",
      "path": "13"
    },
    "673": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SUB",
      "path": "13"
    },
    "674": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "676": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "ADD",
      "path": "13"
    },
    "677": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SWAP1",
      "path": "13"
    },
    "678": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "RETURN",
      "path": "13"
    },
    "679": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "680": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "683": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "685": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "686": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "687": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SUB",
      "path": "13"
    },
    "688": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "690": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP2",
      "path": "13"
    },
    "691": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "LT",
      "path": "13"
    },
    "692": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ISZERO",
      "path": "13"
    },
    "693": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BD"
    },
    "696": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPI",
      "path": "13"
    },
    "697": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "699": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "700": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "REVERT",
      "path": "13"
    },
    "701": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "702": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP2",
      "path": "13"
    },
    "703": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "704": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP2",
      "path": "13"
    },
    "705": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP1",
      "path": "13"
    },
    "706": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP2",
      "path": "13"
    },
    "707": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "708": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP1",
      "path": "13"
    },
    "709": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "711": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP2",
      "path": "13"
    },
    "712": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "713": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "715": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP3",
      "path": "13"
    },
    "716": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "717": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP2",
      "path": "13"
    },
    "724": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "GT",
      "path": "13"
    },
    "725": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ISZERO",
      "path": "13"
    },
    "726": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DE"
    },
    "729": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPI",
      "path": "13"
    },
    "730": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "732": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "733": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "REVERT",
      "path": "13"
    },
    "734": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "735": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP3",
      "path": "13"
    },
    "736": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "737": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP4",
      "path": "13"
    },
    "738": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "740": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP3",
      "path": "13"
    },
    "741": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "742": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "GT",
      "path": "13"
    },
    "743": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ISZERO",
      "path": "13"
    },
    "744": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F0"
    },
    "747": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPI",
      "path": "13"
    },
    "748": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "750": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "751": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "REVERT",
      "path": "13"
    },
    "752": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "753": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "754": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "755": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP1",
      "path": "13"
    },
    "756": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "758": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "759": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP2",
      "path": "13"
    },
    "760": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP5",
      "path": "13"
    },
    "761": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "763": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP4",
      "path": "13"
    },
    "764": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "MUL",
      "path": "13"
    },
    "765": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP5",
      "path": "13"
    },
    "766": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ADD",
      "path": "13"
    },
    "767": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "GT",
      "path": "13"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP4",
      "path": "13"
    },
    "774": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "GT",
      "path": "13"
    },
    "775": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "OR",
      "path": "13"
    },
    "776": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "ISZERO",
      "path": "13"
    },
    "777": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0x311"
    },
    "780": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPI",
      "path": "13"
    },
    "781": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "783": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "DUP1",
      "path": "13"
    },
    "784": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "REVERT",
      "path": "13"
    },
    "785": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "786": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP2",
      "path": "13"
    },
    "787": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP4",
      "path": "13"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP2",
      "path": "13"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "792": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA1F"
    },
    "795": {
      "fn": "Swap.removeLiquidity",
      "jump": "i",
      "offset": [17149, 17413],
      "op": "JUMP",
      "path": "13"
    },
    "796": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "JUMPDEST",
      "path": "13"
    },
    "797": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "800": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "802": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "DUP1",
      "path": "13"
    },
    "803": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "804": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "SUB",
      "path": "13"
    },
    "805": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "807": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "DUP2",
      "path": "13"
    },
    "808": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "LT",
      "path": "13"
    },
    "809": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "ISZERO",
      "path": "13"
    },
    "810": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH2",
      "path": "13",
      "value": "0x332"
    },
    "813": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "JUMPI",
      "path": "13"
    },
    "814": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "816": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "DUP1",
      "path": "13"
    },
    "817": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "REVERT",
      "path": "13"
    },
    "818": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "JUMPDEST",
      "path": "13"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "821": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC1C"
    },
    "824": {
      "fn": "Swap.setSwapFee",
      "jump": "i",
      "offset": [20701, 20811],
      "op": "JUMP",
      "path": "13"
    },
    "825": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "JUMPDEST",
      "path": "13"
    },
    "826": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "829": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "831": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP1",
      "path": "13"
    },
    "832": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "833": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "SUB",
      "path": "13"
    },
    "834": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "836": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP2",
      "path": "13"
    },
    "837": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "LT",
      "path": "13"
    },
    "838": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "ISZERO",
      "path": "13"
    },
    "839": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34F"
    },
    "842": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "JUMPI",
      "path": "13"
    },
    "843": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "845": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP1",
      "path": "13"
    },
    "846": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "REVERT",
      "path": "13"
    },
    "847": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "JUMPDEST",
      "path": "13"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP1",
      "path": "13"
    },
    "850": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "851": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "SWAP1",
      "path": "13"
    },
    "852": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "854": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "856": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP3",
      "path": "13"
    },
    "857": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "ADD",
      "path": "13"
    },
    "858": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "859": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "AND",
      "path": "13"
    },
    "860": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "SWAP1",
      "path": "13"
    },
    "861": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "863": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "DUP2",
      "path": "13"
    },
    "864": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "ADD",
      "path": "13"
    },
    "865": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "866": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "SWAP1",
      "path": "13"
    },
    "867": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "869": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "ADD",
      "path": "13"
    },
    "870": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "871": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCF2"
    },
    "874": {
      "fn": "Swap.removeLiquidityOneToken",
      "jump": "i",
      "offset": [17924, 18362],
      "op": "JUMP",
      "path": "13"
    },
    "875": {
      "fn": "OwnerPausable.unpause",
      "offset": [729, 805],
      "op": "JUMPDEST",
      "path": "12"
    },
    "876": {
      "fn": "OwnerPausable.unpause",
      "offset": [729, 805],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B"
    },
    "879": {
      "fn": "OwnerPausable.unpause",
      "offset": [729, 805],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE78"
    },
    "882": {
      "fn": "OwnerPausable.unpause",
      "jump": "i",
      "offset": [729, 805],
      "op": "JUMP",
      "path": "12"
    },
    "883": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "JUMPDEST",
      "path": "13"
    },
    "884": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "887": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "889": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "DUP1",
      "path": "13"
    },
    "890": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "891": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "SUB",
      "path": "13"
    },
    "892": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "894": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "DUP2",
      "path": "13"
    },
    "895": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "LT",
      "path": "13"
    },
    "896": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "ISZERO",
      "path": "13"
    },
    "897": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH2",
      "path": "13",
      "value": "0x389"
    },
    "900": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "JUMPI",
      "path": "13"
    },
    "901": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "903": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "DUP1",
      "path": "13"
    },
    "904": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "REVERT",
      "path": "13"
    },
    "905": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "JUMPDEST",
      "path": "13"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "AND",
      "path": "13"
    },
    "917": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEE4"
    },
    "920": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "jump": "i",
      "offset": [14486, 14666],
      "op": "JUMP",
      "path": "13"
    },
    "921": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "922": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "925": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "927": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "928": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "929": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SUB",
      "path": "13"
    },
    "930": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "932": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP2",
      "path": "13"
    },
    "933": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "LT",
      "path": "13"
    },
    "934": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ISZERO",
      "path": "13"
    },
    "935": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3AF"
    },
    "938": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPI",
      "path": "13"
    },
    "939": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "941": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "942": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "REVERT",
      "path": "13"
    },
    "943": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "944": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP2",
      "path": "13"
    },
    "945": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "946": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP1",
      "path": "13"
    },
    "947": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "949": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP2",
      "path": "13"
    },
    "950": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "951": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP2",
      "path": "13"
    },
    "952": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP2",
      "path": "13"
    },
    "959": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "GT",
      "path": "13"
    },
    "960": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ISZERO",
      "path": "13"
    },
    "961": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3C9"
    },
    "964": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPI",
      "path": "13"
    },
    "965": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "967": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "968": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "REVERT",
      "path": "13"
    },
    "969": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "970": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP3",
      "path": "13"
    },
    "971": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "972": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP4",
      "path": "13"
    },
    "973": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "975": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP3",
      "path": "13"
    },
    "976": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "977": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "GT",
      "path": "13"
    },
    "978": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ISZERO",
      "path": "13"
    },
    "979": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3DB"
    },
    "982": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPI",
      "path": "13"
    },
    "983": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "985": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "986": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "REVERT",
      "path": "13"
    },
    "987": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "988": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "989": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "990": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP1",
      "path": "13"
    },
    "991": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "993": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "994": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP2",
      "path": "13"
    },
    "995": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP5",
      "path": "13"
    },
    "996": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "998": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP4",
      "path": "13"
    },
    "999": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "MUL",
      "path": "13"
    },
    "1000": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP5",
      "path": "13"
    },
    "1001": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "1002": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "GT",
      "path": "13"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP4",
      "path": "13"
    },
    "1009": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "GT",
      "path": "13"
    },
    "1010": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "OR",
      "path": "13"
    },
    "1011": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ISZERO",
      "path": "13"
    },
    "1012": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3FC"
    },
    "1015": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPI",
      "path": "13"
    },
    "1016": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1018": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "1019": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "REVERT",
      "path": "13"
    },
    "1020": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1021": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP2",
      "path": "13"
    },
    "1022": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP4",
      "path": "13"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP2",
      "path": "13"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "DUP1",
      "path": "13"
    },
    "1027": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1028": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "SWAP1",
      "path": "13"
    },
    "1029": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1031": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "ADD",
      "path": "13"
    },
    "1032": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1033": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF7B"
    },
    "1036": {
      "fn": "Swap.addLiquidity",
      "jump": "i",
      "offset": [16270, 16577],
      "op": "JUMP",
      "path": "13"
    },
    "1037": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1038": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1041": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1043": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "DUP1",
      "path": "13"
    },
    "1044": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1045": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "SUB",
      "path": "13"
    },
    "1046": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1048": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "DUP2",
      "path": "13"
    },
    "1049": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "LT",
      "path": "13"
    },
    "1050": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "ISZERO",
      "path": "13"
    },
    "1051": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH2",
      "path": "13",
      "value": "0x423"
    },
    "1054": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "JUMPI",
      "path": "13"
    },
    "1055": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1057": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "DUP1",
      "path": "13"
    },
    "1058": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "REVERT",
      "path": "13"
    },
    "1059": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1062": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10EF"
    },
    "1065": {
      "fn": "Swap.setDefaultDepositFee",
      "jump": "i",
      "offset": [20954, 21090],
      "op": "JUMP",
      "path": "13"
    },
    "1066": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1067": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1070": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1072": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "DUP1",
      "path": "13"
    },
    "1073": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1074": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "SUB",
      "path": "13"
    },
    "1075": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1077": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "DUP2",
      "path": "13"
    },
    "1078": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "LT",
      "path": "13"
    },
    "1079": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "ISZERO",
      "path": "13"
    },
    "1080": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH2",
      "path": "13",
      "value": "0x440"
    },
    "1083": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "JUMPI",
      "path": "13"
    },
    "1084": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1086": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "DUP1",
      "path": "13"
    },
    "1087": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "REVERT",
      "path": "13"
    },
    "1088": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "DUP1",
      "path": "13"
    },
    "1091": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1092": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "SWAP1",
      "path": "13"
    },
    "1093": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1095": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "ADD",
      "path": "13"
    },
    "1096": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1097": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11AA"
    },
    "1100": {
      "fn": "Swap.rampA",
      "jump": "i",
      "offset": [21789, 21915],
      "op": "JUMP",
      "path": "13"
    },
    "1101": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1102": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "PUSH2",
      "path": "8",
      "value": "0x455"
    },
    "1105": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "1108": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [1052, 1136],
      "op": "JUMP",
      "path": "8"
    },
    "1109": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1110": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1112": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "DUP1",
      "path": "8"
    },
    "1113": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "MLOAD",
      "path": "8"
    },
    "1114": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "SWAP2",
      "path": "8"
    },
    "1115": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "ISZERO",
      "path": "8"
    },
    "1116": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "ISZERO",
      "path": "8"
    },
    "1117": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "DUP3",
      "path": "8"
    },
    "1118": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "MSTORE",
      "path": "8"
    },
    "1119": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "MLOAD",
      "path": "8"
    },
    "1120": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "SWAP1",
      "path": "8"
    },
    "1121": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "DUP2",
      "path": "8"
    },
    "1122": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "SWAP1",
      "path": "8"
    },
    "1123": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "SUB",
      "path": "8"
    },
    "1124": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1126": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "ADD",
      "path": "8"
    },
    "1127": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "SWAP1",
      "path": "8"
    },
    "1128": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "RETURN",
      "path": "8"
    },
    "1129": {
      "offset": [1705, 1738],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1130": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH2",
      "path": "13",
      "value": "0x471"
    },
    "1133": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1298"
    },
    "1136": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [1705, 1738],
      "op": "JUMP",
      "path": "13"
    },
    "1137": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1138": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1140": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP1",
      "path": "13"
    },
    "1141": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MLOAD",
      "path": "13"
    },
    "1142": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP11",
      "path": "13"
    },
    "1143": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP12",
      "path": "13"
    },
    "1144": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1145": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1147": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP12",
      "path": "13"
    },
    "1148": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1149": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP10",
      "path": "13"
    },
    "1150": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1151": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP10",
      "path": "13"
    },
    "1152": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1153": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP10",
      "path": "13"
    },
    "1154": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP10",
      "path": "13"
    },
    "1155": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1156": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP8",
      "path": "13"
    },
    "1157": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1158": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP8",
      "path": "13"
    },
    "1159": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1160": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1162": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP10",
      "path": "13"
    },
    "1163": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1164": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP6",
      "path": "13"
    },
    "1165": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1166": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP6",
      "path": "13"
    },
    "1167": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1168": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1170": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP9",
      "path": "13"
    },
    "1171": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1172": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP4",
      "path": "13"
    },
    "1173": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1174": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP4",
      "path": "13"
    },
    "1175": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1176": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "1178": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP8",
      "path": "13"
    },
    "1179": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1180": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP2",
      "path": "13"
    },
    "1181": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1182": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP2",
      "path": "13"
    },
    "1183": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1184": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "1186": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP7",
      "path": "13"
    },
    "1187": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1188": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1189": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "1191": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP6",
      "path": "13"
    },
    "1192": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1193": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "SUB"
    },
    "1202": {
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1203": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP2",
      "path": "13"
    },
    "1204": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "AND",
      "path": "13"
    },
    "1205": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1208": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP6",
      "path": "13"
    },
    "1209": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1210": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1211": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "AND",
      "path": "13"
    },
    "1212": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH2",
      "path": "13",
      "value": "0x120"
    },
    "1215": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP4",
      "path": "13"
    },
    "1216": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1217": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MSTORE",
      "path": "13"
    },
    "1218": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "MLOAD",
      "path": "13"
    },
    "1219": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1220": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP2",
      "path": "13"
    },
    "1221": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1222": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SUB",
      "path": "13"
    },
    "1223": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH2",
      "path": "13",
      "value": "0x140"
    },
    "1226": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "ADD",
      "path": "13"
    },
    "1227": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP1",
      "path": "13"
    },
    "1228": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "RETURN",
      "path": "13"
    },
    "1229": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1230": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4F3"
    },
    "1233": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1235": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP1",
      "path": "13"
    },
    "1236": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1237": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SUB",
      "path": "13"
    },
    "1238": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1240": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP2",
      "path": "13"
    },
    "1241": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "LT",
      "path": "13"
    },
    "1242": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "ISZERO",
      "path": "13"
    },
    "1243": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4E3"
    },
    "1246": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "JUMPI",
      "path": "13"
    },
    "1247": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1249": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP1",
      "path": "13"
    },
    "1250": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "REVERT",
      "path": "13"
    },
    "1251": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "AND",
      "path": "13"
    },
    "1263": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12C6"
    },
    "1266": {
      "fn": "Swap.getTokenIndex",
      "jump": "i",
      "offset": [8988, 9259],
      "op": "JUMP",
      "path": "13"
    },
    "1267": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1268": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1270": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP1",
      "path": "13"
    },
    "1271": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "MLOAD",
      "path": "13"
    },
    "1272": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1274": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP1",
      "path": "13"
    },
    "1275": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP3",
      "path": "13"
    },
    "1276": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "AND",
      "path": "13"
    },
    "1277": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP3",
      "path": "13"
    },
    "1278": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "MSTORE",
      "path": "13"
    },
    "1279": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "MLOAD",
      "path": "13"
    },
    "1280": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP1",
      "path": "13"
    },
    "1281": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "DUP2",
      "path": "13"
    },
    "1282": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP1",
      "path": "13"
    },
    "1283": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SUB",
      "path": "13"
    },
    "1284": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1286": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "ADD",
      "path": "13"
    },
    "1287": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP1",
      "path": "13"
    },
    "1288": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "RETURN",
      "path": "13"
    },
    "1289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B"
    },
    "1293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1348"
    },
    "1296": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1717, 1862],
      "op": "JUMP",
      "path": "0"
    },
    "1297": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1298": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "1301": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1303": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "DUP1",
      "path": "13"
    },
    "1304": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1305": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "SUB",
      "path": "13"
    },
    "1306": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1308": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "DUP2",
      "path": "13"
    },
    "1309": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "LT",
      "path": "13"
    },
    "1310": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "ISZERO",
      "path": "13"
    },
    "1311": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH2",
      "path": "13",
      "value": "0x527"
    },
    "1314": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "JUMPI",
      "path": "13"
    },
    "1315": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1317": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "DUP1",
      "path": "13"
    },
    "1318": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "REVERT",
      "path": "13"
    },
    "1319": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "DUP2",
      "path": "13"
    },
    "1330": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1331": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "AND",
      "path": "13"
    },
    "1332": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "SWAP1",
      "path": "13"
    },
    "1333": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1335": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "ADD",
      "path": "13"
    },
    "1336": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1337": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13F4"
    },
    "1340": {
      "fn": "Swap.calculateRemoveLiquidity",
      "jump": "i",
      "offset": [12946, 13159],
      "op": "JUMP",
      "path": "13"
    },
    "1341": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1342": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "PUSH2",
      "path": "13",
      "value": "0x545"
    },
    "1345": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "PUSH2",
      "path": "13",
      "value": "0x152F"
    },
    "1348": {
      "fn": "Swap.getLpToken",
      "jump": "i",
      "offset": [10515, 10623],
      "op": "JUMP",
      "path": "13"
    },
    "1349": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1350": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1352": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "DUP1",
      "path": "13"
    },
    "1353": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "MLOAD",
      "path": "13"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "SUB"
    },
    "1362": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP1",
      "path": "13"
    },
    "1363": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP3",
      "path": "13"
    },
    "1364": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "AND",
      "path": "13"
    },
    "1365": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "DUP3",
      "path": "13"
    },
    "1366": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "MSTORE",
      "path": "13"
    },
    "1367": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "MLOAD",
      "path": "13"
    },
    "1368": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP1",
      "path": "13"
    },
    "1369": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "DUP2",
      "path": "13"
    },
    "1370": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP1",
      "path": "13"
    },
    "1371": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SUB",
      "path": "13"
    },
    "1372": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1374": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "ADD",
      "path": "13"
    },
    "1375": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP1",
      "path": "13"
    },
    "1376": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "RETURN",
      "path": "13"
    },
    "1377": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1378": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH2",
      "path": "13",
      "value": "0x545"
    },
    "1381": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1383": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "DUP1",
      "path": "13"
    },
    "1384": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1385": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "SUB",
      "path": "13"
    },
    "1386": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1388": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "DUP2",
      "path": "13"
    },
    "1389": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "LT",
      "path": "13"
    },
    "1390": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "ISZERO",
      "path": "13"
    },
    "1391": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH2",
      "path": "13",
      "value": "0x577"
    },
    "1394": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "JUMPI",
      "path": "13"
    },
    "1395": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1397": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "DUP1",
      "path": "13"
    },
    "1398": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "REVERT",
      "path": "13"
    },
    "1399": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1402": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1404": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "AND",
      "path": "13"
    },
    "1405": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "PUSH2",
      "path": "13",
      "value": "0x153E"
    },
    "1408": {
      "fn": "Swap.getToken",
      "jump": "i",
      "offset": [8571, 8760],
      "op": "JUMP",
      "path": "13"
    },
    "1409": {
      "fn": "OwnerPausable.pause",
      "offset": [565, 637],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1410": {
      "fn": "OwnerPausable.pause",
      "offset": [565, 637],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28B"
    },
    "1413": {
      "fn": "OwnerPausable.pause",
      "offset": [565, 637],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B5"
    },
    "1416": {
      "fn": "OwnerPausable.pause",
      "jump": "i",
      "offset": [565, 637],
      "op": "JUMP",
      "path": "12"
    },
    "1417": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1418": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1421": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1423": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1424": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1425": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SUB",
      "path": "13"
    },
    "1426": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1428": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP2",
      "path": "13"
    },
    "1429": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "LT",
      "path": "13"
    },
    "1430": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ISZERO",
      "path": "13"
    },
    "1431": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x59F"
    },
    "1434": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPI",
      "path": "13"
    },
    "1435": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1437": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1438": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "REVERT",
      "path": "13"
    },
    "1439": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1440": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP2",
      "path": "13"
    },
    "1441": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1442": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP1",
      "path": "13"
    },
    "1443": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1445": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP2",
      "path": "13"
    },
    "1446": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1447": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP2",
      "path": "13"
    },
    "1448": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP2",
      "path": "13"
    },
    "1455": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "GT",
      "path": "13"
    },
    "1456": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ISZERO",
      "path": "13"
    },
    "1457": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPI",
      "path": "13"
    },
    "1461": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1463": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1464": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "REVERT",
      "path": "13"
    },
    "1465": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1466": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP3",
      "path": "13"
    },
    "1467": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1468": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP4",
      "path": "13"
    },
    "1469": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1471": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP3",
      "path": "13"
    },
    "1472": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1473": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "GT",
      "path": "13"
    },
    "1474": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ISZERO",
      "path": "13"
    },
    "1475": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5CB"
    },
    "1478": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPI",
      "path": "13"
    },
    "1479": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1481": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1482": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "REVERT",
      "path": "13"
    },
    "1483": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1484": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1485": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1486": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP1",
      "path": "13"
    },
    "1487": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1489": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1490": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP2",
      "path": "13"
    },
    "1491": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP5",
      "path": "13"
    },
    "1492": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1494": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP4",
      "path": "13"
    },
    "1495": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "MUL",
      "path": "13"
    },
    "1496": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP5",
      "path": "13"
    },
    "1497": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1498": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "GT",
      "path": "13"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP4",
      "path": "13"
    },
    "1505": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "GT",
      "path": "13"
    },
    "1506": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "OR",
      "path": "13"
    },
    "1507": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ISZERO",
      "path": "13"
    },
    "1508": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPI",
      "path": "13"
    },
    "1512": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1514": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1515": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "REVERT",
      "path": "13"
    },
    "1516": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1517": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP2",
      "path": "13"
    },
    "1518": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP4",
      "path": "13"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP2",
      "path": "13"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "DUP1",
      "path": "13"
    },
    "1523": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1524": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "SWAP1",
      "path": "13"
    },
    "1525": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1527": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "ADD",
      "path": "13"
    },
    "1528": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1529": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "PUSH2",
      "path": "13",
      "value": "0x161F"
    },
    "1532": {
      "fn": "Swap.removeLiquidityImbalance",
      "jump": "i",
      "offset": [18892, 19231],
      "op": "JUMP",
      "path": "13"
    },
    "1533": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1534": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1537": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1539": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "DUP1",
      "path": "13"
    },
    "1540": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1541": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "SUB",
      "path": "13"
    },
    "1542": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1544": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "DUP2",
      "path": "13"
    },
    "1545": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "LT",
      "path": "13"
    },
    "1546": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "ISZERO",
      "path": "13"
    },
    "1547": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH2",
      "path": "13",
      "value": "0x613"
    },
    "1550": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "JUMPI",
      "path": "13"
    },
    "1551": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1553": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "DUP1",
      "path": "13"
    },
    "1554": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "REVERT",
      "path": "13"
    },
    "1555": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1558": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1793"
    },
    "1561": {
      "fn": "Swap.setAdminFee",
      "jump": "i",
      "offset": [20432, 20546],
      "op": "JUMP",
      "path": "13"
    },
    "1562": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1563": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "PUSH2",
      "path": "0",
      "value": "0x545"
    },
    "1566": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "1569": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1085, 1170],
      "op": "JUMP",
      "path": "0"
    },
    "1570": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1571": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1574": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1576": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP1",
      "path": "13"
    },
    "1577": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1578": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SUB",
      "path": "13"
    },
    "1579": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "1581": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1582": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "LT",
      "path": "13"
    },
    "1583": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "ISZERO",
      "path": "13"
    },
    "1584": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH2",
      "path": "13",
      "value": "0x638"
    },
    "1587": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "JUMPI",
      "path": "13"
    },
    "1588": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1590": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP1",
      "path": "13"
    },
    "1591": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "REVERT",
      "path": "13"
    },
    "1592": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1596": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1597": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1598": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1599": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "AND",
      "path": "13"
    },
    "1600": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP2",
      "path": "13"
    },
    "1601": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1603": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1604": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "ADD",
      "path": "13"
    },
    "1605": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1606": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP1",
      "path": "13"
    },
    "1607": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP2",
      "path": "13"
    },
    "1608": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "AND",
      "path": "13"
    },
    "1609": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP1",
      "path": "13"
    },
    "1610": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1612": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1613": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "ADD",
      "path": "13"
    },
    "1614": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1615": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP1",
      "path": "13"
    },
    "1616": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1618": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "DUP2",
      "path": "13"
    },
    "1619": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "ADD",
      "path": "13"
    },
    "1620": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1621": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP1",
      "path": "13"
    },
    "1622": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1624": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "ADD",
      "path": "13"
    },
    "1625": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1626": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "PUSH2",
      "path": "13",
      "value": "0x185D"
    },
    "1629": {
      "fn": "Swap.swap",
      "jump": "i",
      "offset": [15479, 15829],
      "op": "JUMP",
      "path": "13"
    },
    "1630": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1631": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1634": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1636": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "DUP1",
      "path": "13"
    },
    "1637": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1638": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "SUB",
      "path": "13"
    },
    "1639": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1641": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "DUP2",
      "path": "13"
    },
    "1642": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "LT",
      "path": "13"
    },
    "1643": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "ISZERO",
      "path": "13"
    },
    "1644": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH2",
      "path": "13",
      "value": "0x674"
    },
    "1647": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "JUMPI",
      "path": "13"
    },
    "1648": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1650": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "DUP1",
      "path": "13"
    },
    "1651": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "REVERT",
      "path": "13"
    },
    "1652": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1655": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1657": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "AND",
      "path": "13"
    },
    "1658": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19EC"
    },
    "1661": {
      "fn": "Swap.getTokenBalance",
      "jump": "i",
      "offset": [9787, 9988],
      "op": "JUMP",
      "path": "13"
    },
    "1662": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1663": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1666": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1668": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "DUP1",
      "path": "13"
    },
    "1669": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1670": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "SUB",
      "path": "13"
    },
    "1671": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1673": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "DUP2",
      "path": "13"
    },
    "1674": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "LT",
      "path": "13"
    },
    "1675": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "ISZERO",
      "path": "13"
    },
    "1676": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH2",
      "path": "13",
      "value": "0x694"
    },
    "1679": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "JUMPI",
      "path": "13"
    },
    "1680": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1682": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "DUP1",
      "path": "13"
    },
    "1683": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "REVERT",
      "path": "13"
    },
    "1684": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "DUP1",
      "path": "13"
    },
    "1687": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "AND",
      "path": "13"
    },
    "1697": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "SWAP1",
      "path": "13"
    },
    "1698": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1700": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "DUP2",
      "path": "13"
    },
    "1701": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "ADD",
      "path": "13"
    },
    "1702": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1703": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "SWAP1",
      "path": "13"
    },
    "1704": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1706": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "ADD",
      "path": "13"
    },
    "1707": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1708": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1710": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "AND",
      "path": "13"
    },
    "1711": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A60"
    },
    "1714": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "jump": "i",
      "offset": [13590, 13932],
      "op": "JUMP",
      "path": "13"
    },
    "1715": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1716": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1719": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1721": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP1",
      "path": "13"
    },
    "1722": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1723": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "SUB",
      "path": "13"
    },
    "1724": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1726": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP2",
      "path": "13"
    },
    "1727": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "LT",
      "path": "13"
    },
    "1728": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "ISZERO",
      "path": "13"
    },
    "1729": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6C9"
    },
    "1732": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "JUMPI",
      "path": "13"
    },
    "1733": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1735": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP1",
      "path": "13"
    },
    "1736": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "REVERT",
      "path": "13"
    },
    "1737": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1741": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP2",
      "path": "13"
    },
    "1742": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1743": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP2",
      "path": "13"
    },
    "1744": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "AND",
      "path": "13"
    },
    "1745": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "SWAP2",
      "path": "13"
    },
    "1746": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1748": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "DUP2",
      "path": "13"
    },
    "1749": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "ADD",
      "path": "13"
    },
    "1750": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1751": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "SWAP1",
      "path": "13"
    },
    "1752": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "SWAP2",
      "path": "13"
    },
    "1753": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "AND",
      "path": "13"
    },
    "1754": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "SWAP1",
      "path": "13"
    },
    "1755": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1757": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "ADD",
      "path": "13"
    },
    "1758": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1759": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B04"
    },
    "1762": {
      "fn": "Swap.calculateSwap",
      "jump": "i",
      "offset": [11313, 11535],
      "op": "JUMP",
      "path": "13"
    },
    "1763": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1764": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1767": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1769": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "DUP1",
      "path": "13"
    },
    "1770": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1771": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "SUB",
      "path": "13"
    },
    "1772": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1774": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "DUP2",
      "path": "13"
    },
    "1775": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "LT",
      "path": "13"
    },
    "1776": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "ISZERO",
      "path": "13"
    },
    "1777": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "JUMPI",
      "path": "13"
    },
    "1781": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1783": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "DUP1",
      "path": "13"
    },
    "1784": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "REVERT",
      "path": "13"
    },
    "1785": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1788": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B9C"
    },
    "1791": {
      "fn": "Swap.setDefaultWithdrawFee",
      "jump": "i",
      "offset": [21303, 21443],
      "op": "JUMP",
      "path": "13"
    },
    "1792": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1793": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1796": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1798": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "DUP1",
      "path": "13"
    },
    "1799": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1800": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "SUB",
      "path": "13"
    },
    "1801": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1803": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "DUP2",
      "path": "13"
    },
    "1804": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "LT",
      "path": "13"
    },
    "1805": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "ISZERO",
      "path": "13"
    },
    "1806": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH2",
      "path": "13",
      "value": "0x716"
    },
    "1809": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "JUMPI",
      "path": "13"
    },
    "1810": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1812": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "DUP1",
      "path": "13"
    },
    "1813": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "REVERT",
      "path": "13"
    },
    "1814": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "DUP2",
      "path": "13"
    },
    "1825": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1826": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "AND",
      "path": "13"
    },
    "1827": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "SWAP1",
      "path": "13"
    },
    "1828": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1830": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "ADD",
      "path": "13"
    },
    "1831": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1832": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C57"
    },
    "1835": {
      "fn": "Swap.updateUserWithdrawFee",
      "jump": "i",
      "offset": [19771, 20069],
      "op": "JUMP",
      "path": "13"
    },
    "1836": {
      "fn": "Swap.stopRampA",
      "offset": [22018, 22098],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1837": {
      "fn": "Swap.stopRampA",
      "offset": [22018, 22098],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1840": {
      "fn": "Swap.stopRampA",
      "offset": [22018, 22098],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D1E"
    },
    "1843": {
      "fn": "Swap.stopRampA",
      "jump": "i",
      "offset": [22018, 22098],
      "op": "JUMP",
      "path": "13"
    },
    "1844": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1845": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "1848": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1850": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "DUP1",
      "path": "13"
    },
    "1851": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1852": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "SUB",
      "path": "13"
    },
    "1853": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1855": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "DUP2",
      "path": "13"
    },
    "1856": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "LT",
      "path": "13"
    },
    "1857": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "ISZERO",
      "path": "13"
    },
    "1858": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH2",
      "path": "13",
      "value": "0x74A"
    },
    "1861": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "JUMPI",
      "path": "13"
    },
    "1862": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1864": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "DUP1",
      "path": "13"
    },
    "1865": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "REVERT",
      "path": "13"
    },
    "1866": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "AND",
      "path": "13"
    },
    "1878": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1DD2"
    },
    "1881": {
      "fn": "Swap.setDevAddress",
      "jump": "i",
      "offset": [22155, 22267],
      "op": "JUMP",
      "path": "13"
    },
    "1882": {
      "fn": "Swap.getA",
      "offset": [7982, 8072],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1883": {
      "fn": "Swap.getA",
      "offset": [7982, 8072],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1886": {
      "fn": "Swap.getA",
      "offset": [7982, 8072],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E95"
    },
    "1889": {
      "fn": "Swap.getA",
      "jump": "i",
      "offset": [7982, 8072],
      "op": "JUMP",
      "path": "13"
    },
    "1890": {
      "fn": "Swap.getSwapFee",
      "offset": [10313, 10412],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1891": {
      "fn": "Swap.getSwapFee",
      "offset": [10313, 10412],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1894": {
      "fn": "Swap.getSwapFee",
      "offset": [10313, 10412],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EE9"
    },
    "1897": {
      "fn": "Swap.getSwapFee",
      "jump": "i",
      "offset": [10313, 10412],
      "op": "JUMP",
      "path": "13"
    },
    "1898": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1899": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1902": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1904": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "DUP1",
      "path": "13"
    },
    "1905": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1906": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "SUB",
      "path": "13"
    },
    "1907": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1909": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "DUP2",
      "path": "13"
    },
    "1910": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "LT",
      "path": "13"
    },
    "1911": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "ISZERO",
      "path": "13"
    },
    "1912": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH2",
      "path": "13",
      "value": "0x780"
    },
    "1915": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "JUMPI",
      "path": "13"
    },
    "1916": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1918": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "DUP1",
      "path": "13"
    },
    "1919": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "REVERT",
      "path": "13"
    },
    "1920": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "AND",
      "path": "13"
    },
    "1932": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EEF"
    },
    "1935": {
      "fn": "Swap.getDepositTimestamp",
      "jump": "i",
      "offset": [9417, 9553],
      "op": "JUMP",
      "path": "13"
    },
    "1936": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10780, 10892],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1937": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10780, 10892],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1940": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10780, 10892],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F54"
    },
    "1943": {
      "fn": "Swap.getVirtualPrice",
      "jump": "i",
      "offset": [10780, 10892],
      "op": "JUMP",
      "path": "13"
    },
    "1944": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1945": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "1948": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1950": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "DUP1",
      "path": "13"
    },
    "1951": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1952": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "SUB",
      "path": "13"
    },
    "1953": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1955": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "DUP2",
      "path": "13"
    },
    "1956": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "LT",
      "path": "13"
    },
    "1957": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "ISZERO",
      "path": "13"
    },
    "1958": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7AE"
    },
    "1961": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "JUMPI",
      "path": "13"
    },
    "1962": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1964": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "DUP1",
      "path": "13"
    },
    "1965": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "REVERT",
      "path": "13"
    },
    "1966": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "1969": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FA8"
    },
    "1972": {
      "fn": "Swap.getAdminBalance",
      "jump": "i",
      "offset": [14898, 15028],
      "op": "JUMP",
      "path": "13"
    },
    "1973": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1974": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B"
    },
    "1977": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1979": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP1",
      "path": "0"
    },
    "1980": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1981": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "SUB",
      "path": "0"
    },
    "1982": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1984": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP2",
      "path": "0"
    },
    "1985": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "LT",
      "path": "0"
    },
    "1986": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "ISZERO",
      "path": "0"
    },
    "1987": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "1990": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPI",
      "path": "0"
    },
    "1991": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1993": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP1",
      "path": "0"
    },
    "1994": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "REVERT",
      "path": "0"
    },
    "1995": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2004": {
      "op": "SHL"
    },
    "2005": {
      "op": "SUB"
    },
    "2006": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "AND",
      "path": "0"
    },
    "2007": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2004"
    },
    "2010": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2011, 2251],
      "op": "JUMP",
      "path": "0"
    },
    "2011": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2012": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "2015": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2017": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2018": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "2019": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SUB",
      "path": "13"
    },
    "2020": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2022": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP2",
      "path": "13"
    },
    "2023": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "LT",
      "path": "13"
    },
    "2024": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2025": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7F1"
    },
    "2028": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPI",
      "path": "13"
    },
    "2029": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2031": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2032": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "REVERT",
      "path": "13"
    },
    "2033": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP3",
      "path": "13"
    },
    "2043": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "2044": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "AND",
      "path": "13"
    },
    "2045": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP2",
      "path": "13"
    },
    "2046": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP1",
      "path": "13"
    },
    "2047": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP2",
      "path": "13"
    },
    "2048": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2049": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP1",
      "path": "13"
    },
    "2050": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2052": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP2",
      "path": "13"
    },
    "2053": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2054": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2056": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP3",
      "path": "13"
    },
    "2057": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2058": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP2",
      "path": "13"
    },
    "2065": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "GT",
      "path": "13"
    },
    "2066": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2067": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x81B"
    },
    "2070": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPI",
      "path": "13"
    },
    "2071": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2073": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2074": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "REVERT",
      "path": "13"
    },
    "2075": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2076": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP3",
      "path": "13"
    },
    "2077": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2078": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP4",
      "path": "13"
    },
    "2079": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2081": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP3",
      "path": "13"
    },
    "2082": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2083": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "GT",
      "path": "13"
    },
    "2084": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2085": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x82D"
    },
    "2088": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPI",
      "path": "13"
    },
    "2089": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2091": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2092": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "REVERT",
      "path": "13"
    },
    "2093": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2094": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2095": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "2096": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP1",
      "path": "13"
    },
    "2097": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2099": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2100": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP2",
      "path": "13"
    },
    "2101": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP5",
      "path": "13"
    },
    "2102": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2104": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP4",
      "path": "13"
    },
    "2105": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "MUL",
      "path": "13"
    },
    "2106": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP5",
      "path": "13"
    },
    "2107": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ADD",
      "path": "13"
    },
    "2108": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "GT",
      "path": "13"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP4",
      "path": "13"
    },
    "2115": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "GT",
      "path": "13"
    },
    "2116": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "OR",
      "path": "13"
    },
    "2117": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2118": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84E"
    },
    "2121": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPI",
      "path": "13"
    },
    "2122": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2124": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "DUP1",
      "path": "13"
    },
    "2125": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "REVERT",
      "path": "13"
    },
    "2126": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2127": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP2",
      "path": "13"
    },
    "2128": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP4",
      "path": "13"
    },
    "2129": {
      "op": "POP"
    },
    "2130": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP2",
      "path": "13"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "2133": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2134": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "ISZERO",
      "path": "13"
    },
    "2135": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2106"
    },
    "2138": {
      "fn": "Swap.calculateTokenAmount",
      "jump": "i",
      "offset": [12343, 12577],
      "op": "JUMP",
      "path": "13"
    },
    "2139": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2140": {
      "fn": "Swap.getBalances",
      "offset": [10158, 10174],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2142": {
      "fn": "Swap.getBalances",
      "offset": [10193, 10204],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x2"
    },
    "2144": {
      "fn": "Swap.getBalances",
      "offset": [10193, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC"
    },
    "2146": {
      "fn": "Swap.getBalances",
      "offset": [10193, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2147": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2148": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SLOAD",
      "path": "13"
    },
    "2149": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2150": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2152": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MUL",
      "path": "13"
    },
    "2153": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2155": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2156": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2158": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MLOAD",
      "path": "13"
    },
    "2159": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2160": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP2",
      "path": "13"
    },
    "2161": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2162": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2164": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MSTORE",
      "path": "13"
    },
    "2165": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2166": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP3",
      "path": "13"
    },
    "2167": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP2",
      "path": "13"
    },
    "2168": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2169": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP2",
      "path": "13"
    },
    "2170": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP2",
      "path": "13"
    },
    "2171": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MSTORE",
      "path": "13"
    },
    "2172": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2174": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2175": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP3",
      "path": "13"
    },
    "2176": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2177": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SLOAD",
      "path": "13"
    },
    "2178": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2179": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ISZERO",
      "path": "13"
    },
    "2180": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AC"
    },
    "2183": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "JUMPI",
      "path": "13"
    },
    "2184": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2186": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MUL",
      "path": "13"
    },
    "2187": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP3",
      "path": "13"
    },
    "2188": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2189": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP2",
      "path": "13"
    },
    "2190": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2191": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2193": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MSTORE",
      "path": "13"
    },
    "2194": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2196": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2198": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "KECCAK256",
      "path": "13"
    },
    "2199": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2200": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2201": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP2",
      "path": "13"
    },
    "2202": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SLOAD",
      "path": "13"
    },
    "2203": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP2",
      "path": "13"
    },
    "2204": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "MSTORE",
      "path": "13"
    },
    "2205": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2207": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2208": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2209": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2211": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "ADD",
      "path": "13"
    },
    "2212": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2213": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP1",
      "path": "13"
    },
    "2214": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "DUP4",
      "path": "13"
    },
    "2215": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "GT",
      "path": "13"
    },
    "2216": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "PUSH2",
      "path": "13",
      "value": "0x898"
    },
    "2219": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "JUMPI",
      "path": "13"
    },
    "2220": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2221": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2222": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2223": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2224": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2225": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2226": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "SWAP1",
      "path": "13"
    },
    "2227": {
      "fn": "Swap.getBalances",
      "offset": [10186, 10213],
      "op": "POP",
      "path": "13"
    },
    "2228": {
      "fn": "Swap.getBalances",
      "offset": [10112, 10220],
      "op": "SWAP1",
      "path": "13"
    },
    "2229": {
      "fn": "Swap.getBalances",
      "jump": "o",
      "offset": [10112, 10220],
      "op": "JUMP",
      "path": "13"
    },
    "2230": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20152, 20255],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2231": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BE"
    },
    "2234": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "2237": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "2238": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "op": "SUB"
    },
    "2247": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "2248": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CF"
    },
    "2251": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "2254": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "2255": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "2265": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "2266": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x918"
    },
    "2269": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "2270": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2272": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "2273": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "2274": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2282": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2283": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2285": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2287": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2288": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2289": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2290": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2291": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2292": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2294": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2295": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2296": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2299": {
      "op": "DUP1"
    },
    "2300": {
      "op": "MLOAD"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2303": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "2306": {
      "op": "DUP4"
    },
    "2307": {
      "op": "CODECOPY"
    },
    "2308": {
      "op": "DUP2"
    },
    "2309": {
      "op": "MLOAD"
    },
    "2310": {
      "op": "SWAP2"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2314": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2315": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2316": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2317": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2318": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "2319": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2320": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2321": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2322": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "2323": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2325": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2326": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2327": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "2328": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2329": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20239],
      "op": "PUSH20",
      "path": "13",
      "statement": 1,
      "value": "0x0"
    },
    "2350": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20239],
      "op": "PUSH4",
      "path": "13",
      "value": "0x24C5C751"
    },
    "2355": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20221],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2357": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20240, 20247],
      "op": "PUSH2",
      "path": "13",
      "value": "0x93C"
    },
    "2360": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20240, 20245],
      "op": "PUSH2",
      "path": "13",
      "value": "0x184E"
    },
    "2363": {
      "fn": "Swap.withdrawAdminFees",
      "jump": "i",
      "offset": [20240, 20247],
      "op": "JUMP",
      "path": "13"
    },
    "2364": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20240, 20247],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2365": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2367": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "MLOAD",
      "path": "13"
    },
    "2368": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP4",
      "path": "13"
    },
    "2369": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2374": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "AND",
      "path": "13"
    },
    "2375": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2377": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "SHL",
      "path": "13"
    },
    "2378": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP2",
      "path": "13"
    },
    "2379": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "MSTORE",
      "path": "13"
    },
    "2380": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2382": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ADD",
      "path": "13"
    },
    "2383": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2384": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP4",
      "path": "13"
    },
    "2385": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP2",
      "path": "13"
    },
    "2386": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "MSTORE",
      "path": "13"
    },
    "2387": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2389": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ADD",
      "path": "13"
    },
    "2390": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP3",
      "path": "13"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "op": "SUB"
    },
    "2399": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "AND",
      "path": "13"
    },
    "2400": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP2",
      "path": "13"
    },
    "2401": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "MSTORE",
      "path": "13"
    },
    "2402": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2404": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ADD",
      "path": "13"
    },
    "2405": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "SWAP3",
      "path": "13"
    },
    "2406": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2407": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2408": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2409": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2411": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2413": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "MLOAD",
      "path": "13"
    },
    "2414": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2415": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP4",
      "path": "13"
    },
    "2416": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "SUB",
      "path": "13"
    },
    "2417": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP2",
      "path": "13"
    },
    "2418": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP7",
      "path": "13"
    },
    "2419": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2420": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2421": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ISZERO",
      "path": "13"
    },
    "2422": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2423": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ISZERO",
      "path": "13"
    },
    "2424": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH2",
      "path": "13",
      "value": "0x980"
    },
    "2427": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "JUMPI",
      "path": "13"
    },
    "2428": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2430": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2431": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "REVERT",
      "path": "13"
    },
    "2432": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2433": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2434": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "GAS",
      "path": "13"
    },
    "2435": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "2436": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ISZERO",
      "path": "13"
    },
    "2437": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2438": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "ISZERO",
      "path": "13"
    },
    "2439": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH2",
      "path": "13",
      "value": "0x994"
    },
    "2442": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "JUMPI",
      "path": "13"
    },
    "2443": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2444": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2446": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "DUP1",
      "path": "13"
    },
    "2447": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2448": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2449": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2451": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "REVERT",
      "path": "13"
    },
    "2452": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2453": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2454": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2455": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2456": {
      "fn": "Swap.withdrawAdminFees",
      "offset": [20210, 20248],
      "op": "POP",
      "path": "13"
    },
    "2457": {
      "fn": "Swap.withdrawAdminFees",
      "jump": "o",
      "offset": [20152, 20255],
      "op": "JUMP",
      "path": "13"
    },
    "2458": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2459": {
      "fn": "Swap.getAPrecise",
      "offset": [8292, 8299],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2461": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8329],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x2"
    },
    "2463": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8341],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "2484": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8341],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC9B64DCB"
    },
    "2489": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8341],
      "op": "SWAP1",
      "path": "13"
    },
    "2490": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8341],
      "op": "SWAP2",
      "path": "13"
    },
    "2491": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2493": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MLOAD",
      "path": "13"
    },
    "2494": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP3",
      "path": "13"
    },
    "2495": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2500": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "AND",
      "path": "13"
    },
    "2501": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2503": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "SHL",
      "path": "13"
    },
    "2504": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP2",
      "path": "13"
    },
    "2505": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MSTORE",
      "path": "13"
    },
    "2506": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2508": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ADD",
      "path": "13"
    },
    "2509": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2510": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP3",
      "path": "13"
    },
    "2511": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP2",
      "path": "13"
    },
    "2512": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MSTORE",
      "path": "13"
    },
    "2513": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2515": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ADD",
      "path": "13"
    },
    "2516": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "SWAP2",
      "path": "13"
    },
    "2517": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2518": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2519": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2521": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2523": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MLOAD",
      "path": "13"
    },
    "2524": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2525": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP4",
      "path": "13"
    },
    "2526": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "SUB",
      "path": "13"
    },
    "2527": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP2",
      "path": "13"
    },
    "2528": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP7",
      "path": "13"
    },
    "2529": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2530": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2531": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ISZERO",
      "path": "13"
    },
    "2532": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2533": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ISZERO",
      "path": "13"
    },
    "2534": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9EE"
    },
    "2537": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPI",
      "path": "13"
    },
    "2538": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2540": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2541": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "REVERT",
      "path": "13"
    },
    "2542": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2543": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2544": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "GAS",
      "path": "13"
    },
    "2545": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "2546": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ISZERO",
      "path": "13"
    },
    "2547": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2548": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ISZERO",
      "path": "13"
    },
    "2549": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA02"
    },
    "2552": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPI",
      "path": "13"
    },
    "2553": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2554": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2556": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2557": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2558": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2559": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2561": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "REVERT",
      "path": "13"
    },
    "2562": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2563": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2564": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2565": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2566": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "POP",
      "path": "13"
    },
    "2567": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2569": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MLOAD",
      "path": "13"
    },
    "2570": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2571": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2573": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP2",
      "path": "13"
    },
    "2574": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "LT",
      "path": "13"
    },
    "2575": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "ISZERO",
      "path": "13"
    },
    "2576": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA18"
    },
    "2579": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPI",
      "path": "13"
    },
    "2580": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2582": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "DUP1",
      "path": "13"
    },
    "2583": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "REVERT",
      "path": "13"
    },
    "2584": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "MLOAD",
      "path": "13"
    },
    "2587": {
      "fn": "Swap.getAPrecise",
      "offset": [8318, 8343],
      "op": "SWAP1",
      "path": "13"
    },
    "2588": {
      "op": "POP"
    },
    "2589": {
      "fn": "Swap.getAPrecise",
      "offset": [8246, 8350],
      "op": "SWAP1",
      "path": "13"
    },
    "2590": {
      "fn": "Swap.getAPrecise",
      "jump": "o",
      "offset": [8246, 8350],
      "op": "JUMP",
      "path": "13"
    },
    "2591": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2592": {
      "fn": "Swap.removeLiquidity",
      "offset": [17324, 17340],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2594": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2596": {
      "offset": [2277, 2284],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2598": {
      "fn": "Swap.removeLiquidity",
      "offset": [2277, 2284],
      "op": "SLOAD",
      "path": "9"
    },
    "2599": {
      "offset": [2277, 2296],
      "op": "EQ",
      "path": "9"
    },
    "2600": {
      "fn": "Swap.removeLiquidity",
      "offset": [2277, 2296],
      "op": "ISZERO",
      "path": "9"
    },
    "2601": {
      "offset": [2269, 2332],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA67"
    },
    "2604": {
      "offset": [2269, 2332],
      "op": "JUMPI",
      "path": "9"
    },
    "2605": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2607": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "DUP1",
      "path": "9"
    },
    "2608": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "2609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "2617": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "2618": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2620": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2622": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "2623": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "2624": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "2625": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2627": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2629": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "2630": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "2631": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2634": {
      "op": "DUP1"
    },
    "2635": {
      "op": "MLOAD"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2638": {
      "op": "PUSH2",
      "value": "0x23CF"
    },
    "2641": {
      "op": "DUP4"
    },
    "2642": {
      "op": "CODECOPY"
    },
    "2643": {
      "op": "DUP2"
    },
    "2644": {
      "op": "MLOAD"
    },
    "2645": {
      "op": "SWAP2"
    },
    "2646": {
      "op": "MSTORE"
    },
    "2647": {
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2649": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "2650": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "2651": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "2652": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "2653": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "2654": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "2655": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "2656": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "2657": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "SUB",
      "path": "9"
    },
    "2658": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2660": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "2661": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "2662": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "REVERT",
      "path": "9"
    },
    "2663": {
      "fn": "Swap.removeLiquidity",
      "offset": [2269, 2332],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2664": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2666": {
      "offset": [2407, 2414],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2668": {
      "offset": [2407, 2425],
      "op": "SSTORE",
      "path": "9"
    },
    "2669": {
      "fn": "Swap.removeLiquidity",
      "offset": [17305, 17313],
      "op": "DUP2",
      "path": "13"
    },
    "2670": {
      "offset": [7719, 7734],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "2671": {
      "offset": [7719, 7746],
      "op": "DUP2",
      "path": "13"
    },
    "2672": {
      "op": "LT"
    },
    "2673": {
      "offset": [7719, 7746],
      "op": "ISZERO",
      "path": "13"
    },
    "2674": {
      "offset": [7711, 7767],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB5"
    },
    "2677": {
      "offset": [7711, 7767],
      "op": "JUMPI",
      "path": "13"
    },
    "2678": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2680": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "DUP1",
      "path": "13"
    },
    "2681": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "2682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "2690": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "2691": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2693": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2695": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "2696": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "2697": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "2698": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "2700": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2702": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "2703": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "2704": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "2705": {
      "op": "PUSH16",
      "value": "0x111958591B1A5B99481B9BDD081B595D"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2724": {
      "op": "SHL"
    },
    "2725": {
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2727": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "2728": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "2729": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "2730": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "2731": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "2732": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "2733": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "2734": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "2735": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "SUB",
      "path": "13"
    },
    "2736": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2738": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "2739": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "2740": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "REVERT",
      "path": "13"
    },
    "2741": {
      "fn": "Swap.removeLiquidity",
      "offset": [7711, 7767],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2742": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17370],
      "op": "PUSH1",
      "path": "13",
      "statement": 3,
      "value": "0x2"
    },
    "2744": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17386],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "2765": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17386],
      "op": "PUSH4",
      "path": "13",
      "value": "0x73FD6B3E"
    },
    "2770": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17386],
      "op": "SWAP1",
      "path": "13"
    },
    "2771": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17386],
      "op": "SWAP2",
      "path": "13"
    },
    "2772": {
      "fn": "Swap.removeLiquidity",
      "offset": [17387, 17393],
      "op": "DUP9",
      "path": "13"
    },
    "2773": {
      "fn": "Swap.removeLiquidity",
      "offset": [17395, 17405],
      "op": "DUP9",
      "path": "13"
    },
    "2774": {
      "fn": "Swap.removeLiquidity",
      "offset": [17395, 17405],
      "op": "DUP9",
      "path": "13"
    },
    "2775": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2777": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "2778": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP6",
      "path": "13"
    },
    "2779": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2784": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "AND",
      "path": "13"
    },
    "2785": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2787": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SHL",
      "path": "13"
    },
    "2788": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2789": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2790": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2792": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2793": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2794": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP6",
      "path": "13"
    },
    "2795": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2796": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2797": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2799": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2800": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2801": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2802": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2803": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2805": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2806": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2807": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2809": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2810": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2811": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2812": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SUB",
      "path": "13"
    },
    "2813": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2814": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2815": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2816": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2817": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2818": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2819": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2820": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2821": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2823": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2824": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP3",
      "path": "13"
    },
    "2825": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2826": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2828": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MUL",
      "path": "13"
    },
    "2829": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2830": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2831": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2832": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "2833": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2835": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2836": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2837": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2838": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2839": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2841": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "NOT",
      "path": "13"
    },
    "2842": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2844": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2845": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2846": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "AND",
      "path": "13"
    },
    "2847": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2848": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2849": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2850": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "2851": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2852": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP3",
      "path": "13"
    },
    "2853": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2854": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2855": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2856": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP6",
      "path": "13"
    },
    "2857": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2858": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2859": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2860": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2861": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2862": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2863": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2865": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2867": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "2868": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2869": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "2870": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SUB",
      "path": "13"
    },
    "2871": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2872": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP7",
      "path": "13"
    },
    "2873": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2874": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2875": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2876": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2877": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2878": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB46"
    },
    "2881": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "2882": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2884": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2885": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "2886": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2887": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2888": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "GAS",
      "path": "13"
    },
    "2889": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "2890": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2891": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2892": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2893": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB5A"
    },
    "2896": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "2897": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2898": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2900": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2901": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2902": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2903": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2905": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "2906": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2907": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2908": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2909": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2910": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "2911": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2913": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "2914": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2915": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2917": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2918": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2919": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2921": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2922": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2923": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2924": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2927": {
      "op": "NOT"
    },
    "2928": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "AND",
      "path": "13"
    },
    "2929": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2930": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2931": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2933": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "2934": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2936": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2937": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "LT",
      "path": "13"
    },
    "2938": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2939": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB83"
    },
    "2942": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "2943": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2945": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2946": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "2947": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2948": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2949": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2950": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2951": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2952": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2953": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "2954": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2956": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "2957": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP4",
      "path": "13"
    },
    "2958": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP3",
      "path": "13"
    },
    "2959": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP2",
      "path": "13"
    },
    "2960": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2961": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP5",
      "path": "13"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2968": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "GT",
      "path": "13"
    },
    "2969": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2970": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBA2"
    },
    "2973": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "2974": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2976": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2977": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "2978": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2979": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2980": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "2981": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2982": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "2983": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2985": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "2986": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "2987": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP6",
      "path": "13"
    },
    "2988": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "2989": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "GT",
      "path": "13"
    },
    "2990": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "2991": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB7"
    },
    "2994": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "2995": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2997": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "2998": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "2999": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3000": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3001": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "3002": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP7",
      "path": "13"
    },
    "3003": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3005": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3006": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MUL",
      "path": "13"
    },
    "3007": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "3008": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3009": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "GT",
      "path": "13"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3016": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "GT",
      "path": "13"
    },
    "3017": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "OR",
      "path": "13"
    },
    "3018": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "3019": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBD3"
    },
    "3022": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "3023": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3025": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "3026": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "REVERT",
      "path": "13"
    },
    "3027": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3028": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3029": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "3032": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "3033": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3035": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP2",
      "path": "13"
    },
    "3036": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3037": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3038": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP3",
      "path": "13"
    },
    "3039": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3040": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3041": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP2",
      "path": "13"
    },
    "3042": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MUL",
      "path": "13"
    },
    "3043": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP1",
      "path": "13"
    },
    "3044": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "3045": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "3046": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3048": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3049": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "3050": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "3051": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "LT",
      "path": "13"
    },
    "3052": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ISZERO",
      "path": "13"
    },
    "3053": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC00"
    },
    "3056": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPI",
      "path": "13"
    },
    "3057": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "3058": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP2",
      "path": "13"
    },
    "3059": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3060": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MLOAD",
      "path": "13"
    },
    "3061": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP4",
      "path": "13"
    },
    "3062": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "DUP3",
      "path": "13"
    },
    "3063": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3064": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "3065": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3067": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3068": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBE8"
    },
    "3071": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMP",
      "path": "13"
    },
    "3072": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3073": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3074": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3075": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3076": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3077": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "SWAP1",
      "path": "13"
    },
    "3078": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3079": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "ADD",
      "path": "13"
    },
    "3080": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3082": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "MSTORE",
      "path": "13"
    },
    "3083": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3084": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3085": {
      "fn": "Swap.removeLiquidity",
      "offset": [17359, 17406],
      "op": "POP",
      "path": "13"
    },
    "3086": {
      "fn": "Swap.removeLiquidity",
      "offset": [17352, 17406],
      "op": "SWAP2",
      "path": "13"
    },
    "3087": {
      "fn": "Swap.removeLiquidity",
      "offset": [17352, 17406],
      "op": "POP",
      "path": "13"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "offset": [1645, 1646],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3091": {
      "offset": [2580, 2602],
      "op": "DUP1",
      "path": "9"
    },
    "3092": {
      "fn": "Swap.removeLiquidity",
      "offset": [2580, 2602],
      "op": "SSTORE",
      "path": "9"
    },
    "3093": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP5",
      "path": "13"
    },
    "3094": {
      "fn": "Swap.removeLiquidity",
      "offset": [17149, 17413],
      "op": "SWAP4",
      "path": "13"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "op": "POP"
    },
    "3099": {
      "fn": "Swap.removeLiquidity",
      "jump": "o",
      "offset": [17149, 17413],
      "op": "JUMP",
      "path": "13"
    },
    "3100": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3101": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC24"
    },
    "3104": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "3107": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "3108": {
      "fn": "Swap.setSwapFee",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3115": {
      "op": "SHL"
    },
    "3116": {
      "op": "SUB"
    },
    "3117": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3118": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC35"
    },
    "3121": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "3124": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "3125": {
      "fn": "Swap.setSwapFee",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "SUB"
    },
    "3134": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3135": {
      "fn": "Swap.setSwapFee",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "3136": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "3139": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "3140": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3142": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "3143": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3152": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3153": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3155": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3157": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3158": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3159": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3160": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3161": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3162": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3164": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3165": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3166": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3169": {
      "op": "DUP1"
    },
    "3170": {
      "op": "MLOAD"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3173": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "3176": {
      "op": "DUP4"
    },
    "3177": {
      "op": "CODECOPY"
    },
    "3178": {
      "op": "DUP2"
    },
    "3179": {
      "op": "MLOAD"
    },
    "3180": {
      "op": "SWAP2"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3184": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3185": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3186": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3187": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3188": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3189": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3190": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3191": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3192": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "3193": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3195": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3196": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3197": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "3198": {
      "fn": "Swap.setSwapFee",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3199": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x40"
    },
    "3201": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3202": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "MLOAD",
      "path": "13"
    },
    "3203": {
      "op": "PUSH4",
      "value": "0x119F861B"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP2",
      "path": "13"
    },
    "3212": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "MSTORE",
      "path": "13"
    },
    "3213": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20781],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3215": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3217": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP3",
      "path": "13"
    },
    "3218": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ADD",
      "path": "13"
    },
    "3219": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "MSTORE",
      "path": "13"
    },
    "3220": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3222": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP2",
      "path": "13"
    },
    "3223": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ADD",
      "path": "13"
    },
    "3224": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP4",
      "path": "13"
    },
    "3225": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP1",
      "path": "13"
    },
    "3226": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "MSTORE",
      "path": "13"
    },
    "3227": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP1",
      "path": "13"
    },
    "3228": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "MLOAD",
      "path": "13"
    },
    "3229": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20792],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "3250": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20792],
      "op": "SWAP2",
      "path": "13"
    },
    "3251": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20792],
      "op": "PUSH4",
      "path": "13",
      "value": "0x467E186C"
    },
    "3256": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20792],
      "op": "SWAP2",
      "path": "13"
    },
    "3257": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3259": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3260": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP4",
      "path": "13"
    },
    "3261": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ADD",
      "path": "13"
    },
    "3262": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP3",
      "path": "13"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3265": {
      "op": "SWAP3"
    },
    "3266": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP2",
      "path": "13"
    },
    "3267": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP1",
      "path": "13"
    },
    "3268": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP3",
      "path": "13"
    },
    "3269": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SWAP1",
      "path": "13"
    },
    "3270": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "SUB",
      "path": "13"
    },
    "3271": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ADD",
      "path": "13"
    },
    "3272": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP2",
      "path": "13"
    },
    "3273": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20792],
      "op": "DUP7",
      "path": "13"
    },
    "3274": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3275": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3276": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ISZERO",
      "path": "13"
    },
    "3277": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3278": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ISZERO",
      "path": "13"
    },
    "3279": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD7"
    },
    "3282": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "JUMPI",
      "path": "13"
    },
    "3283": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3285": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3286": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "REVERT",
      "path": "13"
    },
    "3287": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3288": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "POP",
      "path": "13"
    },
    "3289": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "GAS",
      "path": "13"
    },
    "3290": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "3291": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ISZERO",
      "path": "13"
    },
    "3292": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3293": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "ISZERO",
      "path": "13"
    },
    "3294": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCEB"
    },
    "3297": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "JUMPI",
      "path": "13"
    },
    "3298": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3299": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3301": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "DUP1",
      "path": "13"
    },
    "3302": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3303": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3304": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3306": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "REVERT",
      "path": "13"
    },
    "3307": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3308": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "POP",
      "path": "13"
    },
    "3309": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "POP",
      "path": "13"
    },
    "3310": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "POP",
      "path": "13"
    },
    "3311": {
      "fn": "Swap.setSwapFee",
      "offset": [20770, 20804],
      "op": "POP",
      "path": "13"
    },
    "3312": {
      "fn": "Swap.setSwapFee",
      "offset": [20701, 20811],
      "op": "POP",
      "path": "13"
    },
    "3313": {
      "fn": "Swap.setSwapFee",
      "jump": "o",
      "offset": [20701, 20811],
      "op": "JUMP",
      "path": "13"
    },
    "3314": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3315": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18180, 18187],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3317": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3319": {
      "offset": [2277, 2284],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3321": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2277, 2284],
      "op": "SLOAD",
      "path": "9"
    },
    "3322": {
      "offset": [2277, 2296],
      "op": "EQ",
      "path": "9"
    },
    "3323": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2277, 2296],
      "op": "ISZERO",
      "path": "9"
    },
    "3324": {
      "offset": [2269, 2332],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD3A"
    },
    "3327": {
      "offset": [2269, 2332],
      "op": "JUMPI",
      "path": "9"
    },
    "3328": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3330": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "DUP1",
      "path": "9"
    },
    "3331": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "3332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "3340": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3341": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3343": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3345": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "3346": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "3347": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3348": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3350": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3352": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "3353": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "3354": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3357": {
      "op": "DUP1"
    },
    "3358": {
      "op": "MLOAD"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0x23CF"
    },
    "3364": {
      "op": "DUP4"
    },
    "3365": {
      "op": "CODECOPY"
    },
    "3366": {
      "op": "DUP2"
    },
    "3367": {
      "op": "MLOAD"
    },
    "3368": {
      "op": "SWAP2"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3372": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "3373": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "3374": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3375": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "3376": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "3377": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "3378": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "3379": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "3380": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "SUB",
      "path": "9"
    },
    "3381": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3383": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "3384": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "3385": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "REVERT",
      "path": "9"
    },
    "3386": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2269, 2332],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3387": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3389": {
      "offset": [2407, 2414],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3391": {
      "offset": [2407, 2425],
      "op": "SSTORE",
      "path": "9"
    },
    "3392": {
      "offset": [1366, 1374],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD47"
    },
    "3395": {
      "offset": [1366, 1372],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "3398": {
      "jump": "i",
      "offset": [1366, 1374],
      "op": "JUMP",
      "path": "8"
    },
    "3399": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1366, 1374],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3400": {
      "offset": [1365, 1374],
      "op": "ISZERO",
      "path": "8"
    },
    "3401": {
      "offset": [1357, 1395],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8C"
    },
    "3404": {
      "offset": [1357, 1395],
      "op": "JUMPI",
      "path": "8"
    },
    "3405": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3407": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "DUP1",
      "path": "8"
    },
    "3408": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "3409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "3417": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "3418": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3420": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3422": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "3423": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "3424": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "3425": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "3427": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "3429": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "3430": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "3431": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "3432": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "3454": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "3455": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "3456": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "3457": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "3458": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "3459": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "3460": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "3461": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "3462": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "SUB",
      "path": "8"
    },
    "3463": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "3465": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "3466": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "3467": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "REVERT",
      "path": "8"
    },
    "3468": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [1357, 1395],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3469": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18153, 18161],
      "op": "DUP2",
      "path": "13"
    },
    "3470": {
      "offset": [7738, 7746],
      "op": "DUP1",
      "path": "13"
    },
    "3471": {
      "offset": [7719, 7734],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "3472": {
      "offset": [7719, 7746],
      "op": "GT",
      "path": "13"
    },
    "3473": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7719, 7746],
      "op": "ISZERO",
      "path": "13"
    },
    "3474": {
      "offset": [7711, 7767],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD5"
    },
    "3477": {
      "offset": [7711, 7767],
      "op": "JUMPI",
      "path": "13"
    },
    "3478": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3480": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "DUP1",
      "path": "13"
    },
    "3481": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "3482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "3490": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "3491": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3493": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3495": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "3496": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "3497": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "3498": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "3500": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3502": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "3503": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "3504": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "3505": {
      "op": "PUSH16",
      "value": "0x111958591B1A5B99481B9BDD081B595D"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3527": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "3528": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "3529": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "3530": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "3531": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "3532": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "3533": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "3534": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "3535": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "SUB",
      "path": "13"
    },
    "3536": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3538": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "3539": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "3540": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "REVERT",
      "path": "13"
    },
    "3541": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [7711, 7767],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3542": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x40"
    },
    "3544": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3545": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MLOAD",
      "path": "13"
    },
    "3546": {
      "op": "PUSH4",
      "value": "0xE7A4DB81"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP2",
      "path": "13"
    },
    "3555": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MSTORE",
      "path": "13"
    },
    "3556": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18233],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3558": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3560": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP3",
      "path": "13"
    },
    "3561": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3562": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MSTORE",
      "path": "13"
    },
    "3563": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3565": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP2",
      "path": "13"
    },
    "3566": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3567": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP9",
      "path": "13"
    },
    "3568": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP1",
      "path": "13"
    },
    "3569": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MSTORE",
      "path": "13"
    },
    "3570": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3572": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP8",
      "path": "13"
    },
    "3573": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "AND",
      "path": "13"
    },
    "3574": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3576": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP3",
      "path": "13"
    },
    "3577": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3578": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MSTORE",
      "path": "13"
    },
    "3579": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3581": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP2",
      "path": "13"
    },
    "3582": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3583": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP7",
      "path": "13"
    },
    "3584": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP1",
      "path": "13"
    },
    "3585": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MSTORE",
      "path": "13"
    },
    "3586": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP1",
      "path": "13"
    },
    "3587": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MLOAD",
      "path": "13"
    },
    "3588": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18257],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "3609": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18257],
      "op": "SWAP2",
      "path": "13"
    },
    "3610": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18257],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE7A4DB81"
    },
    "3615": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18257],
      "op": "SWAP2",
      "path": "13"
    },
    "3616": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x84"
    },
    "3618": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3619": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP4",
      "path": "13"
    },
    "3620": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3621": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP3",
      "path": "13"
    },
    "3622": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3624": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP3",
      "path": "13"
    },
    "3625": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP2",
      "path": "13"
    },
    "3626": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP1",
      "path": "13"
    },
    "3627": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP3",
      "path": "13"
    },
    "3628": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP1",
      "path": "13"
    },
    "3629": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SUB",
      "path": "13"
    },
    "3630": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ADD",
      "path": "13"
    },
    "3631": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP2",
      "path": "13"
    },
    "3632": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18257],
      "op": "DUP7",
      "path": "13"
    },
    "3633": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3634": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3635": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ISZERO",
      "path": "13"
    },
    "3636": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3637": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ISZERO",
      "path": "13"
    },
    "3638": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE3E"
    },
    "3641": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPI",
      "path": "13"
    },
    "3642": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3644": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3645": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "REVERT",
      "path": "13"
    },
    "3646": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3647": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "POP",
      "path": "13"
    },
    "3648": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "GAS",
      "path": "13"
    },
    "3649": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "3650": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ISZERO",
      "path": "13"
    },
    "3651": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3652": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ISZERO",
      "path": "13"
    },
    "3653": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE52"
    },
    "3656": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPI",
      "path": "13"
    },
    "3657": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3658": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3660": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3661": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3662": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3663": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3665": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "REVERT",
      "path": "13"
    },
    "3666": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3667": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "POP",
      "path": "13"
    },
    "3668": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "POP",
      "path": "13"
    },
    "3669": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "POP",
      "path": "13"
    },
    "3670": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "POP",
      "path": "13"
    },
    "3671": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3673": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MLOAD",
      "path": "13"
    },
    "3674": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3675": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3677": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP2",
      "path": "13"
    },
    "3678": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "LT",
      "path": "13"
    },
    "3679": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "ISZERO",
      "path": "13"
    },
    "3680": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE68"
    },
    "3683": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPI",
      "path": "13"
    },
    "3684": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3686": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "DUP1",
      "path": "13"
    },
    "3687": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "REVERT",
      "path": "13"
    },
    "3688": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "MLOAD",
      "path": "13"
    },
    "3691": {
      "offset": [1645, 1646],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3693": {
      "offset": [2580, 2602],
      "op": "DUP1",
      "path": "9"
    },
    "3694": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [2580, 2602],
      "op": "SSTORE",
      "path": "9"
    },
    "3695": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [18222, 18355],
      "op": "SWAP7",
      "path": "13"
    },
    "3696": {
      "fn": "Swap.removeLiquidityOneToken",
      "offset": [17924, 18362],
      "op": "SWAP6",
      "path": "13"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "op": "POP"
    },
    "3703": {
      "fn": "Swap.removeLiquidityOneToken",
      "jump": "o",
      "offset": [17924, 18362],
      "op": "JUMP",
      "path": "13"
    },
    "3704": {
      "fn": "OwnerPausable.unpause",
      "offset": [729, 805],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3705": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE80"
    },
    "3708": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "3711": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "3712": {
      "fn": "OwnerPausable.unpause",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "SUB"
    },
    "3721": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3722": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE91"
    },
    "3725": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "3728": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "3729": {
      "fn": "OwnerPausable.unpause",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "op": "SUB"
    },
    "3738": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3739": {
      "fn": "OwnerPausable.unpause",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "3740": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDA"
    },
    "3743": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "3744": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3746": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "3747": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3756": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3757": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3759": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3761": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3762": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3763": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3764": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3765": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3766": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3768": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3769": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3770": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "MLOAD"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3777": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "3780": {
      "op": "DUP4"
    },
    "3781": {
      "op": "CODECOPY"
    },
    "3782": {
      "op": "DUP2"
    },
    "3783": {
      "op": "MLOAD"
    },
    "3784": {
      "op": "SWAP2"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3788": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3789": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3790": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3791": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3792": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3793": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3794": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3795": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3796": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "3797": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3799": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3800": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3801": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "3802": {
      "fn": "OwnerPausable.unpause",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3803": {
      "fn": "OwnerPausable.unpause",
      "offset": [778, 797],
      "op": "PUSH2",
      "path": "12",
      "statement": 6,
      "value": "0xEE2"
    },
    "3806": {
      "fn": "OwnerPausable.unpause",
      "offset": [778, 795],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22A2"
    },
    "3809": {
      "fn": "OwnerPausable.unpause",
      "jump": "i",
      "offset": [778, 797],
      "op": "JUMP",
      "path": "12"
    },
    "3810": {
      "fn": "OwnerPausable.unpause",
      "offset": [778, 797],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3811": {
      "fn": "OwnerPausable.unpause",
      "jump": "o",
      "offset": [729, 805],
      "op": "JUMP",
      "path": "12"
    },
    "3812": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3813": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x40"
    },
    "3815": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3816": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MLOAD",
      "path": "13"
    },
    "3817": {
      "op": "PUSH4",
      "value": "0x25A39565"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3824": {
      "op": "SHL"
    },
    "3825": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP2",
      "path": "13"
    },
    "3826": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MSTORE",
      "path": "13"
    },
    "3827": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14625],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3829": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3831": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP3",
      "path": "13"
    },
    "3832": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ADD",
      "path": "13"
    },
    "3833": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MSTORE",
      "path": "13"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "op": "SUB"
    },
    "3842": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP4",
      "path": "13"
    },
    "3843": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "AND",
      "path": "13"
    },
    "3844": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3846": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP3",
      "path": "13"
    },
    "3847": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ADD",
      "path": "13"
    },
    "3848": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MSTORE",
      "path": "13"
    },
    "3849": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP1",
      "path": "13"
    },
    "3850": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MLOAD",
      "path": "13"
    },
    "3851": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14584, 14591],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3853": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14584, 14591],
      "op": "SWAP2",
      "path": "13"
    },
    "3854": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14653],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "3875": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14653],
      "op": "SWAP2",
      "path": "13"
    },
    "3876": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14653],
      "op": "PUSH4",
      "path": "13",
      "value": "0x968E5594"
    },
    "3881": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14653],
      "op": "SWAP2",
      "path": "13"
    },
    "3882": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3884": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3885": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP3",
      "path": "13"
    },
    "3886": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ADD",
      "path": "13"
    },
    "3887": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP3",
      "path": "13"
    },
    "3888": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3890": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP3",
      "path": "13"
    },
    "3891": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP1",
      "path": "13"
    },
    "3892": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP2",
      "path": "13"
    },
    "3893": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP1",
      "path": "13"
    },
    "3894": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP3",
      "path": "13"
    },
    "3895": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP1",
      "path": "13"
    },
    "3896": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SUB",
      "path": "13"
    },
    "3897": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ADD",
      "path": "13"
    },
    "3898": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP2",
      "path": "13"
    },
    "3899": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14653],
      "op": "DUP7",
      "path": "13"
    },
    "3900": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3901": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3902": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ISZERO",
      "path": "13"
    },
    "3903": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3904": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ISZERO",
      "path": "13"
    },
    "3905": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF49"
    },
    "3908": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPI",
      "path": "13"
    },
    "3909": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3911": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3912": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "REVERT",
      "path": "13"
    },
    "3913": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3914": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "POP",
      "path": "13"
    },
    "3915": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "GAS",
      "path": "13"
    },
    "3916": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "3917": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ISZERO",
      "path": "13"
    },
    "3918": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3919": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ISZERO",
      "path": "13"
    },
    "3920": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF5D"
    },
    "3923": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPI",
      "path": "13"
    },
    "3924": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3925": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3927": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3928": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3929": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3930": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3932": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "REVERT",
      "path": "13"
    },
    "3933": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3934": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "POP",
      "path": "13"
    },
    "3935": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "POP",
      "path": "13"
    },
    "3936": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "POP",
      "path": "13"
    },
    "3937": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "POP",
      "path": "13"
    },
    "3938": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3940": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MLOAD",
      "path": "13"
    },
    "3941": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3942": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3944": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP2",
      "path": "13"
    },
    "3945": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "LT",
      "path": "13"
    },
    "3946": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "ISZERO",
      "path": "13"
    },
    "3947": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF73"
    },
    "3950": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPI",
      "path": "13"
    },
    "3951": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3953": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "DUP1",
      "path": "13"
    },
    "3954": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "REVERT",
      "path": "13"
    },
    "3955": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "MLOAD",
      "path": "13"
    },
    "3958": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14614, 14659],
      "op": "SWAP3",
      "path": "13"
    },
    "3959": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "offset": [14486, 14666],
      "op": "SWAP2",
      "path": "13"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "POP"
    },
    "3962": {
      "fn": "Swap.calculateCurrentWithdrawFee",
      "jump": "o",
      "offset": [14486, 14666],
      "op": "JUMP",
      "path": "13"
    },
    "3963": {
      "fn": "Swap.addLiquidity",
      "offset": [16270, 16577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3964": {
      "fn": "Swap.addLiquidity",
      "offset": [16496, 16503],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3966": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3968": {
      "offset": [2277, 2284],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3970": {
      "fn": "Swap.addLiquidity",
      "offset": [2277, 2284],
      "op": "SLOAD",
      "path": "9"
    },
    "3971": {
      "offset": [2277, 2296],
      "op": "EQ",
      "path": "9"
    },
    "3972": {
      "fn": "Swap.addLiquidity",
      "offset": [2277, 2296],
      "op": "ISZERO",
      "path": "9"
    },
    "3973": {
      "offset": [2269, 2332],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFC3"
    },
    "3976": {
      "offset": [2269, 2332],
      "op": "JUMPI",
      "path": "9"
    },
    "3977": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3979": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "DUP1",
      "path": "9"
    },
    "3980": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "3981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "3989": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3990": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3992": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3994": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "3995": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "3996": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "3997": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3999": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4001": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "4002": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "4003": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "MLOAD"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4010": {
      "op": "PUSH2",
      "value": "0x23CF"
    },
    "4013": {
      "op": "DUP4"
    },
    "4014": {
      "op": "CODECOPY"
    },
    "4015": {
      "op": "DUP2"
    },
    "4016": {
      "op": "MLOAD"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4021": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "4022": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "4023": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "4024": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "4025": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "4026": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "4027": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "4028": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "4029": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "SUB",
      "path": "9"
    },
    "4030": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4032": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "4033": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "4034": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "REVERT",
      "path": "9"
    },
    "4035": {
      "fn": "Swap.addLiquidity",
      "offset": [2269, 2332],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4036": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "4038": {
      "offset": [2407, 2414],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4040": {
      "offset": [2407, 2425],
      "op": "SSTORE",
      "path": "9"
    },
    "4041": {
      "offset": [1366, 1374],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFD0"
    },
    "4044": {
      "offset": [1366, 1372],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "4047": {
      "jump": "i",
      "offset": [1366, 1374],
      "op": "JUMP",
      "path": "8"
    },
    "4048": {
      "fn": "Swap.addLiquidity",
      "offset": [1366, 1374],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4049": {
      "offset": [1365, 1374],
      "op": "ISZERO",
      "path": "8"
    },
    "4050": {
      "offset": [1357, 1395],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1015"
    },
    "4053": {
      "offset": [1357, 1395],
      "op": "JUMPI",
      "path": "8"
    },
    "4054": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4056": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "DUP1",
      "path": "8"
    },
    "4057": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "4058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "4066": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "4067": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4069": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4071": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "4072": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "4073": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "4074": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "4076": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "4078": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "4079": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "4080": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "4081": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4100": {
      "op": "SHL"
    },
    "4101": {
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "4103": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "4104": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "4105": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "4106": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "4107": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "4108": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "4109": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "4110": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "4111": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "SUB",
      "path": "8"
    },
    "4112": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "4114": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "4115": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "4116": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "REVERT",
      "path": "8"
    },
    "4117": {
      "fn": "Swap.addLiquidity",
      "offset": [1357, 1395],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4118": {
      "fn": "Swap.addLiquidity",
      "offset": [16469, 16477],
      "op": "DUP2",
      "path": "13"
    },
    "4119": {
      "offset": [7738, 7746],
      "op": "DUP1",
      "path": "13"
    },
    "4120": {
      "offset": [7719, 7734],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "4121": {
      "offset": [7719, 7746],
      "op": "GT",
      "path": "13"
    },
    "4122": {
      "fn": "Swap.addLiquidity",
      "offset": [7719, 7746],
      "op": "ISZERO",
      "path": "13"
    },
    "4123": {
      "offset": [7711, 7767],
      "op": "PUSH2",
      "path": "13",
      "value": "0x105E"
    },
    "4126": {
      "offset": [7711, 7767],
      "op": "JUMPI",
      "path": "13"
    },
    "4127": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4129": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "DUP1",
      "path": "13"
    },
    "4130": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "4131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "4139": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "4140": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4142": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4144": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "4145": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "4146": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "4147": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "4149": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4151": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "4152": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "4153": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "4154": {
      "op": "PUSH16",
      "value": "0x111958591B1A5B99481B9BDD081B595D"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4176": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "4177": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "4178": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "4179": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "4180": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "4181": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "4182": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "4183": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "4184": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "SUB",
      "path": "13"
    },
    "4185": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "4187": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "4188": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "4189": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "REVERT",
      "path": "13"
    },
    "4190": {
      "fn": "Swap.addLiquidity",
      "offset": [7711, 7767],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4191": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16537],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x2"
    },
    "4193": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16550],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "4214": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16550],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40370EDF"
    },
    "4219": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16550],
      "op": "SWAP1",
      "path": "13"
    },
    "4220": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16550],
      "op": "SWAP2",
      "path": "13"
    },
    "4221": {
      "fn": "Swap.addLiquidity",
      "offset": [16551, 16558],
      "op": "DUP9",
      "path": "13"
    },
    "4222": {
      "fn": "Swap.addLiquidity",
      "offset": [16551, 16558],
      "op": "DUP9",
      "path": "13"
    },
    "4223": {
      "fn": "Swap.addLiquidity",
      "offset": [16560, 16569],
      "op": "DUP9",
      "path": "13"
    },
    "4224": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4226": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MLOAD",
      "path": "13"
    },
    "4227": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP6",
      "path": "13"
    },
    "4228": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "4233": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "AND",
      "path": "13"
    },
    "4234": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "4236": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SHL",
      "path": "13"
    },
    "4237": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4238": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4239": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4241": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4242": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4243": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP6",
      "path": "13"
    },
    "4244": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4245": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4246": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4248": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4249": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4250": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4252": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4253": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP4",
      "path": "13"
    },
    "4254": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4255": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4256": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4258": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4259": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP3",
      "path": "13"
    },
    "4260": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4261": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SUB",
      "path": "13"
    },
    "4262": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP3",
      "path": "13"
    },
    "4263": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4264": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP6",
      "path": "13"
    },
    "4265": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP6",
      "path": "13"
    },
    "4266": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP3",
      "path": "13"
    },
    "4267": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4268": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4269": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4270": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4272": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4273": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SWAP3",
      "path": "13"
    },
    "4274": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4275": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4277": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MUL",
      "path": "13"
    },
    "4278": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4279": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP3",
      "path": "13"
    },
    "4280": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP5",
      "path": "13"
    },
    "4281": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "4282": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4284": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4285": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP5",
      "path": "13"
    },
    "4286": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4287": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MSTORE",
      "path": "13"
    },
    "4288": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4290": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "NOT",
      "path": "13"
    },
    "4291": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4293": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP3",
      "path": "13"
    },
    "4294": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4295": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "AND",
      "path": "13"
    },
    "4296": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SWAP1",
      "path": "13"
    },
    "4297": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4298": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4299": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP4",
      "path": "13"
    },
    "4300": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ADD",
      "path": "13"
    },
    "4301": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SWAP3",
      "path": "13"
    },
    "4302": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4303": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4304": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4305": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SWAP6",
      "path": "13"
    },
    "4306": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4307": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4308": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4309": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4310": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4311": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "POP",
      "path": "13"
    },
    "4312": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4314": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4316": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "MLOAD",
      "path": "13"
    },
    "4317": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4318": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP4",
      "path": "13"
    },
    "4319": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "SUB",
      "path": "13"
    },
    "4320": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP2",
      "path": "13"
    },
    "4321": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP7",
      "path": "13"
    },
    "4322": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4323": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4324": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ISZERO",
      "path": "13"
    },
    "4325": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4326": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "ISZERO",
      "path": "13"
    },
    "4327": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE3E"
    },
    "4330": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "JUMPI",
      "path": "13"
    },
    "4331": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4333": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "DUP1",
      "path": "13"
    },
    "4334": {
      "fn": "Swap.addLiquidity",
      "offset": [16526, 16570],
      "op": "REVERT",
      "path": "13"
    },
    "4335": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [20954, 21090],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4336": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F7"
    },
    "4339": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "4342": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "4343": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4350": {
      "op": "SHL"
    },
    "4351": {
      "op": "SUB"
    },
    "4352": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4353": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "4356": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "4359": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "4360": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "op": "SUB"
    },
    "4369": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4370": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "4371": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1151"
    },
    "4374": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "4375": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4377": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "4378": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4387": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4388": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4390": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4392": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4393": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4394": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4395": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4396": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4397": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4399": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4400": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4401": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "DUP1"
    },
    "4405": {
      "op": "MLOAD"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4408": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "4411": {
      "op": "DUP4"
    },
    "4412": {
      "op": "CODECOPY"
    },
    "4413": {
      "op": "DUP2"
    },
    "4414": {
      "op": "MLOAD"
    },
    "4415": {
      "op": "SWAP2"
    },
    "4416": {
      "op": "MSTORE"
    },
    "4417": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4419": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4420": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4421": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4422": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4423": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4424": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4425": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4426": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4427": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "4428": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4430": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4431": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4432": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "4433": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4434": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x40"
    },
    "4436": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP1",
      "path": "13"
    },
    "4437": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "MLOAD",
      "path": "13"
    },
    "4438": {
      "op": "PUSH4",
      "value": "0xD2A39487"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP2",
      "path": "13"
    },
    "4447": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "MSTORE",
      "path": "13"
    },
    "4448": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21047],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4450": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4452": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP3",
      "path": "13"
    },
    "4453": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ADD",
      "path": "13"
    },
    "4454": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "MSTORE",
      "path": "13"
    },
    "4455": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4457": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP2",
      "path": "13"
    },
    "4458": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ADD",
      "path": "13"
    },
    "4459": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP4",
      "path": "13"
    },
    "4460": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP1",
      "path": "13"
    },
    "4461": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "MSTORE",
      "path": "13"
    },
    "4462": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP1",
      "path": "13"
    },
    "4463": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "MLOAD",
      "path": "13"
    },
    "4464": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21068],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "4485": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21068],
      "op": "SWAP2",
      "path": "13"
    },
    "4486": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21068],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD2A39487"
    },
    "4491": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21068],
      "op": "SWAP2",
      "path": "13"
    },
    "4492": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4494": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP1",
      "path": "13"
    },
    "4495": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP4",
      "path": "13"
    },
    "4496": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ADD",
      "path": "13"
    },
    "4497": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP3",
      "path": "13"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4500": {
      "op": "SWAP3"
    },
    "4501": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP2",
      "path": "13"
    },
    "4502": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP1",
      "path": "13"
    },
    "4503": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP3",
      "path": "13"
    },
    "4504": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SWAP1",
      "path": "13"
    },
    "4505": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "SUB",
      "path": "13"
    },
    "4506": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ADD",
      "path": "13"
    },
    "4507": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP2",
      "path": "13"
    },
    "4508": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21068],
      "op": "DUP7",
      "path": "13"
    },
    "4509": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP1",
      "path": "13"
    },
    "4510": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4511": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ISZERO",
      "path": "13"
    },
    "4512": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP1",
      "path": "13"
    },
    "4513": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "ISZERO",
      "path": "13"
    },
    "4514": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD7"
    },
    "4517": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "JUMPI",
      "path": "13"
    },
    "4518": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4520": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "DUP1",
      "path": "13"
    },
    "4521": {
      "fn": "Swap.setDefaultDepositFee",
      "offset": [21036, 21083],
      "op": "REVERT",
      "path": "13"
    },
    "4522": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4523": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B2"
    },
    "4526": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "4529": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "4530": {
      "fn": "Swap.rampA",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4537": {
      "op": "SHL"
    },
    "4538": {
      "op": "SUB"
    },
    "4539": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4540": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C3"
    },
    "4543": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "4546": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "4547": {
      "fn": "Swap.rampA",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4554": {
      "op": "SHL"
    },
    "4555": {
      "op": "SUB"
    },
    "4556": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4557": {
      "fn": "Swap.rampA",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "4558": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120C"
    },
    "4561": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "4562": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4564": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "4565": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4574": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4575": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4577": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4579": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4580": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4581": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4582": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4583": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4584": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4586": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4587": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4588": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4591": {
      "op": "DUP1"
    },
    "4592": {
      "op": "MLOAD"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4595": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "4598": {
      "op": "DUP4"
    },
    "4599": {
      "op": "CODECOPY"
    },
    "4600": {
      "op": "DUP2"
    },
    "4601": {
      "op": "MLOAD"
    },
    "4602": {
      "op": "SWAP2"
    },
    "4603": {
      "op": "MSTORE"
    },
    "4604": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4606": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4607": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4608": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4609": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4610": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4611": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4612": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4613": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4614": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "4615": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4617": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4618": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4619": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "4620": {
      "fn": "Swap.rampA",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4621": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x40"
    },
    "4623": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4624": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MLOAD",
      "path": "13"
    },
    "4625": {
      "op": "PUSH4",
      "value": "0x58FDD79B"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4632": {
      "op": "SHL"
    },
    "4633": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP2",
      "path": "13"
    },
    "4634": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MSTORE",
      "path": "13"
    },
    "4635": {
      "fn": "Swap.rampA",
      "offset": [21870, 21881],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4637": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4639": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP3",
      "path": "13"
    },
    "4640": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ADD",
      "path": "13"
    },
    "4641": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MSTORE",
      "path": "13"
    },
    "4642": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4644": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP2",
      "path": "13"
    },
    "4645": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ADD",
      "path": "13"
    },
    "4646": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP5",
      "path": "13"
    },
    "4647": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP1",
      "path": "13"
    },
    "4648": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MSTORE",
      "path": "13"
    },
    "4649": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4651": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP2",
      "path": "13"
    },
    "4652": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ADD",
      "path": "13"
    },
    "4653": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP4",
      "path": "13"
    },
    "4654": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP1",
      "path": "13"
    },
    "4655": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MSTORE",
      "path": "13"
    },
    "4656": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP1",
      "path": "13"
    },
    "4657": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "MLOAD",
      "path": "13"
    },
    "4658": {
      "fn": "Swap.rampA",
      "offset": [21870, 21887],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "4679": {
      "fn": "Swap.rampA",
      "offset": [21870, 21887],
      "op": "SWAP2",
      "path": "13"
    },
    "4680": {
      "fn": "Swap.rampA",
      "offset": [21870, 21887],
      "op": "PUSH4",
      "path": "13",
      "value": "0x58FDD79B"
    },
    "4685": {
      "fn": "Swap.rampA",
      "offset": [21870, 21887],
      "op": "SWAP2",
      "path": "13"
    },
    "4686": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "4688": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4689": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP4",
      "path": "13"
    },
    "4690": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ADD",
      "path": "13"
    },
    "4691": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP3",
      "path": "13"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4694": {
      "op": "SWAP3"
    },
    "4695": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP2",
      "path": "13"
    },
    "4696": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP1",
      "path": "13"
    },
    "4697": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP3",
      "path": "13"
    },
    "4698": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SWAP1",
      "path": "13"
    },
    "4699": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "SUB",
      "path": "13"
    },
    "4700": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ADD",
      "path": "13"
    },
    "4701": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP2",
      "path": "13"
    },
    "4702": {
      "fn": "Swap.rampA",
      "offset": [21870, 21887],
      "op": "DUP7",
      "path": "13"
    },
    "4703": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4704": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4705": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ISZERO",
      "path": "13"
    },
    "4706": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4707": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ISZERO",
      "path": "13"
    },
    "4708": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH2",
      "path": "13",
      "value": "0x126C"
    },
    "4711": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "JUMPI",
      "path": "13"
    },
    "4712": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4714": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4715": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "REVERT",
      "path": "13"
    },
    "4716": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4717": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "POP",
      "path": "13"
    },
    "4718": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "GAS",
      "path": "13"
    },
    "4719": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "4720": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ISZERO",
      "path": "13"
    },
    "4721": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4722": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "ISZERO",
      "path": "13"
    },
    "4723": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1280"
    },
    "4726": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "JUMPI",
      "path": "13"
    },
    "4727": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4728": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4730": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "DUP1",
      "path": "13"
    },
    "4731": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "4732": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4733": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4735": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "REVERT",
      "path": "13"
    },
    "4736": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4737": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "POP",
      "path": "13"
    },
    "4738": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "POP",
      "path": "13"
    },
    "4739": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "POP",
      "path": "13"
    },
    "4740": {
      "fn": "Swap.rampA",
      "offset": [21870, 21908],
      "op": "POP",
      "path": "13"
    },
    "4741": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "POP",
      "path": "13"
    },
    "4742": {
      "fn": "Swap.rampA",
      "offset": [21789, 21915],
      "op": "POP",
      "path": "13"
    },
    "4743": {
      "fn": "Swap.rampA",
      "jump": "o",
      "offset": [21789, 21915],
      "op": "JUMP",
      "path": "13"
    },
    "4744": {
      "fn": "Pausable.paused",
      "offset": [1052, 1136],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4745": {
      "fn": "Pausable.paused",
      "offset": [1099, 1103],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4747": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "SLOAD",
      "path": "8",
      "statement": 11
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "SWAP1",
      "path": "8"
    },
    "4754": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "DIV",
      "path": "8"
    },
    "4755": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "4757": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "AND",
      "path": "8"
    },
    "4758": {
      "fn": "Pausable.paused",
      "offset": [1122, 1129],
      "op": "SWAP1",
      "path": "8"
    },
    "4759": {
      "fn": "Pausable.paused",
      "jump": "o",
      "offset": [1052, 1136],
      "op": "JUMP",
      "path": "8"
    },
    "4760": {
      "offset": [1705, 1738],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4761": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4763": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4764": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "4766": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4767": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4769": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4770": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "4772": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4773": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "4775": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4776": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "4778": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4779": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "4781": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4782": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "4784": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4785": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "4787": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4788": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "4790": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SLOAD",
      "path": "13"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "op": "SUB"
    },
    "4799": {
      "offset": [1705, 1738],
      "op": "SWAP2",
      "path": "13"
    },
    "4800": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP3",
      "path": "13"
    },
    "4801": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "AND",
      "path": "13"
    },
    "4802": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "SWAP2",
      "path": "13"
    },
    "4803": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "AND",
      "path": "13"
    },
    "4804": {
      "fn": "Pausable.paused",
      "offset": [1705, 1738],
      "op": "DUP11",
      "path": "13"
    },
    "4805": {
      "fn": "Pausable.paused",
      "jump": "o",
      "offset": [1705, 1738],
      "op": "JUMP",
      "path": "13"
    },
    "4806": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4813": {
      "op": "SHL"
    },
    "4814": {
      "op": "SUB"
    },
    "4815": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "DUP2",
      "path": "13"
    },
    "4816": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "AND",
      "path": "13"
    },
    "4817": {
      "fn": "Swap.getTokenIndex",
      "offset": [9056, 9061],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4819": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "DUP2",
      "path": "13"
    },
    "4820": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "DUP2",
      "path": "13"
    },
    "4821": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "MSTORE",
      "path": "13"
    },
    "4822": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9099],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "4824": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4826": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "MSTORE",
      "path": "13"
    },
    "4827": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4829": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "DUP2",
      "path": "13"
    },
    "4830": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "KECCAK256",
      "path": "13"
    },
    "4831": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "SLOAD",
      "path": "13"
    },
    "4832": {
      "fn": "Swap.getTokenIndex",
      "offset": [9056, 9061],
      "op": "SWAP1",
      "path": "13"
    },
    "4833": {
      "fn": "Swap.getTokenIndex",
      "offset": [9056, 9061],
      "op": "SWAP2",
      "path": "13"
    },
    "4834": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4836": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "SWAP1",
      "path": "13"
    },
    "4837": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "SWAP2",
      "path": "13"
    },
    "4838": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "AND",
      "path": "13"
    },
    "4839": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "SWAP1",
      "path": "13"
    },
    "4840": {
      "fn": "Swap.getTokenIndex",
      "offset": [9152, 9167],
      "op": "PUSH2",
      "path": "13",
      "statement": 12,
      "value": "0x12F0"
    },
    "4843": {
      "fn": "Swap.getTokenIndex",
      "offset": [9087, 9113],
      "op": "DUP3",
      "path": "13"
    },
    "4844": {
      "fn": "Swap.getTokenIndex",
      "offset": [9152, 9160],
      "op": "PUSH2",
      "path": "13",
      "value": "0x153E"
    },
    "4847": {
      "fn": "Swap.getTokenIndex",
      "jump": "i",
      "offset": [9152, 9167],
      "op": "JUMP",
      "path": "13"
    },
    "4848": {
      "fn": "Swap.getTokenIndex",
      "offset": [9152, 9167],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4855": {
      "op": "SHL"
    },
    "4856": {
      "op": "SUB"
    },
    "4857": {
      "fn": "Swap.getTokenIndex",
      "offset": [9144, 9184],
      "op": "AND",
      "path": "13"
    },
    "4858": {
      "branch": 53,
      "fn": "Swap.getTokenIndex",
      "offset": [9144, 9184],
      "op": "EQ",
      "path": "13"
    },
    "4859": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1342"
    },
    "4862": {
      "branch": 53,
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "JUMPI",
      "path": "13"
    },
    "4863": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4865": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP1",
      "path": "13"
    },
    "4866": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MLOAD",
      "path": "13"
    },
    "4867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4873": {
      "op": "SHL"
    },
    "4874": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP2",
      "path": "13"
    },
    "4875": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MSTORE",
      "path": "13"
    },
    "4876": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4878": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4880": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP3",
      "path": "13"
    },
    "4881": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "ADD",
      "path": "13"
    },
    "4882": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MSTORE",
      "path": "13"
    },
    "4883": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x14"
    },
    "4885": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4887": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP3",
      "path": "13"
    },
    "4888": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "ADD",
      "path": "13"
    },
    "4889": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MSTORE",
      "path": "13"
    },
    "4890": {
      "op": "PUSH20",
      "value": "0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4913": {
      "op": "SHL"
    },
    "4914": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4916": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP3",
      "path": "13"
    },
    "4917": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "ADD",
      "path": "13"
    },
    "4918": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MSTORE",
      "path": "13"
    },
    "4919": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "SWAP1",
      "path": "13"
    },
    "4920": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "MLOAD",
      "path": "13"
    },
    "4921": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "SWAP1",
      "path": "13"
    },
    "4922": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "DUP2",
      "path": "13"
    },
    "4923": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "SWAP1",
      "path": "13"
    },
    "4924": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "SUB",
      "path": "13"
    },
    "4925": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "4927": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "ADD",
      "path": "13"
    },
    "4928": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "SWAP1",
      "path": "13"
    },
    "4929": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "REVERT",
      "path": "13"
    },
    "4930": {
      "fn": "Swap.getTokenIndex",
      "offset": [9123, 9230],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4931": {
      "fn": "Swap.getTokenIndex",
      "offset": [9247, 9252],
      "op": "SWAP3",
      "path": "13",
      "statement": 13
    },
    "4932": {
      "fn": "Swap.getTokenIndex",
      "offset": [8988, 9259],
      "op": "SWAP2",
      "path": "13"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "POP"
    },
    "4935": {
      "fn": "Swap.getTokenIndex",
      "jump": "o",
      "offset": [8988, 9259],
      "op": "JUMP",
      "path": "13"
    },
    "4936": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4937": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1350"
    },
    "4940": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "4943": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "4944": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4951": {
      "op": "SHL"
    },
    "4952": {
      "op": "SUB"
    },
    "4953": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4954": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1361"
    },
    "4957": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "4960": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "4961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4968": {
      "op": "SHL"
    },
    "4969": {
      "op": "SUB"
    },
    "4970": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4971": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "4972": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AA"
    },
    "4975": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "4976": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4978": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "4979": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4986": {
      "op": "SHL"
    },
    "4987": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4988": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4989": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4993": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4994": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4995": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4996": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "5000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "5001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5002": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5005": {
      "op": "DUP1"
    },
    "5006": {
      "op": "MLOAD"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "5012": {
      "op": "DUP4"
    },
    "5013": {
      "op": "CODECOPY"
    },
    "5014": {
      "op": "DUP2"
    },
    "5015": {
      "op": "MLOAD"
    },
    "5016": {
      "op": "SWAP2"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "5020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "5021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5023": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5024": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "5025": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5026": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "5027": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5028": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "5029": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5031": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5032": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5033": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "5034": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5035": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "5037": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "DUP1",
      "path": "0"
    },
    "5038": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SLOAD",
      "path": "0"
    },
    "5039": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5041": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "MLOAD",
      "path": "0"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5048": {
      "op": "SHL"
    },
    "5049": {
      "op": "SUB"
    },
    "5050": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP1",
      "path": "0"
    },
    "5051": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP2",
      "path": "0"
    },
    "5052": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "AND",
      "path": "0"
    },
    "5053": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP1",
      "path": "0"
    },
    "5054": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "SWAP1",
      "path": "0"
    },
    "5088": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "DUP4",
      "path": "0"
    },
    "5089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "SWAP1",
      "path": "0"
    },
    "5090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "LOG3",
      "path": "0"
    },
    "5091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1853, 1854],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "5093": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "DUP1",
      "path": "0"
    },
    "5094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SLOAD",
      "path": "0"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5101": {
      "op": "SHL"
    },
    "5102": {
      "op": "SUB"
    },
    "5103": {
      "op": "NOT"
    },
    "5104": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "AND",
      "path": "0"
    },
    "5105": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SWAP1",
      "path": "0"
    },
    "5106": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SSTORE",
      "path": "0"
    },
    "5107": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1717, 1862],
      "op": "JUMP",
      "path": "0"
    },
    "5108": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5109": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "statement": 16,
      "value": "0x40"
    },
    "5111": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5112": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5113": {
      "op": "PUSH4",
      "value": "0xF967A81F"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5120": {
      "op": "SHL"
    },
    "5121": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5122": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5123": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13110],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "5125": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5127": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5128": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5129": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5136": {
      "op": "SHL"
    },
    "5137": {
      "op": "SUB"
    },
    "5138": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP5",
      "path": "13"
    },
    "5139": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "AND",
      "path": "13"
    },
    "5140": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "5142": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5143": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5144": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5145": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "5147": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5148": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5149": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5150": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5151": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5152": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5153": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5154": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13060, 13076],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "5156": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13060, 13076],
      "op": "SWAP2",
      "path": "13"
    },
    "5157": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13135],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "5178": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13135],
      "op": "SWAP2",
      "path": "13"
    },
    "5179": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13135],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF967A81F"
    },
    "5184": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13135],
      "op": "SWAP2",
      "path": "13"
    },
    "5185": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "5187": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5188": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5189": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5190": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP3",
      "path": "13"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5193": {
      "op": "SWAP3"
    },
    "5194": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5195": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP2",
      "path": "13"
    },
    "5196": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5197": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5198": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5199": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SUB",
      "path": "13"
    },
    "5200": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5201": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5202": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13135],
      "op": "DUP7",
      "path": "13"
    },
    "5203": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5204": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "5205": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5206": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5207": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5208": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1460"
    },
    "5211": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5212": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5214": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5215": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5216": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5217": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5218": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "GAS",
      "path": "13"
    },
    "5219": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "5220": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5221": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5222": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5223": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1474"
    },
    "5226": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5227": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5228": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5230": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5231": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "5232": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5233": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5235": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5236": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5237": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5238": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5239": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5240": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5241": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5243": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5244": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5245": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5247": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5248": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "5249": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5251": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5252": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5253": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5254": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5257": {
      "op": "NOT"
    },
    "5258": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "AND",
      "path": "13"
    },
    "5259": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5260": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5261": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5263": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5264": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5266": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5267": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "LT",
      "path": "13"
    },
    "5268": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5269": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x149D"
    },
    "5272": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5273": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5275": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5276": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5277": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5278": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5279": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5280": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5281": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5282": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5283": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5284": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5286": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5287": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP4",
      "path": "13"
    },
    "5288": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP3",
      "path": "13"
    },
    "5289": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP2",
      "path": "13"
    },
    "5290": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5291": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP5",
      "path": "13"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5298": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "GT",
      "path": "13"
    },
    "5299": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5300": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14BC"
    },
    "5303": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5304": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5306": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5307": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5308": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5309": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5310": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5311": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5312": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5313": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5315": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5316": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5317": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP6",
      "path": "13"
    },
    "5318": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5319": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "GT",
      "path": "13"
    },
    "5320": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5321": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14D1"
    },
    "5324": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5325": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5327": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5328": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5329": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5330": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5331": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5332": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP7",
      "path": "13"
    },
    "5333": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5335": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5336": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MUL",
      "path": "13"
    },
    "5337": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5338": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5339": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "GT",
      "path": "13"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5346": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "GT",
      "path": "13"
    },
    "5347": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "OR",
      "path": "13"
    },
    "5348": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5349": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14ED"
    },
    "5352": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5353": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5355": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5356": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "REVERT",
      "path": "13"
    },
    "5357": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5358": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5359": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5360": {
      "op": "POP"
    },
    "5361": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5362": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5363": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5365": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP2",
      "path": "13"
    },
    "5366": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5367": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5368": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP3",
      "path": "13"
    },
    "5369": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5370": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5371": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP2",
      "path": "13"
    },
    "5372": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MUL",
      "path": "13"
    },
    "5373": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP1",
      "path": "13"
    },
    "5374": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5375": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5376": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5378": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5379": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5380": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5381": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "LT",
      "path": "13"
    },
    "5382": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ISZERO",
      "path": "13"
    },
    "5383": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x151A"
    },
    "5386": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPI",
      "path": "13"
    },
    "5387": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5388": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP2",
      "path": "13"
    },
    "5389": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5390": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MLOAD",
      "path": "13"
    },
    "5391": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP4",
      "path": "13"
    },
    "5392": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "DUP3",
      "path": "13"
    },
    "5393": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5394": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5395": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5397": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5398": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1502"
    },
    "5401": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMP",
      "path": "13"
    },
    "5402": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5403": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5404": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5405": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5406": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5407": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5408": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5409": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "ADD",
      "path": "13"
    },
    "5410": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5412": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "MSTORE",
      "path": "13"
    },
    "5413": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5414": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5415": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13099, 13152],
      "op": "POP",
      "path": "13"
    },
    "5416": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13092, 13152],
      "op": "SWAP1",
      "path": "13"
    },
    "5417": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [13092, 13152],
      "op": "POP",
      "path": "13"
    },
    "5418": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "SWAP3",
      "path": "13"
    },
    "5419": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "SWAP2",
      "path": "13"
    },
    "5420": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "POP",
      "path": "13"
    },
    "5421": {
      "fn": "Swap.calculateRemoveLiquidity",
      "offset": [12946, 13159],
      "op": "POP",
      "path": "13"
    },
    "5422": {
      "fn": "Swap.calculateRemoveLiquidity",
      "jump": "o",
      "offset": [12946, 13159],
      "op": "JUMP",
      "path": "13"
    },
    "5423": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5424": {
      "fn": "Swap.getLpToken",
      "offset": [10595, 10614],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0xB"
    },
    "5426": {
      "fn": "Swap.getLpToken",
      "offset": [10595, 10614],
      "op": "SLOAD",
      "path": "13"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5433": {
      "op": "SHL"
    },
    "5434": {
      "op": "SUB"
    },
    "5435": {
      "fn": "Swap.getLpToken",
      "offset": [10595, 10614],
      "op": "AND",
      "path": "13"
    },
    "5436": {
      "fn": "Swap.getLpToken",
      "offset": [10515, 10623],
      "op": "SWAP1",
      "path": "13"
    },
    "5437": {
      "fn": "Swap.getLpToken",
      "jump": "o",
      "offset": [10515, 10623],
      "op": "JUMP",
      "path": "13"
    },
    "5438": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5439": {
      "fn": "Swap.getToken",
      "offset": [8657, 8681],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0xC"
    },
    "5441": {
      "fn": "Swap.getToken",
      "offset": [8657, 8688],
      "op": "SLOAD",
      "path": "13"
    },
    "5442": {
      "fn": "Swap.getToken",
      "offset": [8623, 8629],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5444": {
      "fn": "Swap.getToken",
      "offset": [8623, 8629],
      "op": "SWAP1",
      "path": "13"
    },
    "5445": {
      "fn": "Swap.getToken",
      "offset": [8649, 8688],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5447": {
      "fn": "Swap.getToken",
      "offset": [8649, 8688],
      "op": "DUP4",
      "path": "13"
    },
    "5448": {
      "fn": "Swap.getToken",
      "offset": [8649, 8688],
      "op": "AND",
      "path": "13"
    },
    "5449": {
      "branch": 54,
      "fn": "Swap.getToken",
      "offset": [8649, 8688],
      "op": "LT",
      "path": "13"
    },
    "5450": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1589"
    },
    "5453": {
      "branch": 54,
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "JUMPI",
      "path": "13"
    },
    "5454": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5456": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP1",
      "path": "13"
    },
    "5457": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MLOAD",
      "path": "13"
    },
    "5458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5464": {
      "op": "SHL"
    },
    "5465": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP2",
      "path": "13"
    },
    "5466": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MSTORE",
      "path": "13"
    },
    "5467": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5469": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5471": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP3",
      "path": "13"
    },
    "5472": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "ADD",
      "path": "13"
    },
    "5473": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MSTORE",
      "path": "13"
    },
    "5474": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC"
    },
    "5476": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "5478": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP3",
      "path": "13"
    },
    "5479": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "ADD",
      "path": "13"
    },
    "5480": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MSTORE",
      "path": "13"
    },
    "5481": {
      "op": "PUSH12",
      "value": "0x4F7574206F662072616E6765"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5496": {
      "op": "SHL"
    },
    "5497": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "5499": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP3",
      "path": "13"
    },
    "5500": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "ADD",
      "path": "13"
    },
    "5501": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MSTORE",
      "path": "13"
    },
    "5502": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "SWAP1",
      "path": "13"
    },
    "5503": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "MLOAD",
      "path": "13"
    },
    "5504": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "SWAP1",
      "path": "13"
    },
    "5505": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "DUP2",
      "path": "13"
    },
    "5506": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "SWAP1",
      "path": "13"
    },
    "5507": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "SUB",
      "path": "13"
    },
    "5508": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "5510": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "ADD",
      "path": "13"
    },
    "5511": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "SWAP1",
      "path": "13"
    },
    "5512": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "REVERT",
      "path": "13"
    },
    "5513": {
      "fn": "Swap.getToken",
      "offset": [8641, 8705],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5514": {
      "fn": "Swap.getToken",
      "offset": [8722, 8746],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0xC"
    },
    "5516": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "DUP1",
      "path": "13"
    },
    "5517": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SLOAD",
      "path": "13"
    },
    "5518": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5520": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "DUP5",
      "path": "13"
    },
    "5521": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "AND",
      "path": "13"
    },
    "5522": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SWAP1",
      "path": "13"
    },
    "5523": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "DUP2",
      "path": "13"
    },
    "5524": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "LT",
      "path": "13"
    },
    "5525": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "PUSH2",
      "path": "13",
      "value": "0x159A"
    },
    "5528": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "JUMPI",
      "path": "13"
    },
    "5529": {
      "dev": "Index out of range",
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "INVALID",
      "path": "13"
    },
    "5530": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5531": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5533": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SWAP2",
      "path": "13"
    },
    "5534": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "DUP3",
      "path": "13"
    },
    "5535": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "MSTORE",
      "path": "13"
    },
    "5536": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5538": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SWAP1",
      "path": "13"
    },
    "5539": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SWAP2",
      "path": "13"
    },
    "5540": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "KECCAK256",
      "path": "13"
    },
    "5541": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "ADD",
      "path": "13"
    },
    "5542": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SLOAD",
      "path": "13"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5549": {
      "op": "SHL"
    },
    "5550": {
      "op": "SUB"
    },
    "5551": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "AND",
      "path": "13"
    },
    "5552": {
      "fn": "Swap.getToken",
      "offset": [8722, 8753],
      "op": "SWAP3",
      "path": "13"
    },
    "5553": {
      "fn": "Swap.getToken",
      "offset": [8571, 8760],
      "op": "SWAP2",
      "path": "13"
    },
    "5554": {
      "op": "POP"
    },
    "5555": {
      "op": "POP"
    },
    "5556": {
      "fn": "Swap.getToken",
      "jump": "o",
      "offset": [8571, 8760],
      "op": "JUMP",
      "path": "13"
    },
    "5557": {
      "fn": "OwnerPausable.pause",
      "offset": [565, 637],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5558": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BD"
    },
    "5561": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "5564": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "5565": {
      "fn": "OwnerPausable.pause",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5572": {
      "op": "SHL"
    },
    "5573": {
      "op": "SUB"
    },
    "5574": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "5575": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15CE"
    },
    "5578": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "5581": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "5582": {
      "fn": "OwnerPausable.pause",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5589": {
      "op": "SHL"
    },
    "5590": {
      "op": "SUB"
    },
    "5591": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "5592": {
      "fn": "OwnerPausable.pause",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "5593": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1617"
    },
    "5596": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "5597": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5599": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "5600": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "5601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5607": {
      "op": "SHL"
    },
    "5608": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "5609": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5610": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5612": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5614": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "5615": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5616": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "5617": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5618": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5619": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "5621": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "5622": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5623": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5626": {
      "op": "DUP1"
    },
    "5627": {
      "op": "MLOAD"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5630": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "5633": {
      "op": "DUP4"
    },
    "5634": {
      "op": "CODECOPY"
    },
    "5635": {
      "op": "DUP2"
    },
    "5636": {
      "op": "MLOAD"
    },
    "5637": {
      "op": "SWAP2"
    },
    "5638": {
      "op": "MSTORE"
    },
    "5639": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "5641": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "5642": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5643": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "5644": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5645": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "5646": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5647": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "5648": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5649": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "5650": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5652": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "5653": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "5654": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "5655": {
      "fn": "OwnerPausable.pause",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5656": {
      "fn": "OwnerPausable.pause",
      "offset": [612, 629],
      "op": "PUSH2",
      "path": "12",
      "statement": 20,
      "value": "0xEE2"
    },
    "5659": {
      "fn": "OwnerPausable.pause",
      "offset": [612, 627],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2345"
    },
    "5662": {
      "fn": "OwnerPausable.pause",
      "jump": "i",
      "offset": [612, 629],
      "op": "JUMP",
      "path": "12"
    },
    "5663": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [18892, 19231],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5664": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19134, 19141],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5666": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "5668": {
      "offset": [2277, 2284],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5670": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2277, 2284],
      "op": "SLOAD",
      "path": "9"
    },
    "5671": {
      "offset": [2277, 2296],
      "op": "EQ",
      "path": "9"
    },
    "5672": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2277, 2296],
      "op": "ISZERO",
      "path": "9"
    },
    "5673": {
      "offset": [2269, 2332],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1667"
    },
    "5676": {
      "offset": [2269, 2332],
      "op": "JUMPI",
      "path": "9"
    },
    "5677": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5679": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "DUP1",
      "path": "9"
    },
    "5680": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "5681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "5689": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "5690": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5692": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5694": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "5695": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "5696": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "5697": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "5699": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "5701": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "5702": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "5703": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5706": {
      "op": "DUP1"
    },
    "5707": {
      "op": "MLOAD"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5710": {
      "op": "PUSH2",
      "value": "0x23CF"
    },
    "5713": {
      "op": "DUP4"
    },
    "5714": {
      "op": "CODECOPY"
    },
    "5715": {
      "op": "DUP2"
    },
    "5716": {
      "op": "MLOAD"
    },
    "5717": {
      "op": "SWAP2"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "5721": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "5722": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "5723": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "5724": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "5725": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "5726": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "5727": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "5728": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "5729": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "SUB",
      "path": "9"
    },
    "5730": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5732": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "5733": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "5734": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "REVERT",
      "path": "9"
    },
    "5735": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [2269, 2332],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5736": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "5738": {
      "offset": [2407, 2414],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5740": {
      "offset": [2407, 2425],
      "op": "SSTORE",
      "path": "9"
    },
    "5741": {
      "offset": [1366, 1374],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1674"
    },
    "5744": {
      "offset": [1366, 1372],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "5747": {
      "jump": "i",
      "offset": [1366, 1374],
      "op": "JUMP",
      "path": "8"
    },
    "5748": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1366, 1374],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5749": {
      "offset": [1365, 1374],
      "op": "ISZERO",
      "path": "8"
    },
    "5750": {
      "offset": [1357, 1395],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16B9"
    },
    "5753": {
      "offset": [1357, 1395],
      "op": "JUMPI",
      "path": "8"
    },
    "5754": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5756": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "DUP1",
      "path": "8"
    },
    "5757": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "5758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5764": {
      "op": "SHL"
    },
    "5765": {
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "5766": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "5767": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5769": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5771": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "5772": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "5773": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "5774": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "5776": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "5778": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "5779": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "5780": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "5781": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "5803": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "5804": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "5805": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "5806": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "5807": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "5808": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "5809": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "5810": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "5811": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "SUB",
      "path": "8"
    },
    "5812": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "5814": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "5815": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "5816": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "REVERT",
      "path": "8"
    },
    "5817": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [1357, 1395],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5818": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19107, 19115],
      "op": "DUP2",
      "path": "13"
    },
    "5819": {
      "offset": [7738, 7746],
      "op": "DUP1",
      "path": "13"
    },
    "5820": {
      "offset": [7719, 7734],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "5821": {
      "offset": [7719, 7746],
      "op": "GT",
      "path": "13"
    },
    "5822": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7719, 7746],
      "op": "ISZERO",
      "path": "13"
    },
    "5823": {
      "offset": [7711, 7767],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1702"
    },
    "5826": {
      "offset": [7711, 7767],
      "op": "JUMPI",
      "path": "13"
    },
    "5827": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5829": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "DUP1",
      "path": "13"
    },
    "5830": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "5831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5837": {
      "op": "SHL"
    },
    "5838": {
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "5839": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "5840": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5842": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5844": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "5845": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "5846": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "5847": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "5849": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "5851": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "5852": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "5853": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "5854": {
      "op": "PUSH16",
      "value": "0x111958591B1A5B99481B9BDD081B595D"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "5876": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "5877": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "5878": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "5879": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "5880": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "5881": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "5882": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "5883": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "5884": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "SUB",
      "path": "13"
    },
    "5885": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "5887": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "5888": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "5889": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "REVERT",
      "path": "13"
    },
    "5890": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [7711, 7767],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5891": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19175],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x2"
    },
    "5893": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19200],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "5914": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19200],
      "op": "PUSH4",
      "path": "13",
      "value": "0x41B91C26"
    },
    "5919": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19200],
      "op": "SWAP1",
      "path": "13"
    },
    "5920": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19200],
      "op": "SWAP2",
      "path": "13"
    },
    "5921": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19201, 19208],
      "op": "DUP9",
      "path": "13"
    },
    "5922": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19201, 19208],
      "op": "DUP9",
      "path": "13"
    },
    "5923": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19210, 19223],
      "op": "DUP9",
      "path": "13"
    },
    "5924": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5926": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MLOAD",
      "path": "13"
    },
    "5927": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP6",
      "path": "13"
    },
    "5928": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5933": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "AND",
      "path": "13"
    },
    "5934": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "5936": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SHL",
      "path": "13"
    },
    "5937": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5938": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5939": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5941": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5942": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "5943": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP6",
      "path": "13"
    },
    "5944": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5945": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5946": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5948": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5949": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "5950": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5952": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5953": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP4",
      "path": "13"
    },
    "5954": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5955": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5956": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5958": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5959": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP3",
      "path": "13"
    },
    "5960": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5961": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SUB",
      "path": "13"
    },
    "5962": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP3",
      "path": "13"
    },
    "5963": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5964": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP6",
      "path": "13"
    },
    "5965": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP6",
      "path": "13"
    },
    "5966": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP3",
      "path": "13"
    },
    "5967": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5968": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5969": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5970": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5972": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5973": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SWAP3",
      "path": "13"
    },
    "5974": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "5975": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5977": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MUL",
      "path": "13"
    },
    "5978": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "5979": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP3",
      "path": "13"
    },
    "5980": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP5",
      "path": "13"
    },
    "5981": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "5982": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5984": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "5985": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP5",
      "path": "13"
    },
    "5986": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5987": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MSTORE",
      "path": "13"
    },
    "5988": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5990": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "NOT",
      "path": "13"
    },
    "5991": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5993": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP3",
      "path": "13"
    },
    "5994": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "5995": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "AND",
      "path": "13"
    },
    "5996": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SWAP1",
      "path": "13"
    },
    "5997": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "5998": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "5999": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP4",
      "path": "13"
    },
    "6000": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ADD",
      "path": "13"
    },
    "6001": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SWAP3",
      "path": "13"
    },
    "6002": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6003": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6004": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6005": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SWAP6",
      "path": "13"
    },
    "6006": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6007": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6008": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6009": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6010": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6011": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "POP",
      "path": "13"
    },
    "6012": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6014": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6016": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "MLOAD",
      "path": "13"
    },
    "6017": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "6018": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP4",
      "path": "13"
    },
    "6019": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "SUB",
      "path": "13"
    },
    "6020": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP2",
      "path": "13"
    },
    "6021": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP7",
      "path": "13"
    },
    "6022": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "6023": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "6024": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ISZERO",
      "path": "13"
    },
    "6025": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "6026": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "ISZERO",
      "path": "13"
    },
    "6027": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE3E"
    },
    "6030": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "JUMPI",
      "path": "13"
    },
    "6031": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6033": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "DUP1",
      "path": "13"
    },
    "6034": {
      "fn": "Swap.removeLiquidityImbalance",
      "offset": [19164, 19224],
      "op": "REVERT",
      "path": "13"
    },
    "6035": {
      "fn": "Swap.setAdminFee",
      "offset": [20432, 20546],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6036": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179B"
    },
    "6039": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "6042": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "6043": {
      "fn": "Swap.setAdminFee",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6050": {
      "op": "SHL"
    },
    "6051": {
      "op": "SUB"
    },
    "6052": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "6053": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17AC"
    },
    "6056": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "6059": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "6060": {
      "fn": "Swap.setAdminFee",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6067": {
      "op": "SHL"
    },
    "6068": {
      "op": "SUB"
    },
    "6069": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "6070": {
      "fn": "Swap.setAdminFee",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "6071": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F5"
    },
    "6074": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "6075": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6077": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "6078": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "6079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "6087": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "6088": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6090": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6092": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "6093": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "6094": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "6095": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "6096": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "6097": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "6099": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "6100": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "6101": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6104": {
      "op": "DUP1"
    },
    "6105": {
      "op": "MLOAD"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "6111": {
      "op": "DUP4"
    },
    "6112": {
      "op": "CODECOPY"
    },
    "6113": {
      "op": "DUP2"
    },
    "6114": {
      "op": "MLOAD"
    },
    "6115": {
      "op": "SWAP2"
    },
    "6116": {
      "op": "MSTORE"
    },
    "6117": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "6119": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "6120": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "6121": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "6122": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "6123": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "6124": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "6125": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "6126": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "6127": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "6128": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "6130": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "6131": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "6132": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "6133": {
      "fn": "Swap.setAdminFee",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6134": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x40"
    },
    "6136": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP1",
      "path": "13"
    },
    "6137": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "MLOAD",
      "path": "13"
    },
    "6138": {
      "op": "PUSH4",
      "value": "0x3823393B"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6145": {
      "op": "SHL"
    },
    "6146": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP2",
      "path": "13"
    },
    "6147": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "MSTORE",
      "path": "13"
    },
    "6148": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20514],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6150": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6152": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP3",
      "path": "13"
    },
    "6153": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ADD",
      "path": "13"
    },
    "6154": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "MSTORE",
      "path": "13"
    },
    "6155": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6157": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP2",
      "path": "13"
    },
    "6158": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ADD",
      "path": "13"
    },
    "6159": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP4",
      "path": "13"
    },
    "6160": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP1",
      "path": "13"
    },
    "6161": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "MSTORE",
      "path": "13"
    },
    "6162": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP1",
      "path": "13"
    },
    "6163": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "MLOAD",
      "path": "13"
    },
    "6164": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20526],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "6185": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20526],
      "op": "SWAP2",
      "path": "13"
    },
    "6186": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20526],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70467276"
    },
    "6191": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20526],
      "op": "SWAP2",
      "path": "13"
    },
    "6192": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6194": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP1",
      "path": "13"
    },
    "6195": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP4",
      "path": "13"
    },
    "6196": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ADD",
      "path": "13"
    },
    "6197": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP3",
      "path": "13"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6200": {
      "op": "SWAP3"
    },
    "6201": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP2",
      "path": "13"
    },
    "6202": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP1",
      "path": "13"
    },
    "6203": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP3",
      "path": "13"
    },
    "6204": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SWAP1",
      "path": "13"
    },
    "6205": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "SUB",
      "path": "13"
    },
    "6206": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ADD",
      "path": "13"
    },
    "6207": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP2",
      "path": "13"
    },
    "6208": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20526],
      "op": "DUP7",
      "path": "13"
    },
    "6209": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP1",
      "path": "13"
    },
    "6210": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "6211": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ISZERO",
      "path": "13"
    },
    "6212": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP1",
      "path": "13"
    },
    "6213": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "ISZERO",
      "path": "13"
    },
    "6214": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD7"
    },
    "6217": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "JUMPI",
      "path": "13"
    },
    "6218": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6220": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "DUP1",
      "path": "13"
    },
    "6221": {
      "fn": "Swap.setAdminFee",
      "offset": [20503, 20539],
      "op": "REVERT",
      "path": "13"
    },
    "6222": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6223": {
      "fn": "Ownable.owner",
      "offset": [1131, 1138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6225": {
      "fn": "Ownable.owner",
      "offset": [1157, 1163],
      "op": "SLOAD",
      "path": "0",
      "statement": 23
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6232": {
      "op": "SHL"
    },
    "6233": {
      "op": "SUB"
    },
    "6234": {
      "fn": "Ownable.owner",
      "offset": [1157, 1163],
      "op": "AND",
      "path": "0"
    },
    "6235": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "SWAP1",
      "path": "0"
    },
    "6236": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1085, 1170],
      "op": "JUMP",
      "path": "0"
    },
    "6237": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6238": {
      "fn": "Swap.swap",
      "offset": [15735, 15742],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6240": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "6242": {
      "offset": [2277, 2284],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6244": {
      "fn": "Swap.swap",
      "offset": [2277, 2284],
      "op": "SLOAD",
      "path": "9"
    },
    "6245": {
      "offset": [2277, 2296],
      "op": "EQ",
      "path": "9"
    },
    "6246": {
      "branch": 61,
      "fn": "Swap.swap",
      "offset": [2277, 2296],
      "op": "ISZERO",
      "path": "9"
    },
    "6247": {
      "offset": [2269, 2332],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18A5"
    },
    "6250": {
      "branch": 61,
      "offset": [2269, 2332],
      "op": "JUMPI",
      "path": "9"
    },
    "6251": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6253": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "DUP1",
      "path": "9"
    },
    "6254": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "6255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6261": {
      "op": "SHL"
    },
    "6262": {
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "6263": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "6264": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6266": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6268": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "6269": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "6270": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "6271": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "6273": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6275": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "6276": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "6277": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6280": {
      "op": "DUP1"
    },
    "6281": {
      "op": "MLOAD"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6284": {
      "op": "PUSH2",
      "value": "0x23CF"
    },
    "6287": {
      "op": "DUP4"
    },
    "6288": {
      "op": "CODECOPY"
    },
    "6289": {
      "op": "DUP2"
    },
    "6290": {
      "op": "MLOAD"
    },
    "6291": {
      "op": "SWAP2"
    },
    "6292": {
      "op": "MSTORE"
    },
    "6293": {
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6295": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "DUP3",
      "path": "9"
    },
    "6296": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "6297": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MSTORE",
      "path": "9"
    },
    "6298": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "6299": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "MLOAD",
      "path": "9"
    },
    "6300": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "6301": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "DUP2",
      "path": "9"
    },
    "6302": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "6303": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "SUB",
      "path": "9"
    },
    "6304": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6306": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "ADD",
      "path": "9"
    },
    "6307": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "SWAP1",
      "path": "9"
    },
    "6308": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "REVERT",
      "path": "9"
    },
    "6309": {
      "fn": "Swap.swap",
      "offset": [2269, 2332],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6310": {
      "offset": [1688, 1689],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "6312": {
      "offset": [2407, 2414],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6314": {
      "offset": [2407, 2425],
      "op": "SSTORE",
      "path": "9"
    },
    "6315": {
      "offset": [1366, 1374],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18B2"
    },
    "6318": {
      "offset": [1366, 1372],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "6321": {
      "jump": "i",
      "offset": [1366, 1374],
      "op": "JUMP",
      "path": "8"
    },
    "6322": {
      "fn": "Swap.swap",
      "offset": [1366, 1374],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6323": {
      "offset": [1365, 1374],
      "op": "ISZERO",
      "path": "8"
    },
    "6324": {
      "offset": [1357, 1395],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18F7"
    },
    "6327": {
      "offset": [1357, 1395],
      "op": "JUMPI",
      "path": "8"
    },
    "6328": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6330": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "DUP1",
      "path": "8"
    },
    "6331": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "6332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6338": {
      "op": "SHL"
    },
    "6339": {
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "6340": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "6341": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6343": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6345": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "6346": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "6347": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "6348": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "6350": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "6352": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "6353": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "6354": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "6355": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "6374": {
      "op": "SHL"
    },
    "6375": {
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "6377": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "6378": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "6379": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "6380": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "6381": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "6382": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "6383": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "6384": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "6385": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "SUB",
      "path": "8"
    },
    "6386": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "6388": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "6389": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "6390": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "REVERT",
      "path": "8"
    },
    "6391": {
      "fn": "Swap.swap",
      "offset": [1357, 1395],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6392": {
      "fn": "Swap.swap",
      "offset": [15708, 15716],
      "op": "DUP2",
      "path": "13"
    },
    "6393": {
      "offset": [7738, 7746],
      "op": "DUP1",
      "path": "13"
    },
    "6394": {
      "offset": [7719, 7734],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "6395": {
      "offset": [7719, 7746],
      "op": "GT",
      "path": "13"
    },
    "6396": {
      "branch": 55,
      "fn": "Swap.swap",
      "offset": [7719, 7746],
      "op": "ISZERO",
      "path": "13"
    },
    "6397": {
      "offset": [7711, 7767],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1940"
    },
    "6400": {
      "branch": 55,
      "offset": [7711, 7767],
      "op": "JUMPI",
      "path": "13"
    },
    "6401": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6403": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "DUP1",
      "path": "13"
    },
    "6404": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "6405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6411": {
      "op": "SHL"
    },
    "6412": {
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "6413": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "6414": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6416": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6418": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "6419": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "6420": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "6421": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "6423": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6425": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "6426": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "6427": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "6428": {
      "op": "PUSH16",
      "value": "0x111958591B1A5B99481B9BDD081B595D"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "6447": {
      "op": "SHL"
    },
    "6448": {
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6450": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "DUP3",
      "path": "13"
    },
    "6451": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "6452": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MSTORE",
      "path": "13"
    },
    "6453": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "6454": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "MLOAD",
      "path": "13"
    },
    "6455": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "6456": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "DUP2",
      "path": "13"
    },
    "6457": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "6458": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "SUB",
      "path": "13"
    },
    "6459": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6461": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "ADD",
      "path": "13"
    },
    "6462": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "SWAP1",
      "path": "13"
    },
    "6463": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "REVERT",
      "path": "13"
    },
    "6464": {
      "fn": "Swap.swap",
      "offset": [7711, 7767],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6465": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "statement": 24,
      "value": "0x40"
    },
    "6467": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6468": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MLOAD",
      "path": "13"
    },
    "6469": {
      "op": "PUSH4",
      "value": "0x529CBD91"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6476": {
      "op": "SHL"
    },
    "6477": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP2",
      "path": "13"
    },
    "6478": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6479": {
      "fn": "Swap.swap",
      "offset": [15765, 15776],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6481": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6483": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP3",
      "path": "13"
    },
    "6484": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6485": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6486": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6488": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6489": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP11",
      "path": "13"
    },
    "6490": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "AND",
      "path": "13"
    },
    "6491": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6493": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP4",
      "path": "13"
    },
    "6494": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6495": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6496": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP9",
      "path": "13"
    },
    "6497": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "AND",
      "path": "13"
    },
    "6498": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6500": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP3",
      "path": "13"
    },
    "6501": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6502": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6503": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6505": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP2",
      "path": "13"
    },
    "6506": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6507": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP8",
      "path": "13"
    },
    "6508": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP1",
      "path": "13"
    },
    "6509": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6510": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x84"
    },
    "6512": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP2",
      "path": "13"
    },
    "6513": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6514": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP7",
      "path": "13"
    },
    "6515": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP1",
      "path": "13"
    },
    "6516": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MSTORE",
      "path": "13"
    },
    "6517": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP1",
      "path": "13"
    },
    "6518": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MLOAD",
      "path": "13"
    },
    "6519": {
      "fn": "Swap.swap",
      "offset": [15765, 15781],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "6540": {
      "fn": "Swap.swap",
      "offset": [15765, 15781],
      "op": "SWAP2",
      "path": "13"
    },
    "6541": {
      "fn": "Swap.swap",
      "offset": [15765, 15781],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA5397B22"
    },
    "6546": {
      "fn": "Swap.swap",
      "offset": [15765, 15781],
      "op": "SWAP2",
      "path": "13"
    },
    "6547": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA4"
    },
    "6549": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6550": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP4",
      "path": "13"
    },
    "6551": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6552": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP3",
      "path": "13"
    },
    "6553": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6555": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP3",
      "path": "13"
    },
    "6556": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP2",
      "path": "13"
    },
    "6557": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP1",
      "path": "13"
    },
    "6558": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP3",
      "path": "13"
    },
    "6559": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP1",
      "path": "13"
    },
    "6560": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SUB",
      "path": "13"
    },
    "6561": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ADD",
      "path": "13"
    },
    "6562": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP2",
      "path": "13"
    },
    "6563": {
      "fn": "Swap.swap",
      "offset": [15765, 15781],
      "op": "DUP7",
      "path": "13"
    },
    "6564": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6565": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "6566": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ISZERO",
      "path": "13"
    },
    "6567": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6568": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ISZERO",
      "path": "13"
    },
    "6569": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B1"
    },
    "6572": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPI",
      "path": "13"
    },
    "6573": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6575": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6576": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "REVERT",
      "path": "13"
    },
    "6577": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6578": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "POP",
      "path": "13"
    },
    "6579": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "GAS",
      "path": "13"
    },
    "6580": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "6581": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ISZERO",
      "path": "13"
    },
    "6582": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6583": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ISZERO",
      "path": "13"
    },
    "6584": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19C5"
    },
    "6587": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPI",
      "path": "13"
    },
    "6588": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6589": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6591": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6592": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "6593": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6594": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6596": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "REVERT",
      "path": "13"
    },
    "6597": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6598": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "POP",
      "path": "13"
    },
    "6599": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "POP",
      "path": "13"
    },
    "6600": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "POP",
      "path": "13"
    },
    "6601": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "POP",
      "path": "13"
    },
    "6602": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6604": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MLOAD",
      "path": "13"
    },
    "6605": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6606": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6608": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP2",
      "path": "13"
    },
    "6609": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "LT",
      "path": "13"
    },
    "6610": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "ISZERO",
      "path": "13"
    },
    "6611": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19DB"
    },
    "6614": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPI",
      "path": "13"
    },
    "6615": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6617": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "DUP1",
      "path": "13"
    },
    "6618": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "REVERT",
      "path": "13"
    },
    "6619": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6620": {
      "op": "POP"
    },
    "6621": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "MLOAD",
      "path": "13"
    },
    "6622": {
      "offset": [1645, 1646],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6624": {
      "offset": [2580, 2602],
      "op": "DUP1",
      "path": "9"
    },
    "6625": {
      "fn": "Swap.swap",
      "offset": [2580, 2602],
      "op": "SSTORE",
      "path": "9"
    },
    "6626": {
      "fn": "Swap.swap",
      "offset": [15765, 15822],
      "op": "SWAP8",
      "path": "13"
    },
    "6627": {
      "fn": "Swap.swap",
      "offset": [15479, 15829],
      "op": "SWAP7",
      "path": "13"
    },
    "6628": {
      "op": "POP"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "POP"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "fn": "Swap.swap",
      "jump": "o",
      "offset": [15479, 15829],
      "op": "JUMP",
      "path": "13"
    },
    "6636": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6637": {
      "fn": "Swap.getTokenBalance",
      "offset": [9883, 9907],
      "op": "PUSH1",
      "path": "13",
      "statement": 25,
      "value": "0xC"
    },
    "6639": {
      "fn": "Swap.getTokenBalance",
      "offset": [9883, 9914],
      "op": "SLOAD",
      "path": "13"
    },
    "6640": {
      "fn": "Swap.getTokenBalance",
      "offset": [9848, 9855],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6642": {
      "fn": "Swap.getTokenBalance",
      "offset": [9848, 9855],
      "op": "SWAP1",
      "path": "13"
    },
    "6643": {
      "fn": "Swap.getTokenBalance",
      "offset": [9875, 9914],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6645": {
      "fn": "Swap.getTokenBalance",
      "offset": [9875, 9914],
      "op": "DUP4",
      "path": "13"
    },
    "6646": {
      "fn": "Swap.getTokenBalance",
      "offset": [9875, 9914],
      "op": "AND",
      "path": "13"
    },
    "6647": {
      "branch": 56,
      "fn": "Swap.getTokenBalance",
      "offset": [9875, 9914],
      "op": "LT",
      "path": "13"
    },
    "6648": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A3D"
    },
    "6651": {
      "branch": 56,
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "JUMPI",
      "path": "13"
    },
    "6652": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6654": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP1",
      "path": "13"
    },
    "6655": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MLOAD",
      "path": "13"
    },
    "6656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6662": {
      "op": "SHL"
    },
    "6663": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP2",
      "path": "13"
    },
    "6664": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MSTORE",
      "path": "13"
    },
    "6665": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6667": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6669": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP3",
      "path": "13"
    },
    "6670": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "ADD",
      "path": "13"
    },
    "6671": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MSTORE",
      "path": "13"
    },
    "6672": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x12"
    },
    "6674": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6676": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP3",
      "path": "13"
    },
    "6677": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "ADD",
      "path": "13"
    },
    "6678": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MSTORE",
      "path": "13"
    },
    "6679": {
      "op": "PUSH18",
      "value": "0x496E646578206F7574206F662072616E6765"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6700": {
      "op": "SHL"
    },
    "6701": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6703": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP3",
      "path": "13"
    },
    "6704": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "ADD",
      "path": "13"
    },
    "6705": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MSTORE",
      "path": "13"
    },
    "6706": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "SWAP1",
      "path": "13"
    },
    "6707": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "MLOAD",
      "path": "13"
    },
    "6708": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "SWAP1",
      "path": "13"
    },
    "6709": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "DUP2",
      "path": "13"
    },
    "6710": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "SWAP1",
      "path": "13"
    },
    "6711": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "SUB",
      "path": "13"
    },
    "6712": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6714": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "ADD",
      "path": "13"
    },
    "6715": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "SWAP1",
      "path": "13"
    },
    "6716": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "REVERT",
      "path": "13"
    },
    "6717": {
      "fn": "Swap.getTokenBalance",
      "offset": [9867, 9937],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6718": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9974],
      "op": "PUSH1",
      "path": "13",
      "statement": 26,
      "value": "0xE"
    },
    "6720": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "DUP1",
      "path": "13"
    },
    "6721": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "SLOAD",
      "path": "13"
    },
    "6722": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6724": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "DUP5",
      "path": "13"
    },
    "6725": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "AND",
      "path": "13"
    },
    "6726": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "SWAP1",
      "path": "13"
    },
    "6727": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "DUP2",
      "path": "13"
    },
    "6728": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "LT",
      "path": "13"
    },
    "6729": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A4E"
    },
    "6732": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "JUMPI",
      "path": "13"
    },
    "6733": {
      "dev": "Index out of range",
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "INVALID",
      "path": "13"
    },
    "6734": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6735": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "SWAP1",
      "path": "13"
    },
    "6736": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6738": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "MSTORE",
      "path": "13"
    },
    "6739": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6741": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6743": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "KECCAK256",
      "path": "13"
    },
    "6744": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "ADD",
      "path": "13"
    },
    "6745": {
      "fn": "Swap.getTokenBalance",
      "offset": [9954, 9981],
      "op": "SLOAD",
      "path": "13"
    },
    "6746": {
      "fn": "Swap.getTokenBalance",
      "offset": [9947, 9981],
      "op": "SWAP1",
      "path": "13"
    },
    "6747": {
      "fn": "Swap.getTokenBalance",
      "offset": [9947, 9981],
      "op": "POP",
      "path": "13"
    },
    "6748": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "SWAP2",
      "path": "13"
    },
    "6749": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "SWAP1",
      "path": "13"
    },
    "6750": {
      "fn": "Swap.getTokenBalance",
      "offset": [9787, 9988],
      "op": "POP",
      "path": "13"
    },
    "6751": {
      "fn": "Swap.getTokenBalance",
      "jump": "o",
      "offset": [9787, 9988],
      "op": "JUMP",
      "path": "13"
    },
    "6752": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6753": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "statement": 27,
      "value": "0x40"
    },
    "6755": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6756": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MLOAD",
      "path": "13"
    },
    "6757": {
      "op": "PUSH4",
      "value": "0x7254D06D"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6764": {
      "op": "SHL"
    },
    "6765": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP2",
      "path": "13"
    },
    "6766": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MSTORE",
      "path": "13"
    },
    "6767": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13819],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6769": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6771": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP3",
      "path": "13"
    },
    "6772": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6773": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MSTORE",
      "path": "13"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6780": {
      "op": "SHL"
    },
    "6781": {
      "op": "SUB"
    },
    "6782": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP6",
      "path": "13"
    },
    "6783": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "AND",
      "path": "13"
    },
    "6784": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6786": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP3",
      "path": "13"
    },
    "6787": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6788": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MSTORE",
      "path": "13"
    },
    "6789": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6791": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP2",
      "path": "13"
    },
    "6792": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6793": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP5",
      "path": "13"
    },
    "6794": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SWAP1",
      "path": "13"
    },
    "6795": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MSTORE",
      "path": "13"
    },
    "6796": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6798": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP4",
      "path": "13"
    },
    "6799": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "AND",
      "path": "13"
    },
    "6800": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6802": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP3",
      "path": "13"
    },
    "6803": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6804": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MSTORE",
      "path": "13"
    },
    "6805": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP2",
      "path": "13"
    },
    "6806": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MLOAD",
      "path": "13"
    },
    "6807": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13741, 13769],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6809": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13741, 13769],
      "op": "SWAP3",
      "path": "13"
    },
    "6810": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13845],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "6831": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13845],
      "op": "SWAP3",
      "path": "13"
    },
    "6832": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13845],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE4A9A0DA"
    },
    "6837": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13845],
      "op": "SWAP3",
      "path": "13"
    },
    "6838": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x84"
    },
    "6840": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6841": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP4",
      "path": "13"
    },
    "6842": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6843": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SWAP4",
      "path": "13"
    },
    "6844": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SWAP3",
      "path": "13"
    },
    "6845": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP3",
      "path": "13"
    },
    "6846": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SWAP1",
      "path": "13"
    },
    "6847": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SUB",
      "path": "13"
    },
    "6848": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ADD",
      "path": "13"
    },
    "6849": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP2",
      "path": "13"
    },
    "6850": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13845],
      "op": "DUP7",
      "path": "13"
    },
    "6851": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6852": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "6853": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ISZERO",
      "path": "13"
    },
    "6854": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6855": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ISZERO",
      "path": "13"
    },
    "6856": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AD0"
    },
    "6859": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPI",
      "path": "13"
    },
    "6860": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6862": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6863": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "REVERT",
      "path": "13"
    },
    "6864": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6865": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "POP",
      "path": "13"
    },
    "6866": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "GAS",
      "path": "13"
    },
    "6867": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "6868": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ISZERO",
      "path": "13"
    },
    "6869": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6870": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ISZERO",
      "path": "13"
    },
    "6871": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AE4"
    },
    "6874": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPI",
      "path": "13"
    },
    "6875": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6876": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6878": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6879": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "6880": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6881": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6883": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "REVERT",
      "path": "13"
    },
    "6884": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6885": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "POP",
      "path": "13"
    },
    "6886": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "POP",
      "path": "13"
    },
    "6887": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "POP",
      "path": "13"
    },
    "6888": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "POP",
      "path": "13"
    },
    "6889": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6891": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MLOAD",
      "path": "13"
    },
    "6892": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "6893": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6895": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP2",
      "path": "13"
    },
    "6896": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "LT",
      "path": "13"
    },
    "6897": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "ISZERO",
      "path": "13"
    },
    "6898": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AFA"
    },
    "6901": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPI",
      "path": "13"
    },
    "6902": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6904": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "DUP1",
      "path": "13"
    },
    "6905": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "REVERT",
      "path": "13"
    },
    "6906": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "MLOAD",
      "path": "13"
    },
    "6909": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13808, 13925],
      "op": "SWAP5",
      "path": "13"
    },
    "6910": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "offset": [13590, 13932],
      "op": "SWAP4",
      "path": "13"
    },
    "6911": {
      "op": "POP"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "op": "POP"
    },
    "6914": {
      "op": "POP"
    },
    "6915": {
      "fn": "Swap.calculateRemoveLiquidityOneToken",
      "jump": "o",
      "offset": [13590, 13932],
      "op": "JUMP",
      "path": "13"
    },
    "6916": {
      "fn": "Swap.calculateSwap",
      "offset": [11313, 11535],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6917": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "statement": 28,
      "value": "0x40"
    },
    "6919": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "6920": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MLOAD",
      "path": "13"
    },
    "6921": {
      "op": "PUSH4",
      "value": "0x12C8D80F"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP2",
      "path": "13"
    },
    "6930": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MSTORE",
      "path": "13"
    },
    "6931": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11480],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6933": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6935": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP3",
      "path": "13"
    },
    "6936": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "6937": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MSTORE",
      "path": "13"
    },
    "6938": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6940": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "6941": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP7",
      "path": "13"
    },
    "6942": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "AND",
      "path": "13"
    },
    "6943": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6945": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP4",
      "path": "13"
    },
    "6946": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "6947": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MSTORE",
      "path": "13"
    },
    "6948": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP5",
      "path": "13"
    },
    "6949": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "AND",
      "path": "13"
    },
    "6950": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "6952": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP3",
      "path": "13"
    },
    "6953": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "6954": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MSTORE",
      "path": "13"
    },
    "6955": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6957": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP2",
      "path": "13"
    },
    "6958": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "6959": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP4",
      "path": "13"
    },
    "6960": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP1",
      "path": "13"
    },
    "6961": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MSTORE",
      "path": "13"
    },
    "6962": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP1",
      "path": "13"
    },
    "6963": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MLOAD",
      "path": "13"
    },
    "6964": {
      "fn": "Swap.calculateSwap",
      "offset": [11443, 11450],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6966": {
      "fn": "Swap.calculateSwap",
      "offset": [11443, 11450],
      "op": "SWAP2",
      "path": "13"
    },
    "6967": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11494],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "6988": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11494],
      "op": "SWAP2",
      "path": "13"
    },
    "6989": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11494],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4B23603C"
    },
    "6994": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11494],
      "op": "SWAP2",
      "path": "13"
    },
    "6995": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x84"
    },
    "6997": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "6998": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP3",
      "path": "13"
    },
    "6999": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "7000": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP3",
      "path": "13"
    },
    "7001": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7003": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP3",
      "path": "13"
    },
    "7004": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP1",
      "path": "13"
    },
    "7005": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP2",
      "path": "13"
    },
    "7006": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP1",
      "path": "13"
    },
    "7007": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP3",
      "path": "13"
    },
    "7008": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SWAP1",
      "path": "13"
    },
    "7009": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "SUB",
      "path": "13"
    },
    "7010": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ADD",
      "path": "13"
    },
    "7011": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP2",
      "path": "13"
    },
    "7012": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11494],
      "op": "DUP7",
      "path": "13"
    },
    "7013": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7014": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7015": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ISZERO",
      "path": "13"
    },
    "7016": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7017": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ISZERO",
      "path": "13"
    },
    "7018": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B72"
    },
    "7021": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "JUMPI",
      "path": "13"
    },
    "7022": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7024": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7025": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "REVERT",
      "path": "13"
    },
    "7026": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7027": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "POP",
      "path": "13"
    },
    "7028": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "GAS",
      "path": "13"
    },
    "7029": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "7030": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ISZERO",
      "path": "13"
    },
    "7031": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7032": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ISZERO",
      "path": "13"
    },
    "7033": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B86"
    },
    "7036": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "JUMPI",
      "path": "13"
    },
    "7037": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "7038": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7040": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7041": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "7042": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "7043": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7045": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "REVERT",
      "path": "13"
    },
    "7046": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7047": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "POP",
      "path": "13"
    },
    "7048": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "POP",
      "path": "13"
    },
    "7049": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "POP",
      "path": "13"
    },
    "7050": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "POP",
      "path": "13"
    },
    "7051": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7053": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "MLOAD",
      "path": "13"
    },
    "7054": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "7055": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7057": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP2",
      "path": "13"
    },
    "7058": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "LT",
      "path": "13"
    },
    "7059": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "ISZERO",
      "path": "13"
    },
    "7060": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AFA"
    },
    "7063": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "JUMPI",
      "path": "13"
    },
    "7064": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7066": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "DUP1",
      "path": "13"
    },
    "7067": {
      "fn": "Swap.calculateSwap",
      "offset": [11469, 11528],
      "op": "REVERT",
      "path": "13"
    },
    "7068": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21303, 21443],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7069": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA4"
    },
    "7072": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "7075": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "7076": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7083": {
      "op": "SHL"
    },
    "7084": {
      "op": "SUB"
    },
    "7085": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7086": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB5"
    },
    "7089": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "7092": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "7093": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7100": {
      "op": "SHL"
    },
    "7101": {
      "op": "SUB"
    },
    "7102": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7103": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "7104": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BFE"
    },
    "7107": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "7108": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7110": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "7111": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7118": {
      "op": "SHL"
    },
    "7119": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7120": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7121": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7123": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7125": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7126": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7127": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7128": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7129": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7130": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "7132": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7133": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7134": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7137": {
      "op": "DUP1"
    },
    "7138": {
      "op": "MLOAD"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7141": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "7144": {
      "op": "DUP4"
    },
    "7145": {
      "op": "CODECOPY"
    },
    "7146": {
      "op": "DUP2"
    },
    "7147": {
      "op": "MLOAD"
    },
    "7148": {
      "op": "SWAP2"
    },
    "7149": {
      "op": "MSTORE"
    },
    "7150": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "7152": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7153": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7154": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7155": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7156": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7157": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7158": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7159": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7160": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "7161": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "7163": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7164": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7165": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "7166": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7167": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH1",
      "path": "13",
      "statement": 29,
      "value": "0x40"
    },
    "7169": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP1",
      "path": "13"
    },
    "7170": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "MLOAD",
      "path": "13"
    },
    "7171": {
      "op": "PUSH4",
      "value": "0x455BB4BF"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7178": {
      "op": "SHL"
    },
    "7179": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP2",
      "path": "13"
    },
    "7180": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "MSTORE",
      "path": "13"
    },
    "7181": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21398],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "7183": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7185": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP3",
      "path": "13"
    },
    "7186": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ADD",
      "path": "13"
    },
    "7187": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "MSTORE",
      "path": "13"
    },
    "7188": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7190": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP2",
      "path": "13"
    },
    "7191": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ADD",
      "path": "13"
    },
    "7192": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP4",
      "path": "13"
    },
    "7193": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP1",
      "path": "13"
    },
    "7194": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "MSTORE",
      "path": "13"
    },
    "7195": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP1",
      "path": "13"
    },
    "7196": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "MLOAD",
      "path": "13"
    },
    "7197": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21420],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7218": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21420],
      "op": "SWAP2",
      "path": "13"
    },
    "7219": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21420],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8AB7697E"
    },
    "7224": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21420],
      "op": "SWAP2",
      "path": "13"
    },
    "7225": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7227": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP1",
      "path": "13"
    },
    "7228": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP4",
      "path": "13"
    },
    "7229": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ADD",
      "path": "13"
    },
    "7230": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP3",
      "path": "13"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7233": {
      "op": "SWAP3"
    },
    "7234": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP2",
      "path": "13"
    },
    "7235": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP1",
      "path": "13"
    },
    "7236": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP3",
      "path": "13"
    },
    "7237": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SWAP1",
      "path": "13"
    },
    "7238": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "SUB",
      "path": "13"
    },
    "7239": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ADD",
      "path": "13"
    },
    "7240": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP2",
      "path": "13"
    },
    "7241": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21420],
      "op": "DUP7",
      "path": "13"
    },
    "7242": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP1",
      "path": "13"
    },
    "7243": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7244": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ISZERO",
      "path": "13"
    },
    "7245": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP1",
      "path": "13"
    },
    "7246": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "ISZERO",
      "path": "13"
    },
    "7247": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD7"
    },
    "7250": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "JUMPI",
      "path": "13"
    },
    "7251": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7253": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "DUP1",
      "path": "13"
    },
    "7254": {
      "fn": "Swap.setDefaultWithdrawFee",
      "offset": [21387, 21436],
      "op": "REVERT",
      "path": "13"
    },
    "7255": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19771, 20069],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7256": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19919, 19938],
      "op": "PUSH1",
      "path": "13",
      "statement": 30,
      "value": "0xB"
    },
    "7258": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19919, 19938],
      "op": "SLOAD",
      "path": "13"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7265": {
      "op": "SHL"
    },
    "7266": {
      "op": "SUB"
    },
    "7267": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19919, 19938],
      "op": "AND",
      "path": "13"
    },
    "7268": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19897, 19907],
      "op": "CALLER",
      "path": "13"
    },
    "7269": {
      "branch": 57,
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19897, 19939],
      "op": "EQ",
      "path": "13"
    },
    "7270": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CB6"
    },
    "7273": {
      "branch": 57,
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "JUMPI",
      "path": "13"
    },
    "7274": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7276": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP1",
      "path": "13"
    },
    "7277": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MLOAD",
      "path": "13"
    },
    "7278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7284": {
      "op": "SHL"
    },
    "7285": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP2",
      "path": "13"
    },
    "7286": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MSTORE",
      "path": "13"
    },
    "7287": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7289": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7291": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP3",
      "path": "13"
    },
    "7292": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "ADD",
      "path": "13"
    },
    "7293": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MSTORE",
      "path": "13"
    },
    "7294": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1B"
    },
    "7296": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7298": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP3",
      "path": "13"
    },
    "7299": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "ADD",
      "path": "13"
    },
    "7300": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MSTORE",
      "path": "13"
    },
    "7301": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH32",
      "path": "13",
      "value": "0x4F6E6C792063616C6C61626C6520627920706F6F6C20746F6B656E0000000000"
    },
    "7334": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7336": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP3",
      "path": "13"
    },
    "7337": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "ADD",
      "path": "13"
    },
    "7338": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MSTORE",
      "path": "13"
    },
    "7339": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "SWAP1",
      "path": "13"
    },
    "7340": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "MLOAD",
      "path": "13"
    },
    "7341": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "SWAP1",
      "path": "13"
    },
    "7342": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "DUP2",
      "path": "13"
    },
    "7343": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "SWAP1",
      "path": "13"
    },
    "7344": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "SUB",
      "path": "13"
    },
    "7345": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "7347": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "ADD",
      "path": "13"
    },
    "7348": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "SWAP1",
      "path": "13"
    },
    "7349": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "REVERT",
      "path": "13"
    },
    "7350": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [19876, 19992],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7351": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "statement": 31,
      "value": "0x40"
    },
    "7353": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP1",
      "path": "13"
    },
    "7354": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MLOAD",
      "path": "13"
    },
    "7355": {
      "op": "PUSH4",
      "value": "0x749296A3"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7362": {
      "op": "SHL"
    },
    "7363": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP2",
      "path": "13"
    },
    "7364": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MSTORE",
      "path": "13"
    },
    "7365": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20013],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "7367": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7369": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP3",
      "path": "13"
    },
    "7370": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ADD",
      "path": "13"
    },
    "7371": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MSTORE",
      "path": "13"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7378": {
      "op": "SHL"
    },
    "7379": {
      "op": "SUB"
    },
    "7380": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP5",
      "path": "13"
    },
    "7381": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "AND",
      "path": "13"
    },
    "7382": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7384": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP3",
      "path": "13"
    },
    "7385": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ADD",
      "path": "13"
    },
    "7386": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MSTORE",
      "path": "13"
    },
    "7387": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7389": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP2",
      "path": "13"
    },
    "7390": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ADD",
      "path": "13"
    },
    "7391": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP4",
      "path": "13"
    },
    "7392": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP1",
      "path": "13"
    },
    "7393": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MSTORE",
      "path": "13"
    },
    "7394": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP1",
      "path": "13"
    },
    "7395": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "MLOAD",
      "path": "13"
    },
    "7396": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20035],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7417": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20035],
      "op": "SWAP2",
      "path": "13"
    },
    "7418": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20035],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE9252D46"
    },
    "7423": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20035],
      "op": "SWAP2",
      "path": "13"
    },
    "7424": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "7426": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP1",
      "path": "13"
    },
    "7427": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP4",
      "path": "13"
    },
    "7428": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ADD",
      "path": "13"
    },
    "7429": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP3",
      "path": "13"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7432": {
      "op": "SWAP3"
    },
    "7433": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP2",
      "path": "13"
    },
    "7434": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP1",
      "path": "13"
    },
    "7435": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP3",
      "path": "13"
    },
    "7436": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SWAP1",
      "path": "13"
    },
    "7437": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "SUB",
      "path": "13"
    },
    "7438": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ADD",
      "path": "13"
    },
    "7439": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP2",
      "path": "13"
    },
    "7440": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20035],
      "op": "DUP7",
      "path": "13"
    },
    "7441": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP1",
      "path": "13"
    },
    "7442": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7443": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ISZERO",
      "path": "13"
    },
    "7444": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP1",
      "path": "13"
    },
    "7445": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "ISZERO",
      "path": "13"
    },
    "7446": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH2",
      "path": "13",
      "value": "0x126C"
    },
    "7449": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "JUMPI",
      "path": "13"
    },
    "7450": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7452": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "DUP1",
      "path": "13"
    },
    "7453": {
      "fn": "Swap.updateUserWithdrawFee",
      "offset": [20002, 20062],
      "op": "REVERT",
      "path": "13"
    },
    "7454": {
      "fn": "Swap.stopRampA",
      "offset": [22018, 22098],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7455": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D26"
    },
    "7458": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "7461": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "7462": {
      "fn": "Swap.stopRampA",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7469": {
      "op": "SHL"
    },
    "7470": {
      "op": "SUB"
    },
    "7471": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7472": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D37"
    },
    "7475": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "7478": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "7479": {
      "fn": "Swap.stopRampA",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "op": "SUB"
    },
    "7488": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7489": {
      "fn": "Swap.stopRampA",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "7490": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D80"
    },
    "7493": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "7494": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7496": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "7497": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7506": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7507": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7509": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7511": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7512": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7513": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7514": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7515": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7516": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "7518": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7519": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7520": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7523": {
      "op": "DUP1"
    },
    "7524": {
      "op": "MLOAD"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7527": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "7530": {
      "op": "DUP4"
    },
    "7531": {
      "op": "CODECOPY"
    },
    "7532": {
      "op": "DUP2"
    },
    "7533": {
      "op": "MLOAD"
    },
    "7534": {
      "op": "SWAP2"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "7538": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7539": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7540": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7541": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7542": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7543": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7544": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7545": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7546": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "7547": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "7549": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7550": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7551": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "7552": {
      "fn": "Swap.stopRampA",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7553": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "PUSH1",
      "path": "13",
      "statement": 32,
      "value": "0x40"
    },
    "7555": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP1",
      "path": "13"
    },
    "7556": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "MLOAD",
      "path": "13"
    },
    "7557": {
      "op": "PUSH4",
      "value": "0x78A7108F"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7564": {
      "op": "SHL"
    },
    "7565": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP2",
      "path": "13"
    },
    "7566": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "MSTORE",
      "path": "13"
    },
    "7567": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22079],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "7569": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7571": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP3",
      "path": "13"
    },
    "7572": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "ADD",
      "path": "13"
    },
    "7573": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "MSTORE",
      "path": "13"
    },
    "7574": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SWAP1",
      "path": "13"
    },
    "7575": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "MLOAD",
      "path": "13"
    },
    "7576": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22089],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7597": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22089],
      "op": "SWAP2",
      "path": "13"
    },
    "7598": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22089],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF14E211E"
    },
    "7603": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22089],
      "op": "SWAP2",
      "path": "13"
    },
    "7604": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7606": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP1",
      "path": "13"
    },
    "7607": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP4",
      "path": "13"
    },
    "7608": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "ADD",
      "path": "13"
    },
    "7609": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SWAP3",
      "path": "13"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7612": {
      "op": "SWAP3"
    },
    "7613": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SWAP2",
      "path": "13"
    },
    "7614": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SWAP1",
      "path": "13"
    },
    "7615": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP3",
      "path": "13"
    },
    "7616": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SWAP1",
      "path": "13"
    },
    "7617": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "SUB",
      "path": "13"
    },
    "7618": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "ADD",
      "path": "13"
    },
    "7619": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP2",
      "path": "13"
    },
    "7620": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22089],
      "op": "DUP7",
      "path": "13"
    },
    "7621": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP1",
      "path": "13"
    },
    "7622": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7623": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "ISZERO",
      "path": "13"
    },
    "7624": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP1",
      "path": "13"
    },
    "7625": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "ISZERO",
      "path": "13"
    },
    "7626": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "PUSH2",
      "path": "13",
      "value": "0x980"
    },
    "7629": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "JUMPI",
      "path": "13"
    },
    "7630": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7632": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "DUP1",
      "path": "13"
    },
    "7633": {
      "fn": "Swap.stopRampA",
      "offset": [22068, 22091],
      "op": "REVERT",
      "path": "13"
    },
    "7634": {
      "fn": "Swap.setDevAddress",
      "offset": [22155, 22267],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7635": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DDA"
    },
    "7638": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "7641": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "7642": {
      "fn": "Swap.setDevAddress",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7649": {
      "op": "SHL"
    },
    "7650": {
      "op": "SUB"
    },
    "7651": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7652": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DEB"
    },
    "7655": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "7658": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "7659": {
      "fn": "Swap.setDevAddress",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7666": {
      "op": "SHL"
    },
    "7667": {
      "op": "SUB"
    },
    "7668": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "7669": {
      "fn": "Swap.setDevAddress",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "7670": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E34"
    },
    "7673": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "7674": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7676": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "7677": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7684": {
      "op": "SHL"
    },
    "7685": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7686": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7687": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7689": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7691": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7692": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7693": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7694": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7695": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7696": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "7698": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7699": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7700": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7703": {
      "op": "DUP1"
    },
    "7704": {
      "op": "MLOAD"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7707": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "7710": {
      "op": "DUP4"
    },
    "7711": {
      "op": "CODECOPY"
    },
    "7712": {
      "op": "DUP2"
    },
    "7713": {
      "op": "MLOAD"
    },
    "7714": {
      "op": "SWAP2"
    },
    "7715": {
      "op": "MSTORE"
    },
    "7716": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "7718": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "7719": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7720": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "7721": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7722": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "7723": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7724": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "7725": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7726": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "7727": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "7729": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "7730": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "7731": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "7732": {
      "fn": "Swap.setDevAddress",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7733": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH1",
      "path": "13",
      "statement": 33,
      "value": "0x40"
    },
    "7735": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP1",
      "path": "13"
    },
    "7736": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "MLOAD",
      "path": "13"
    },
    "7737": {
      "op": "PUSH4",
      "value": "0x21C363E7"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7744": {
      "op": "SHL"
    },
    "7745": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP2",
      "path": "13"
    },
    "7746": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "MSTORE",
      "path": "13"
    },
    "7747": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22236],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "7749": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7751": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP3",
      "path": "13"
    },
    "7752": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ADD",
      "path": "13"
    },
    "7753": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "MSTORE",
      "path": "13"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7760": {
      "op": "SHL"
    },
    "7761": {
      "op": "SUB"
    },
    "7762": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP4",
      "path": "13"
    },
    "7763": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "AND",
      "path": "13"
    },
    "7764": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7766": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP3",
      "path": "13"
    },
    "7767": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ADD",
      "path": "13"
    },
    "7768": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "MSTORE",
      "path": "13"
    },
    "7769": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SWAP1",
      "path": "13"
    },
    "7770": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "MLOAD",
      "path": "13"
    },
    "7771": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22250],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7792": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22250],
      "op": "SWAP2",
      "path": "13"
    },
    "7793": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22250],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4386C7CE"
    },
    "7798": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22250],
      "op": "SWAP2",
      "path": "13"
    },
    "7799": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7801": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP1",
      "path": "13"
    },
    "7802": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP4",
      "path": "13"
    },
    "7803": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ADD",
      "path": "13"
    },
    "7804": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SWAP3",
      "path": "13"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7807": {
      "op": "SWAP3"
    },
    "7808": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SWAP2",
      "path": "13"
    },
    "7809": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SWAP1",
      "path": "13"
    },
    "7810": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP3",
      "path": "13"
    },
    "7811": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SWAP1",
      "path": "13"
    },
    "7812": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "SUB",
      "path": "13"
    },
    "7813": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ADD",
      "path": "13"
    },
    "7814": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP2",
      "path": "13"
    },
    "7815": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22250],
      "op": "DUP7",
      "path": "13"
    },
    "7816": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP1",
      "path": "13"
    },
    "7817": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7818": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ISZERO",
      "path": "13"
    },
    "7819": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP1",
      "path": "13"
    },
    "7820": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "ISZERO",
      "path": "13"
    },
    "7821": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD7"
    },
    "7824": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "JUMPI",
      "path": "13"
    },
    "7825": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7827": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "DUP1",
      "path": "13"
    },
    "7828": {
      "fn": "Swap.setDevAddress",
      "offset": [22225, 22260],
      "op": "REVERT",
      "path": "13"
    },
    "7829": {
      "fn": "Swap.getA",
      "offset": [7982, 8072],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7830": {
      "fn": "Swap.getA",
      "offset": [8021, 8028],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7832": {
      "fn": "Swap.getA",
      "offset": [8047, 8058],
      "op": "PUSH1",
      "path": "13",
      "statement": 34,
      "value": "0x2"
    },
    "7834": {
      "fn": "Swap.getA",
      "offset": [8047, 8063],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7855": {
      "fn": "Swap.getA",
      "offset": [8047, 8063],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB0A14CFC"
    },
    "7860": {
      "fn": "Swap.getA",
      "offset": [8047, 8063],
      "op": "SWAP1",
      "path": "13"
    },
    "7861": {
      "fn": "Swap.getA",
      "offset": [8047, 8063],
      "op": "SWAP2",
      "path": "13"
    },
    "7862": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7864": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "MLOAD",
      "path": "13"
    },
    "7865": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP3",
      "path": "13"
    },
    "7866": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "7871": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "AND",
      "path": "13"
    },
    "7872": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "7874": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "SHL",
      "path": "13"
    },
    "7875": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP2",
      "path": "13"
    },
    "7876": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "MSTORE",
      "path": "13"
    },
    "7877": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7879": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "ADD",
      "path": "13"
    },
    "7880": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP1",
      "path": "13"
    },
    "7881": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP3",
      "path": "13"
    },
    "7882": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP2",
      "path": "13"
    },
    "7883": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "MSTORE",
      "path": "13"
    },
    "7884": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7886": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "ADD",
      "path": "13"
    },
    "7887": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "SWAP2",
      "path": "13"
    },
    "7888": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "POP",
      "path": "13"
    },
    "7889": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "POP",
      "path": "13"
    },
    "7890": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7892": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7894": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "MLOAD",
      "path": "13"
    },
    "7895": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP1",
      "path": "13"
    },
    "7896": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP4",
      "path": "13"
    },
    "7897": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "SUB",
      "path": "13"
    },
    "7898": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP2",
      "path": "13"
    },
    "7899": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP7",
      "path": "13"
    },
    "7900": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP1",
      "path": "13"
    },
    "7901": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "7902": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "ISZERO",
      "path": "13"
    },
    "7903": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP1",
      "path": "13"
    },
    "7904": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "ISZERO",
      "path": "13"
    },
    "7905": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9EE"
    },
    "7908": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "JUMPI",
      "path": "13"
    },
    "7909": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7911": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "DUP1",
      "path": "13"
    },
    "7912": {
      "fn": "Swap.getA",
      "offset": [8047, 8065],
      "op": "REVERT",
      "path": "13"
    },
    "7913": {
      "fn": "Swap.getSwapFee",
      "offset": [10313, 10412],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7914": {
      "fn": "Swap.getSwapFee",
      "offset": [10385, 10404],
      "op": "PUSH1",
      "path": "13",
      "statement": 35,
      "value": "0x6"
    },
    "7916": {
      "fn": "Swap.getSwapFee",
      "offset": [10385, 10404],
      "op": "SLOAD",
      "path": "13"
    },
    "7917": {
      "fn": "Swap.getSwapFee",
      "offset": [10313, 10412],
      "op": "SWAP1",
      "path": "13"
    },
    "7918": {
      "fn": "Swap.getSwapFee",
      "jump": "o",
      "offset": [10313, 10412],
      "op": "JUMP",
      "path": "13"
    },
    "7919": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9417, 9553],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7920": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "statement": 36,
      "value": "0x40"
    },
    "7922": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP1",
      "path": "13"
    },
    "7923": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "MLOAD",
      "path": "13"
    },
    "7924": {
      "op": "PUSH4",
      "value": "0x3A311E95"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7931": {
      "op": "SHL"
    },
    "7932": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP2",
      "path": "13"
    },
    "7933": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "MSTORE",
      "path": "13"
    },
    "7934": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9520],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "7936": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7938": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP3",
      "path": "13"
    },
    "7939": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ADD",
      "path": "13"
    },
    "7940": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "MSTORE",
      "path": "13"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7947": {
      "op": "SHL"
    },
    "7948": {
      "op": "SUB"
    },
    "7949": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP4",
      "path": "13"
    },
    "7950": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "AND",
      "path": "13"
    },
    "7951": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7953": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP3",
      "path": "13"
    },
    "7954": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ADD",
      "path": "13"
    },
    "7955": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "MSTORE",
      "path": "13"
    },
    "7956": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP1",
      "path": "13"
    },
    "7957": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "MLOAD",
      "path": "13"
    },
    "7958": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9483, 9490],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7960": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9483, 9490],
      "op": "SWAP2",
      "path": "13"
    },
    "7961": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9540],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "7982": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9540],
      "op": "SWAP2",
      "path": "13"
    },
    "7983": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9540],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE8C47A54"
    },
    "7988": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9540],
      "op": "SWAP2",
      "path": "13"
    },
    "7989": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7991": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP1",
      "path": "13"
    },
    "7992": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP3",
      "path": "13"
    },
    "7993": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ADD",
      "path": "13"
    },
    "7994": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP3",
      "path": "13"
    },
    "7995": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "7997": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP3",
      "path": "13"
    },
    "7998": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP1",
      "path": "13"
    },
    "7999": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP2",
      "path": "13"
    },
    "8000": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP1",
      "path": "13"
    },
    "8001": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP3",
      "path": "13"
    },
    "8002": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SWAP1",
      "path": "13"
    },
    "8003": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "SUB",
      "path": "13"
    },
    "8004": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ADD",
      "path": "13"
    },
    "8005": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP2",
      "path": "13"
    },
    "8006": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9540],
      "op": "DUP7",
      "path": "13"
    },
    "8007": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP1",
      "path": "13"
    },
    "8008": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "8009": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ISZERO",
      "path": "13"
    },
    "8010": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP1",
      "path": "13"
    },
    "8011": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "ISZERO",
      "path": "13"
    },
    "8012": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF49"
    },
    "8015": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "JUMPI",
      "path": "13"
    },
    "8016": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8018": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "DUP1",
      "path": "13"
    },
    "8019": {
      "fn": "Swap.getDepositTimestamp",
      "offset": [9509, 9546],
      "op": "REVERT",
      "path": "13"
    },
    "8020": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10780, 10892],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8021": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10830, 10837],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8023": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10867],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0x2"
    },
    "8025": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10883],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "8046": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10883],
      "op": "PUSH4",
      "path": "13",
      "value": "0x71906C2C"
    },
    "8051": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10883],
      "op": "SWAP1",
      "path": "13"
    },
    "8052": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10883],
      "op": "SWAP2",
      "path": "13"
    },
    "8053": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8055": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "MLOAD",
      "path": "13"
    },
    "8056": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP3",
      "path": "13"
    },
    "8057": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "8062": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "AND",
      "path": "13"
    },
    "8063": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "8065": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "SHL",
      "path": "13"
    },
    "8066": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP2",
      "path": "13"
    },
    "8067": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "MSTORE",
      "path": "13"
    },
    "8068": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8070": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "ADD",
      "path": "13"
    },
    "8071": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP1",
      "path": "13"
    },
    "8072": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP3",
      "path": "13"
    },
    "8073": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP2",
      "path": "13"
    },
    "8074": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "MSTORE",
      "path": "13"
    },
    "8075": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8077": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "ADD",
      "path": "13"
    },
    "8078": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "SWAP2",
      "path": "13"
    },
    "8079": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "POP",
      "path": "13"
    },
    "8080": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "POP",
      "path": "13"
    },
    "8081": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8083": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8085": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "MLOAD",
      "path": "13"
    },
    "8086": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP1",
      "path": "13"
    },
    "8087": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP4",
      "path": "13"
    },
    "8088": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "SUB",
      "path": "13"
    },
    "8089": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP2",
      "path": "13"
    },
    "8090": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP7",
      "path": "13"
    },
    "8091": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP1",
      "path": "13"
    },
    "8092": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "8093": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "ISZERO",
      "path": "13"
    },
    "8094": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP1",
      "path": "13"
    },
    "8095": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "ISZERO",
      "path": "13"
    },
    "8096": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9EE"
    },
    "8099": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "JUMPI",
      "path": "13"
    },
    "8100": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8102": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "DUP1",
      "path": "13"
    },
    "8103": {
      "fn": "Swap.getVirtualPrice",
      "offset": [10856, 10885],
      "op": "REVERT",
      "path": "13"
    },
    "8104": {
      "fn": "Swap.getAdminBalance",
      "offset": [14898, 15028],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8105": {
      "fn": "Swap.getAdminBalance",
      "offset": [14961, 14968],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8107": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 14998],
      "op": "PUSH1",
      "path": "13",
      "statement": 38,
      "value": "0x2"
    },
    "8109": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15014],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "8130": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15014],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7D048160"
    },
    "8135": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15014],
      "op": "SWAP1",
      "path": "13"
    },
    "8136": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15014],
      "op": "SWAP2",
      "path": "13"
    },
    "8137": {
      "fn": "Swap.getAdminBalance",
      "offset": [15015, 15020],
      "op": "DUP5",
      "path": "13"
    },
    "8138": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8140": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "MLOAD",
      "path": "13"
    },
    "8141": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP4",
      "path": "13"
    },
    "8142": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "8147": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "AND",
      "path": "13"
    },
    "8148": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "8150": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "SHL",
      "path": "13"
    },
    "8151": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP2",
      "path": "13"
    },
    "8152": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "MSTORE",
      "path": "13"
    },
    "8153": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8155": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "ADD",
      "path": "13"
    },
    "8156": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP1",
      "path": "13"
    },
    "8157": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP4",
      "path": "13"
    },
    "8158": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP2",
      "path": "13"
    },
    "8159": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "MSTORE",
      "path": "13"
    },
    "8160": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8162": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "ADD",
      "path": "13"
    },
    "8163": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP3",
      "path": "13"
    },
    "8164": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP2",
      "path": "13"
    },
    "8165": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "MSTORE",
      "path": "13"
    },
    "8166": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8168": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "ADD",
      "path": "13"
    },
    "8169": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "SWAP3",
      "path": "13"
    },
    "8170": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "POP",
      "path": "13"
    },
    "8171": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "POP",
      "path": "13"
    },
    "8172": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "POP",
      "path": "13"
    },
    "8173": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8175": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8177": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "MLOAD",
      "path": "13"
    },
    "8178": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP1",
      "path": "13"
    },
    "8179": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP4",
      "path": "13"
    },
    "8180": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "SUB",
      "path": "13"
    },
    "8181": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP2",
      "path": "13"
    },
    "8182": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP7",
      "path": "13"
    },
    "8183": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP1",
      "path": "13"
    },
    "8184": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "8185": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "ISZERO",
      "path": "13"
    },
    "8186": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP1",
      "path": "13"
    },
    "8187": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "ISZERO",
      "path": "13"
    },
    "8188": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF49"
    },
    "8191": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "JUMPI",
      "path": "13"
    },
    "8192": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8194": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "DUP1",
      "path": "13"
    },
    "8195": {
      "fn": "Swap.getAdminBalance",
      "offset": [14987, 15021],
      "op": "REVERT",
      "path": "13"
    },
    "8196": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8197": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200C"
    },
    "8200": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229E"
    },
    "8203": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "8204": {
      "fn": "Ownable.transferOwnership",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8211": {
      "op": "SHL"
    },
    "8212": {
      "op": "SUB"
    },
    "8213": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "8214": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201D"
    },
    "8217": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184E"
    },
    "8220": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "8221": {
      "fn": "Ownable.transferOwnership",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8228": {
      "op": "SHL"
    },
    "8229": {
      "op": "SUB"
    },
    "8230": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "8231": {
      "branch": 58,
      "fn": "Ownable.transferOwnership",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "8232": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2066"
    },
    "8235": {
      "branch": 58,
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "8236": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8238": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "8239": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "8240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8246": {
      "op": "SHL"
    },
    "8247": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "8248": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "8249": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8251": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8253": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "8254": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "8255": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "8256": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "8257": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "8258": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "8260": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "8261": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "8262": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8265": {
      "op": "DUP1"
    },
    "8266": {
      "op": "MLOAD"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8269": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "8272": {
      "op": "DUP4"
    },
    "8273": {
      "op": "CODECOPY"
    },
    "8274": {
      "op": "DUP2"
    },
    "8275": {
      "op": "MLOAD"
    },
    "8276": {
      "op": "SWAP2"
    },
    "8277": {
      "op": "MSTORE"
    },
    "8278": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "8280": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "8281": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "8282": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "8283": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "8284": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "8285": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "8286": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "8287": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "8288": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "8289": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "8291": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "8292": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "8293": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "8294": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8301": {
      "op": "SHL"
    },
    "8302": {
      "op": "SUB"
    },
    "8303": {
      "fn": "Ownable.transferOwnership",
      "offset": [2099, 2121],
      "op": "DUP2",
      "path": "0",
      "statement": 39
    },
    "8304": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [2099, 2121],
      "op": "AND",
      "path": "0"
    },
    "8305": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20AB"
    },
    "8308": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "JUMPI",
      "path": "0"
    },
    "8309": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8311": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MLOAD",
      "path": "0"
    },
    "8312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8318": {
      "op": "SHL"
    },
    "8319": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "8320": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "8321": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8323": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "8324": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "8325": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "8326": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8328": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "8329": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP3",
      "path": "0"
    },
    "8330": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "8331": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SUB",
      "path": "0"
    },
    "8332": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP3",
      "path": "0"
    },
    "8333": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "8334": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "8336": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "8337": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "8338": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8340": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "8341": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "8342": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23EF"
    },
    "8345": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "8347": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "8348": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "CODECOPY",
      "path": "0"
    },
    "8349": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8351": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "8352": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "8353": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "POP",
      "path": "0"
    },
    "8354": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "POP",
      "path": "0"
    },
    "8355": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8357": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MLOAD",
      "path": "0"
    },
    "8358": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "8359": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "8360": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SUB",
      "path": "0"
    },
    "8361": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP1",
      "path": "0"
    },
    "8362": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "REVERT",
      "path": "0"
    },
    "8363": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8364": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "8366": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "DUP1",
      "path": "0"
    },
    "8367": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SLOAD",
      "path": "0"
    },
    "8368": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8370": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "MLOAD",
      "path": "0"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "op": "SUB"
    },
    "8379": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "DUP1",
      "path": "0"
    },
    "8380": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "DUP6",
      "path": "0"
    },
    "8381": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "AND",
      "path": "0"
    },
    "8382": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "SWAP4",
      "path": "0"
    },
    "8383": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SWAP3",
      "path": "0"
    },
    "8384": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "AND",
      "path": "0"
    },
    "8385": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SWAP2",
      "path": "0"
    },
    "8386": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8419": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "SWAP2",
      "path": "0"
    },
    "8420": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "LOG3",
      "path": "0"
    },
    "8421": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2233],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x0"
    },
    "8423": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "DUP1",
      "path": "0"
    },
    "8424": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SLOAD",
      "path": "0"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8431": {
      "op": "SHL"
    },
    "8432": {
      "op": "SUB"
    },
    "8433": {
      "op": "NOT"
    },
    "8434": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "AND",
      "path": "0"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8441": {
      "op": "SHL"
    },
    "8442": {
      "op": "SUB"
    },
    "8443": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP3",
      "path": "0"
    },
    "8444": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "8445": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP3",
      "path": "0"
    },
    "8446": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "AND",
      "path": "0"
    },
    "8447": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP2",
      "path": "0"
    },
    "8448": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "8449": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP2",
      "path": "0"
    },
    "8450": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "OR",
      "path": "0"
    },
    "8451": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "8452": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SSTORE",
      "path": "0"
    },
    "8453": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [2011, 2251],
      "op": "JUMP",
      "path": "0"
    },
    "8454": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8455": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12485, 12492],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8457": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12522],
      "op": "PUSH1",
      "path": "13",
      "statement": 42,
      "value": "0x2"
    },
    "8459": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12543],
      "op": "PUSH20",
      "path": "13",
      "value": "0x0"
    },
    "8480": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12543],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5E58579C"
    },
    "8485": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12543],
      "op": "SWAP1",
      "path": "13"
    },
    "8486": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12543],
      "op": "SWAP2",
      "path": "13"
    },
    "8487": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12544, 12551],
      "op": "DUP8",
      "path": "13"
    },
    "8488": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12553, 12560],
      "op": "DUP8",
      "path": "13"
    },
    "8489": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12553, 12560],
      "op": "DUP8",
      "path": "13"
    },
    "8490": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12562, 12569],
      "op": "DUP8",
      "path": "13"
    },
    "8491": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8493": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MLOAD",
      "path": "13"
    },
    "8494": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP7",
      "path": "13"
    },
    "8495": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "8500": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "AND",
      "path": "13"
    },
    "8501": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "8503": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SHL",
      "path": "13"
    },
    "8504": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8505": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8506": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8508": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8509": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8510": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP7",
      "path": "13"
    },
    "8511": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8512": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8513": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8515": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8516": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP6",
      "path": "13"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8523": {
      "op": "SHL"
    },
    "8524": {
      "op": "SUB"
    },
    "8525": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "AND",
      "path": "13"
    },
    "8526": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8527": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8528": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8530": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8531": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8532": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8534": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8535": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP4",
      "path": "13"
    },
    "8536": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8537": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8538": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8539": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8540": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8542": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8543": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP3",
      "path": "13"
    },
    "8544": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8545": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SUB",
      "path": "13"
    },
    "8546": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP3",
      "path": "13"
    },
    "8547": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8548": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP6",
      "path": "13"
    },
    "8549": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP6",
      "path": "13"
    },
    "8550": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP3",
      "path": "13"
    },
    "8551": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8552": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8553": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8554": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8556": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8557": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SWAP3",
      "path": "13"
    },
    "8558": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8559": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8561": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MUL",
      "path": "13"
    },
    "8562": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8563": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP3",
      "path": "13"
    },
    "8564": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP5",
      "path": "13"
    },
    "8565": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "8566": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8568": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8569": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP5",
      "path": "13"
    },
    "8570": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8571": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MSTORE",
      "path": "13"
    },
    "8572": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "8574": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "NOT",
      "path": "13"
    },
    "8575": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "8577": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP3",
      "path": "13"
    },
    "8578": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8579": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "AND",
      "path": "13"
    },
    "8580": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SWAP1",
      "path": "13"
    },
    "8581": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8582": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8583": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP4",
      "path": "13"
    },
    "8584": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ADD",
      "path": "13"
    },
    "8585": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SWAP3",
      "path": "13"
    },
    "8586": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8587": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8588": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8589": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SWAP7",
      "path": "13"
    },
    "8590": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8591": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8592": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8593": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8594": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8595": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8596": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8597": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8599": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8601": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MLOAD",
      "path": "13"
    },
    "8602": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8603": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP4",
      "path": "13"
    },
    "8604": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SUB",
      "path": "13"
    },
    "8605": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8606": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP7",
      "path": "13"
    },
    "8607": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8608": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "8609": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8610": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8611": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8612": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21AC"
    },
    "8615": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPI",
      "path": "13"
    },
    "8616": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8618": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8619": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "REVERT",
      "path": "13"
    },
    "8620": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8621": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8622": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "GAS",
      "path": "13"
    },
    "8623": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DELEGATECALL",
      "path": "13"
    },
    "8624": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8625": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8626": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8627": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21C0"
    },
    "8630": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPI",
      "path": "13"
    },
    "8631": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "8632": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8634": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8635": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "8636": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "8637": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8639": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "REVERT",
      "path": "13"
    },
    "8640": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8641": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8642": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8643": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8644": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "POP",
      "path": "13"
    },
    "8645": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8647": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MLOAD",
      "path": "13"
    },
    "8648": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "8649": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8651": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP2",
      "path": "13"
    },
    "8652": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "LT",
      "path": "13"
    },
    "8653": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "ISZERO",
      "path": "13"
    },
    "8654": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21D6"
    },
    "8657": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPI",
      "path": "13"
    },
    "8658": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8660": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "DUP1",
      "path": "13"
    },
    "8661": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "REVERT",
      "path": "13"
    },
    "8662": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8663": {
      "op": "POP"
    },
    "8664": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "MLOAD",
      "path": "13"
    },
    "8665": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12511, 12570],
      "op": "SWAP6",
      "path": "13"
    },
    "8666": {
      "fn": "Swap.calculateTokenAmount",
      "offset": [12343, 12577],
      "op": "SWAP5",
      "path": "13"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "op": "POP"
    },
    "8669": {
      "op": "POP"
    },
    "8670": {
      "op": "POP"
    },
    "8671": {
      "op": "POP"
    },
    "8672": {
      "fn": "Swap.calculateTokenAmount",
      "jump": "o",
      "offset": [12343, 12577],
      "op": "JUMP",
      "path": "13"
    },
    "8673": {
      "fn": "SafeMath.sub",
      "offset": [3136, 3291],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8674": {
      "fn": "SafeMath.sub",
      "offset": [3194, 3201],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8676": {
      "fn": "SafeMath.sub",
      "offset": [3226, 3227],
      "op": "DUP3",
      "path": "1",
      "statement": 43
    },
    "8677": {
      "fn": "SafeMath.sub",
      "offset": [3221, 3222],
      "op": "DUP3",
      "path": "1"
    },
    "8678": {
      "fn": "SafeMath.sub",
      "offset": [3221, 3227],
      "op": "GT",
      "path": "1"
    },
    "8679": {
      "branch": 62,
      "fn": "SafeMath.sub",
      "offset": [3221, 3227],
      "op": "ISZERO",
      "path": "1"
    },
    "8680": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2238"
    },
    "8683": {
      "branch": 62,
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "JUMPI",
      "path": "1"
    },
    "8684": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8686": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP1",
      "path": "1"
    },
    "8687": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MLOAD",
      "path": "1"
    },
    "8688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8694": {
      "op": "SHL"
    },
    "8695": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP2",
      "path": "1"
    },
    "8696": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "1"
    },
    "8697": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8699": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8701": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "1"
    },
    "8702": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "1"
    },
    "8703": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "1"
    },
    "8704": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "8706": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8708": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "1"
    },
    "8709": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "1"
    },
    "8710": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "1"
    },
    "8711": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8744": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8746": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "1"
    },
    "8747": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "1"
    },
    "8748": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "1"
    },
    "8749": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "1"
    },
    "8750": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MLOAD",
      "path": "1"
    },
    "8751": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "1"
    },
    "8752": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP2",
      "path": "1"
    },
    "8753": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "1"
    },
    "8754": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SUB",
      "path": "1"
    },
    "8755": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "8757": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "1"
    },
    "8758": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "1"
    },
    "8759": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "REVERT",
      "path": "1"
    },
    "8760": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8761": {
      "op": "POP"
    },
    "8762": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SWAP1",
      "path": "1",
      "statement": 44
    },
    "8763": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SUB",
      "path": "1"
    },
    "8764": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SWAP1",
      "path": "1"
    },
    "8765": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [3136, 3291],
      "op": "JUMP",
      "path": "1"
    },
    "8766": {
      "fn": "SafeMath.mul",
      "offset": [3538, 3753],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8767": {
      "fn": "SafeMath.mul",
      "offset": [3596, 3603],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8769": {
      "branch": 63,
      "fn": "SafeMath.mul",
      "offset": [3619, 3625],
      "op": "DUP3",
      "path": "1"
    },
    "8770": {
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224D"
    },
    "8773": {
      "branch": 63,
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "JUMPI",
      "path": "1"
    },
    "8774": {
      "op": "POP"
    },
    "8775": {
      "fn": "SafeMath.mul",
      "offset": [3634, 3635],
      "op": "PUSH1",
      "path": "1",
      "statement": 45,
      "value": "0x0"
    },
    "8777": {
      "fn": "SafeMath.mul",
      "offset": [3627, 3635],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1342"
    },
    "8780": {
      "fn": "SafeMath.mul",
      "offset": [3627, 3635],
      "op": "JUMP",
      "path": "1"
    },
    "8781": {
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8782": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "1"
    },
    "8783": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "1"
    },
    "8784": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "MUL",
      "path": "1"
    },
    "8785": {
      "fn": "SafeMath.mul",
      "offset": [3661, 3662],
      "op": "DUP3",
      "path": "1"
    },
    "8786": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3658],
      "op": "DUP5",
      "path": "1"
    },
    "8787": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "1"
    },
    "8788": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3658],
      "op": "DUP2",
      "path": "1"
    },
    "8789": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "PUSH2",
      "path": "1",
      "statement": 46,
      "value": "0x225A"
    },
    "8792": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "JUMPI",
      "path": "1"
    },
    "8793": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "INVALID",
      "path": "1"
    },
    "8794": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8795": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "DIV",
      "path": "1"
    },
    "8796": {
      "branch": 64,
      "fn": "SafeMath.mul",
      "offset": [3680, 3690],
      "op": "EQ",
      "path": "1"
    },
    "8797": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2297"
    },
    "8800": {
      "branch": 64,
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "JUMPI",
      "path": "1"
    },
    "8801": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8803": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MLOAD",
      "path": "1"
    },
    "8804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8810": {
      "op": "SHL"
    },
    "8811": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "1"
    },
    "8812": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "1"
    },
    "8813": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8815": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "1"
    },
    "8816": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "1"
    },
    "8817": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "1"
    },
    "8818": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8820": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "1"
    },
    "8821": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP3",
      "path": "1"
    },
    "8822": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "1"
    },
    "8823": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SUB",
      "path": "1"
    },
    "8824": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP3",
      "path": "1"
    },
    "8825": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "1"
    },
    "8826": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "8828": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "1"
    },
    "8829": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "1"
    },
    "8830": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8832": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "1"
    },
    "8833": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "1"
    },
    "8834": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2415"
    },
    "8837": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "8839": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "1"
    },
    "8840": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "CODECOPY",
      "path": "1"
    },
    "8841": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8843": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "1"
    },
    "8844": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "1"
    },
    "8845": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "POP",
      "path": "1"
    },
    "8846": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "POP",
      "path": "1"
    },
    "8847": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8849": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MLOAD",
      "path": "1"
    },
    "8850": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "1"
    },
    "8851": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "1"
    },
    "8852": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SUB",
      "path": "1"
    },
    "8853": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP1",
      "path": "1"
    },
    "8854": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "REVERT",
      "path": "1"
    },
    "8855": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8856": {
      "fn": "SafeMath.mul",
      "offset": [3745, 3746],
      "op": "SWAP4",
      "path": "1",
      "statement": 47
    },
    "8857": {
      "fn": "SafeMath.mul",
      "offset": [3538, 3753],
      "op": "SWAP3",
      "path": "1"
    },
    "8858": {
      "op": "POP"
    },
    "8859": {
      "op": "POP"
    },
    "8860": {
      "op": "POP"
    },
    "8861": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [3538, 3753],
      "op": "JUMP",
      "path": "1"
    },
    "8862": {
      "fn": "Context._msgSender",
      "offset": [598, 702],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8863": {
      "fn": "Context._msgSender",
      "offset": [685, 695],
      "op": "CALLER",
      "path": "7",
      "statement": 48
    },
    "8864": {
      "fn": "Context._msgSender",
      "offset": [598, 702],
      "op": "SWAP1",
      "path": "7"
    },
    "8865": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [598, 702],
      "op": "JUMP",
      "path": "7"
    },
    "8866": {
      "fn": "Pausable._unpause",
      "offset": [2064, 2181],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8867": {
      "offset": [1631, 1639],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22AA"
    },
    "8870": {
      "offset": [1631, 1637],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "8873": {
      "jump": "i",
      "offset": [1631, 1639],
      "op": "JUMP",
      "path": "8"
    },
    "8874": {
      "branch": 60,
      "fn": "Pausable._unpause",
      "offset": [1631, 1639],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8875": {
      "offset": [1623, 1664],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22F2"
    },
    "8878": {
      "branch": 60,
      "offset": [1623, 1664],
      "op": "JUMPI",
      "path": "8"
    },
    "8879": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "8881": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "DUP1",
      "path": "8"
    },
    "8882": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MLOAD",
      "path": "8"
    },
    "8883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8889": {
      "op": "SHL"
    },
    "8890": {
      "offset": [1623, 1664],
      "op": "DUP2",
      "path": "8"
    },
    "8891": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MSTORE",
      "path": "8"
    },
    "8892": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8894": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8896": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "DUP3",
      "path": "8"
    },
    "8897": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "ADD",
      "path": "8"
    },
    "8898": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MSTORE",
      "path": "8"
    },
    "8899": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x14"
    },
    "8901": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "8903": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "DUP3",
      "path": "8"
    },
    "8904": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "ADD",
      "path": "8"
    },
    "8905": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MSTORE",
      "path": "8"
    },
    "8906": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "8929": {
      "op": "SHL"
    },
    "8930": {
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "8932": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "DUP3",
      "path": "8"
    },
    "8933": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "ADD",
      "path": "8"
    },
    "8934": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MSTORE",
      "path": "8"
    },
    "8935": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "SWAP1",
      "path": "8"
    },
    "8936": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "MLOAD",
      "path": "8"
    },
    "8937": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "SWAP1",
      "path": "8"
    },
    "8938": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "DUP2",
      "path": "8"
    },
    "8939": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "SWAP1",
      "path": "8"
    },
    "8940": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "SUB",
      "path": "8"
    },
    "8941": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "8943": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "ADD",
      "path": "8"
    },
    "8944": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "SWAP1",
      "path": "8"
    },
    "8945": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "REVERT",
      "path": "8"
    },
    "8946": {
      "fn": "Pausable._unpause",
      "offset": [1623, 1664],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8947": {
      "fn": "Pausable._unpause",
      "offset": [2132, 2137],
      "op": "PUSH1",
      "path": "8",
      "statement": 49,
      "value": "0x0"
    },
    "8949": {
      "fn": "Pausable._unpause",
      "offset": [2122, 2137],
      "op": "DUP1",
      "path": "8"
    },
    "8950": {
      "fn": "Pausable._unpause",
      "offset": [2122, 2137],
      "op": "SLOAD",
      "path": "8"
    },
    "8951": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8955": {
      "op": "SHL"
    },
    "8956": {
      "op": "NOT"
    },
    "8957": {
      "fn": "Pausable._unpause",
      "offset": [2122, 2137],
      "op": "AND",
      "path": "8"
    },
    "8958": {
      "fn": "Pausable._unpause",
      "offset": [2122, 2137],
      "op": "SWAP1",
      "path": "8"
    },
    "8959": {
      "fn": "Pausable._unpause",
      "offset": [2122, 2137],
      "op": "SSTORE",
      "path": "8"
    },
    "8960": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "PUSH32",
      "path": "8",
      "statement": 50,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "8993": {
      "fn": "Pausable._unpause",
      "offset": [2161, 2173],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2328"
    },
    "8996": {
      "fn": "Pausable._unpause",
      "offset": [2161, 2171],
      "op": "PUSH2",
      "path": "8",
      "value": "0x229E"
    },
    "8999": {
      "fn": "Pausable._unpause",
      "jump": "i",
      "offset": [2161, 2173],
      "op": "JUMP",
      "path": "8"
    },
    "9000": {
      "fn": "Pausable._unpause",
      "offset": [2161, 2173],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9001": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9003": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "DUP1",
      "path": "8"
    },
    "9004": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "MLOAD",
      "path": "8"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9011": {
      "op": "SHL"
    },
    "9012": {
      "op": "SUB"
    },
    "9013": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SWAP1",
      "path": "8"
    },
    "9014": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SWAP3",
      "path": "8"
    },
    "9015": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "AND",
      "path": "8"
    },
    "9016": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "DUP3",
      "path": "8"
    },
    "9017": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "MSTORE",
      "path": "8"
    },
    "9018": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "MLOAD",
      "path": "8"
    },
    "9019": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SWAP1",
      "path": "8"
    },
    "9020": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "DUP2",
      "path": "8"
    },
    "9021": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SWAP1",
      "path": "8"
    },
    "9022": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SUB",
      "path": "8"
    },
    "9023": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "9025": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "ADD",
      "path": "8"
    },
    "9026": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "SWAP1",
      "path": "8"
    },
    "9027": {
      "fn": "Pausable._unpause",
      "offset": [2152, 2174],
      "op": "LOG1",
      "path": "8"
    },
    "9028": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [2064, 2181],
      "op": "JUMP",
      "path": "8"
    },
    "9029": {
      "fn": "Pausable._pause",
      "offset": [1817, 1932],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9030": {
      "offset": [1366, 1374],
      "op": "PUSH2",
      "path": "8",
      "value": "0x234D"
    },
    "9033": {
      "offset": [1366, 1372],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1288"
    },
    "9036": {
      "jump": "i",
      "offset": [1366, 1374],
      "op": "JUMP",
      "path": "8"
    },
    "9037": {
      "fn": "Pausable._pause",
      "offset": [1366, 1374],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9038": {
      "offset": [1365, 1374],
      "op": "ISZERO",
      "path": "8"
    },
    "9039": {
      "offset": [1357, 1395],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2392"
    },
    "9042": {
      "offset": [1357, 1395],
      "op": "JUMPI",
      "path": "8"
    },
    "9043": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "9045": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "DUP1",
      "path": "8"
    },
    "9046": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "9047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9053": {
      "op": "SHL"
    },
    "9054": {
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "9055": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "9056": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "9058": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "9060": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "9061": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "9062": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "9063": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x10"
    },
    "9065": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "9067": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "9068": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "9069": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "9070": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9089": {
      "op": "SHL"
    },
    "9090": {
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "9092": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "DUP3",
      "path": "8"
    },
    "9093": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "9094": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MSTORE",
      "path": "8"
    },
    "9095": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "9096": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "MLOAD",
      "path": "8"
    },
    "9097": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "9098": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "DUP2",
      "path": "8"
    },
    "9099": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "9100": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "SUB",
      "path": "8"
    },
    "9101": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "9103": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "ADD",
      "path": "8"
    },
    "9104": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "SWAP1",
      "path": "8"
    },
    "9105": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "REVERT",
      "path": "8"
    },
    "9106": {
      "fn": "Pausable._pause",
      "offset": [1357, 1395],
      "op": "JUMPDEST",
      "path": "8"
    },
    "9107": {
      "fn": "Pausable._pause",
      "offset": [1876, 1883],
      "op": "PUSH1",
      "path": "8",
      "statement": 51,
      "value": "0x0"
    },
    "9109": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "DUP1",
      "path": "8"
    },
    "9110": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "SLOAD",
      "path": "8"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9115": {
      "op": "SHL"
    },
    "9116": {
      "op": "NOT"
    },
    "9117": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "AND",
      "path": "8"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9122": {
      "op": "SHL"
    },
    "9123": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "OR",
      "path": "8"
    },
    "9124": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "SWAP1",
      "path": "8"
    },
    "9125": {
      "fn": "Pausable._pause",
      "offset": [1876, 1890],
      "op": "SSTORE",
      "path": "8"
    },
    "9126": {
      "fn": "Pausable._pause",
      "offset": [1905, 1925],
      "op": "PUSH32",
      "path": "8",
      "statement": 52,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "9159": {
      "fn": "Pausable._pause",
      "offset": [1912, 1924],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2328"
    },
    "9162": {
      "fn": "Pausable._pause",
      "offset": [1912, 1922],
      "op": "PUSH2",
      "path": "8",
      "value": "0x229E"
    },
    "9165": {
      "fn": "Pausable._pause",
      "jump": "i",
      "offset": [1912, 1924],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "9ba632d94e00c438aefa9199d17dabe729f6e3e5",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol';\nimport \"./OwnerPausable.sol\";\nimport \"./SwapUtils.sol\";\nimport \"./MathUtils.sol\";\n\n/**\n * @title Swap - A StableSwap implementation in solidity.\n * @notice This contract is responsible for custody of closely pegged assets (eg. group of stablecoins)\n * and automatic market making system. Users become an LP (Liquidity Provider) by depositing their tokens\n * in desired ratios for an exchange of the pool token that represents their share of the pool.\n * Users can burn pool tokens and withdraw their share of token(s).\n *\n * Each time a swap between the pooled tokens happens, a set fee incurs which effectively gets\n * distributed to the LPs.\n *\n * In case of emergencies, admin can pause additional deposits, swaps, or single-asset withdraws - which\n * stops the ratio of the tokens in the pool from changing.\n * Users can always withdraw their tokens via multi-asset withdraws.\n *\n * @dev Most of the logic is stored as a library `SwapUtils` for the sake of reducing contract's\n * deployment size.\n */\ncontract Swap is OwnerPausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n    using MathUtils for uint256;\n    using SwapUtils for SwapUtils.Swap;\n\n    // Struct storing data responsible for automatic market maker functionalities. In order to\n    // access this data, this contract uses SwapUtils library. For more details, see SwapUtils.sol\n    SwapUtils.Swap public swapStorage;\n\n    // Maps token address to an index in the pool. Used to prevent duplicate tokens in the pool.\n    // getTokenIndex function also relies on this mapping to retrieve token index.\n    mapping(address => uint8) private tokenIndexes;\n\n    /*** EVENTS ***/\n\n    // events replicated from SwapUtils to make the ABI easier for dumb\n    // clients\n    event TokenSwap(\n        address indexed buyer,\n        uint256 tokensSold,\n        uint256 tokensBought,\n        uint128 soldId,\n        uint128 boughtId\n    );\n    event AddLiquidity(\n        address indexed provider,\n        uint256[] tokenAmounts,\n        uint256[] fees,\n        uint256 invariant,\n        uint256 lpTokenSupply\n    );\n    event RemoveLiquidity(\n        address indexed provider,\n        uint256[] tokenAmounts,\n        uint256 lpTokenSupply\n    );\n    event RemoveLiquidityOne(\n        address indexed provider,\n        uint256 lpTokenAmount,\n        uint256 lpTokenSupply,\n        uint256 boughtId,\n        uint256 tokensBought\n    );\n    event RemoveLiquidityImbalance(\n        address indexed provider,\n        uint256[] tokenAmounts,\n        uint256[] fees,\n        uint256 invariant,\n        uint256 lpTokenSupply\n    );\n    event NewAdminFee(uint256 newAdminFee);\n    event NewSwapFee(uint256 newSwapFee);\n    event NewDepositFee(uint256 newDepositFee);\n    event NewWithdrawFee(uint256 newWithdrawFee);\n    event RampA(\n        uint256 oldA,\n        uint256 newA,\n        uint256 initialTime,\n        uint256 futureTime\n    );\n    event StopRampA(uint256 currentA, uint256 time);\n\n    /**\n     * @notice Deploys this Swap contract with given parameters as default\n     * values. This will also deploy a LPToken that represents users\n     * LP position. The owner of LPToken will be this contract - which means\n     * only this contract is allowed to mint new tokens.\n     *\n     * @param _pooledTokens an array of ERC20s this pool will accept\n     * @param decimals the decimals to use for each pooled token,\n     * eg 8 for WBTC. Cannot be larger than POOL_PRECISION_DECIMALS\n     * @param lpTokenName the long-form name of the token to be deployed\n     * @param lpTokenSymbol the short symbol for the token to be deployed\n     * @param _a the amplification coefficient * n * (n - 1). See the\n     * StableSwap paper for details\n     * @param _fee default swap fee to be initialized with\n     * @param _adminFee default adminFee to be initialized with\n     * @param _depositFee default depositFee to be initialized with\n     * @param _withdrawFee default withdrawFee to be initialized with\n     * @param _devaddr default _devaddr to be initialized with\n     */\n    constructor(\n        IERC20[] memory _pooledTokens,\n        uint8[] memory decimals,\n        string memory lpTokenName,\n        string memory lpTokenSymbol,\n        uint256 _a,\n        uint256 _fee,\n        uint256 _adminFee,\n        uint256 _depositFee,\n        uint256 _withdrawFee,\n        address _devaddr\n    ) public OwnerPausable() ReentrancyGuard() {\n        // Check _pooledTokens and precisions parameter\n        require(_pooledTokens.length > 1, \"_pooledTokens.length <= 1\");\n        require(_pooledTokens.length <= 32, \"_pooledTokens.length > 32\");\n        require(\n            _pooledTokens.length == decimals.length,\n            \"_pooledTokens decimals mismatch\"\n        );\n\n        uint256[] memory precisionMultipliers = new uint256[](decimals.length);\n\n        for (uint8 i = 0; i < _pooledTokens.length; i++) {\n            if (i > 0) {\n                // Check if index is already used. Check if 0th element is a duplicate.\n                require(\n                    tokenIndexes[address(_pooledTokens[i])] == 0 &&\n                        _pooledTokens[0] != _pooledTokens[i],\n                    \"Duplicate tokens\"\n                );\n            }\n            require(\n                address(_pooledTokens[i]) != address(0),\n                \"The 0 address isn't an ERC-20\"\n            );\n            require(\n                decimals[i] <= SwapUtils.POOL_PRECISION_DECIMALS,\n                \"Token decimals exceeds max\"\n            );\n            precisionMultipliers[i] =\n                10 **\n                    uint256(SwapUtils.POOL_PRECISION_DECIMALS).sub(\n                        uint256(decimals[i])\n                    );\n            tokenIndexes[address(_pooledTokens[i])] = i;\n        }\n\n        // Check _a, _fee, _adminFee, _depositFee, _withdrawFee\n        require(_a < SwapUtils.MAX_A, \"_a exceeds maximum\");\n        require(_fee < SwapUtils.MAX_SWAP_FEE, \"_fee exceeds maximum\");\n        require(\n            _adminFee < SwapUtils.MAX_ADMIN_FEE,\n            \"_adminFee exceeds maximum\"\n        );\n        require(\n            _withdrawFee < SwapUtils.MAX_WITHDRAW_FEE,\n            \"_withdrawFee exceeds maximum\"\n        );\n        require(\n            _depositFee < SwapUtils.MAX_DEPOSIT_FEE,\n            \"_depositFee exceeds maximum\"\n        );\n\n        // Initialize swapStorage struct\n        swapStorage.lpToken = new LPToken(\n            lpTokenName,\n            lpTokenSymbol,\n            SwapUtils.POOL_PRECISION_DECIMALS\n        );\n        swapStorage.pooledTokens = _pooledTokens;\n        swapStorage.tokenPrecisionMultipliers = precisionMultipliers;\n        swapStorage.balances = new uint256[](_pooledTokens.length);\n        swapStorage.initialA = _a.mul(SwapUtils.A_PRECISION);\n        swapStorage.futureA = _a.mul(SwapUtils.A_PRECISION);\n        swapStorage.initialATime = 0;\n        swapStorage.futureATime = 0;\n        swapStorage.swapFee = _fee;\n        swapStorage.adminFee = _adminFee;\n        swapStorage.defaultDepositFee = _depositFee;\n        swapStorage.defaultWithdrawFee = _withdrawFee;\n        swapStorage.devaddr = _devaddr;\n\n    }\n\n    /*** MODIFIERS ***/\n\n    /**\n     * @notice Modifier to check deadline against current timestamp\n     * @param deadline latest timestamp to accept this transaction\n     */\n    modifier deadlineCheck(uint256 deadline) {\n        require(block.timestamp <= deadline, \"Deadline not met\");\n        _;\n    }\n\n    /*** VIEW FUNCTIONS ***/\n\n    /**\n     * @notice Return A, the amplification coefficient * n * (n - 1)\n     * @dev See the StableSwap paper for details\n     * @return A parameter\n     */\n    function getA() external view returns (uint256) {\n        return swapStorage.getA();\n    }\n\n    /**\n     * @notice Return A in its raw precision form\n     * @dev See the StableSwap paper for details\n     * @return A parameter in its raw precision form\n     */\n    function getAPrecise() external view returns (uint256) {\n        return swapStorage.getAPrecise();\n    }\n\n    /**\n     * @notice Return address of the pooled token at given index. Reverts if tokenIndex is out of range.\n     * @param index the index of the token\n     * @return address of the token at given index\n     */\n    function getToken(uint8 index) public view returns (IERC20) {\n        require(index < swapStorage.pooledTokens.length, \"Out of range\");\n        return swapStorage.pooledTokens[index];\n    }\n\n    /**\n     * @notice Return the index of the given token address. Reverts if no matching\n     * token is found.\n     * @param tokenAddress address of the token\n     * @return the index of the given token address\n     */\n    function getTokenIndex(address tokenAddress) external view returns (uint8) {\n        uint8 index = tokenIndexes[tokenAddress];\n        require(\n            address(getToken(index)) == tokenAddress,\n            \"Token does not exist\"\n        );\n        return index;\n    }\n\n    /**\n     * @notice Return timestamp of last deposit of given address\n     * @return timestamp of the last deposit made by the given address\n     */\n    function getDepositTimestamp(address user) external view returns (uint256) {\n        return swapStorage.getDepositTimestamp(user);\n    }\n\n    /**\n     * @notice Return current balance of the pooled token at given index\n     * @param index the index of the token\n     * @return current balance of the pooled token at given index with token's native precision\n     */\n    function getTokenBalance(uint8 index) external view returns (uint256) {\n        require(index < swapStorage.pooledTokens.length, \"Index out of range\");\n        return swapStorage.balances[index];\n    }\n\n    /**\n     * @notice Return balances of pooled tokens\n     * @return current balances of all tokens in pool\n     */\n    function getBalances() external view returns (uint256[] memory) {\n        return swapStorage.balances;\n    }\n\n    /**\n        @notice Returns the swap fee\n        @return current swap fee\n     */\n     function getSwapFee() external view returns (uint256) {\n         return swapStorage.swapFee;\n     }\n\n    /**\n        @notice Returns address of lp token\n        @return address of lp token\n     */\n     function getLpToken() external view returns (address) {\n         return address(swapStorage.lpToken);\n     }\n\n    /**\n     * @notice Get the virtual price, to help calculate profit\n     * @return the virtual price, scaled to the POOL_PRECISION_DECIMALS\n     */\n    function getVirtualPrice() external view returns (uint256) {\n        return swapStorage.getVirtualPrice();\n    }\n\n    /**\n     * @notice Calculate amount of tokens you receive on swap\n     * @param tokenIndexFrom the token the user wants to sell\n     * @param tokenIndexTo the token the user wants to buy\n     * @param dx the amount of tokens the user wants to sell. If the token charges\n     * a fee on transfers, use the amount that gets transferred after the fee.\n     * @return amount of tokens the user will receive\n     */\n    function calculateSwap(\n        uint8 tokenIndexFrom,\n        uint8 tokenIndexTo,\n        uint256 dx\n    ) external view returns (uint256) {\n        return swapStorage.calculateSwap(tokenIndexFrom, tokenIndexTo, dx);\n    }\n\n    /**\n     * @notice A simple method to calculate prices from deposits or\n     * withdrawals, excluding fees but including slippage. This is\n     * helpful as an input into the various \"min\" parameters on calls\n     * to fight front-running\n     *\n     * @dev This shouldn't be used outside frontends for user estimates.\n     *\n     * @param account address that is depositing or withdrawing tokens\n     * @param amounts an array of token amounts to deposit or withdrawal,\n     * corresponding to pooledTokens. The amount should be in each\n     * pooled token's native precision. If a token charges a fee on transfers,\n     * use the amount that gets transferred after the fee.\n     * @param deposit whether this is a deposit or a withdrawal\n     * @return token amount the user will receive\n     */\n    function calculateTokenAmount(\n        address account,\n        uint256[] calldata amounts,\n        bool deposit\n    ) external view returns (uint256) {\n        return swapStorage.calculateTokenAmount(account, amounts, deposit);\n    }\n\n    /**\n     * @notice A simple method to calculate amount of each underlying\n     * tokens that is returned upon burning given amount of LP tokens\n     * @param account the address that is withdrawing tokens\n     * @param amount the amount of LP tokens that would be burned on withdrawal\n     * @return array of token balances that the user will receive\n     */\n    function calculateRemoveLiquidity(address account, uint256 amount)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        return swapStorage.calculateRemoveLiquidity(account, amount);\n    }\n\n    /**\n     * @notice Calculate the amount of underlying token available to withdraw\n     * when withdrawing via only single token\n     * @param account the address that is withdrawing tokens\n     * @param tokenAmount the amount of LP token to burn\n     * @param tokenIndex index of which token will be withdrawn\n     * @return availableTokenAmount calculated amount of underlying token\n     * available to withdraw\n     */\n    function calculateRemoveLiquidityOneToken(\n        address account,\n        uint256 tokenAmount,\n        uint8 tokenIndex\n    ) external view returns (uint256 availableTokenAmount) {\n        (availableTokenAmount, ) = swapStorage.calculateWithdrawOneToken(\n            account,\n            tokenAmount,\n            tokenIndex\n        );\n    }\n\n    /**\n     * @notice Calculate the fee that is applied when the given user withdraws. The withdraw fee\n     * decays linearly over period of 4 weeks. For example, depositing and withdrawing right away\n     * will charge you the full amount of withdraw fee. But withdrawing after 4 weeks will charge you\n     * no additional fees.\n     * @dev returned value should be divided by FEE_DENOMINATOR to convert to correct decimals\n     * @param user address you want to calculate withdraw fee of\n     * @return current withdraw fee of the user\n     */\n    function calculateCurrentWithdrawFee(address user)\n        external\n        view\n        returns (uint256)\n    {\n        return swapStorage.calculateCurrentWithdrawFee(user);\n    }\n\n    /**\n     * @notice This function reads the accumulated amount of admin fees of the token with given index\n     * @param index Index of the pooled token\n     * @return admin's token balance in the token's precision\n     */\n    function getAdminBalance(uint256 index) external view returns (uint256) {\n        return swapStorage.getAdminBalance(index);\n    }\n\n    /*** STATE MODIFYING FUNCTIONS ***/\n\n    /**\n     * @notice Swap two tokens using this pool\n     * @param tokenIndexFrom the token the user wants to swap from\n     * @param tokenIndexTo the token the user wants to swap to\n     * @param dx the amount of tokens the user wants to swap from\n     * @param minDy the min amount the user would like to receive, or revert.\n     * @param deadline latest timestamp to accept this transaction\n     */\n    function swap(\n        uint8 tokenIndexFrom,\n        uint8 tokenIndexTo,\n        uint256 dx,\n        uint256 minDy,\n        uint256 deadline\n    )\n        external\n        nonReentrant\n        whenNotPaused\n        deadlineCheck(deadline)\n        returns (uint256)\n    {\n        return swapStorage.swap(tokenIndexFrom, tokenIndexTo, dx, minDy);\n    }\n\n    /**\n     * @notice Add liquidity to the pool with given amounts\n     * @param amounts the amounts of each token to add, in their native precision\n     * @param minToMint the minimum LP tokens adding this amount of liquidity\n     * should mint, otherwise revert. Handy for front-running mitigation\n     * @param deadline latest timestamp to accept this transaction\n     * @return amount of LP token user minted and received\n     */\n    function addLiquidity(\n        uint256[] calldata amounts,\n        uint256 minToMint,\n        uint256 deadline\n    )\n        external\n        nonReentrant\n        whenNotPaused\n        deadlineCheck(deadline)\n        returns (uint256)\n    {\n        return swapStorage.addLiquidity(amounts, minToMint);\n    }\n\n    /**\n     * @notice Burn LP tokens to remove liquidity from the pool. Withdraw fee that decays linearly\n     * over period of 4 weeks since last deposit will apply.\n     * @dev Liquidity can always be removed, even when the pool is paused.\n     * @param amount the amount of LP tokens to burn\n     * @param minAmounts the minimum amounts of each token in the pool\n     *        acceptable for this burn. Useful as a front-running mitigation\n     * @param deadline latest timestamp to accept this transaction\n     * @return amounts of tokens user received\n     */\n    function removeLiquidity(\n        uint256 amount,\n        uint256[] calldata minAmounts,\n        uint256 deadline\n    ) external nonReentrant deadlineCheck(deadline) returns (uint256[] memory) {\n        return swapStorage.removeLiquidity(amount, minAmounts);\n    }\n\n    /**\n     * @notice Remove liquidity from the pool all in one token. Withdraw fee that decays linearly\n     * over period of 4 weeks since last deposit will apply.\n     * @param tokenAmount the amount of the token you want to receive\n     * @param tokenIndex the index of the token you want to receive\n     * @param minAmount the minimum amount to withdraw, otherwise revert\n     * @param deadline latest timestamp to accept this transaction\n     * @return amount of chosen token user received\n     */\n    function removeLiquidityOneToken(\n        uint256 tokenAmount,\n        uint8 tokenIndex,\n        uint256 minAmount,\n        uint256 deadline\n    )\n        external\n        nonReentrant\n        whenNotPaused\n        deadlineCheck(deadline)\n        returns (uint256)\n    {\n        return\n            swapStorage.removeLiquidityOneToken(\n                tokenAmount,\n                tokenIndex,\n                minAmount\n            );\n    }\n\n    /**\n     * @notice Remove liquidity from the pool, weighted differently than the\n     * pool's current balances. Withdraw fee that decays linearly\n     * over period of 4 weeks since last deposit will apply.\n     * @param amounts how much of each token to withdraw\n     * @param maxBurnAmount the max LP token provider is willing to pay to\n     * remove liquidity. Useful as a front-running mitigation.\n     * @param deadline latest timestamp to accept this transaction\n     * @return amount of LP tokens burned\n     */\n    function removeLiquidityImbalance(\n        uint256[] calldata amounts,\n        uint256 maxBurnAmount,\n        uint256 deadline\n    )\n        external\n        nonReentrant\n        whenNotPaused\n        deadlineCheck(deadline)\n        returns (uint256)\n    {\n        return swapStorage.removeLiquidityImbalance(amounts, maxBurnAmount);\n    }\n\n    /*** ADMIN FUNCTIONS ***/\n\n    /**\n     * @notice Updates the user withdraw fee. This function can only be called by\n     * the pool token. Should be used to update the withdraw fee on transfer of pool tokens.\n     * Transferring your pool token will reset the 4 weeks period. If the recipient is already\n     * holding some pool tokens, the withdraw fee will be discounted in respective amounts.\n     * @param recipient address of the recipient of pool token\n     * @param transferAmount amount of pool token to transfer\n     */\n    function updateUserWithdrawFee(address recipient, uint256 transferAmount)\n        external\n    {\n        require(\n            msg.sender == address(swapStorage.lpToken),\n            \"Only callable by pool token\"\n        );\n        swapStorage.updateUserWithdrawFee(recipient, transferAmount);\n    }\n\n    /**\n     * @notice Withdraw all admin fees to the contract owner\n     */\n    function withdrawAdminFees() external onlyOwner {\n        swapStorage.withdrawAdminFees(owner());\n    }\n\n    /**\n     * @notice Update the admin fee. Admin fee takes portion of the swap fee.\n     * @param newAdminFee new admin fee to be applied on future transactions\n     */\n    function setAdminFee(uint256 newAdminFee) external onlyOwner {\n        swapStorage.setAdminFee(newAdminFee);\n    }\n\n    /**\n     * @notice Update the swap fee to be applied on swaps\n     * @param newSwapFee new swap fee to be applied on future transactions\n     */\n    function setSwapFee(uint256 newSwapFee) external onlyOwner {\n        swapStorage.setSwapFee(newSwapFee);\n    }\n\n        /**\n     * @notice Update the deposit fee. \n     * @param newDepositFee new deposit fee to be applied on future deposits\n     */\n    function setDefaultDepositFee(uint256 newDepositFee) external onlyOwner {\n        swapStorage.setDefaultDepositFee(newDepositFee);\n    }\n\n    /**\n     * @notice Update the withdraw fee. This fee decays linearly over 4 weeks since\n     * user's last deposit.\n     * @param newWithdrawFee new withdraw fee to be applied on future deposits\n     */\n    function setDefaultWithdrawFee(uint256 newWithdrawFee) external onlyOwner {\n        swapStorage.setDefaultWithdrawFee(newWithdrawFee);\n    }\n\n    /**\n     * @notice Start ramping up or down A parameter towards given futureA and futureTime\n     * Checks if the change is too rapid, and commits the new A value only when it falls under\n     * the limit range.\n     * @param futureA the new A to ramp towards\n     * @param futureTime timestamp when the new A should be reached\n     */\n    function rampA(uint256 futureA, uint256 futureTime) external onlyOwner {\n        swapStorage.rampA(futureA, futureTime);\n    }\n\n    /**\n     * @notice Stop ramping A immediately. Reverts if ramp A is already stopped.\n     */\n    function stopRampA() external onlyOwner {\n        swapStorage.stopRampA();\n    }\n\n        // Update dev address by the previous dev.\n    function setDevAddress(address _devaddr) external onlyOwner {\n        swapStorage.setDevAddress(_devaddr);\n    }\n}\n",
  "sourceMap": "1319:20950:13:-:0;;;4382:3096;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4382:3096:13;;-1:-1:-1;4382:3096:13;;;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;945:5:8;935:15;;-1:-1:-1;;;;935:15:8;;;;1760:22:9;;;4813:20:13;;:24:::2;4805:62;;;::::0;;-1:-1:-1;;;4805:62:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4909:2;4885:13;:20;:26;;4877:64;;;::::0;;-1:-1:-1;;;4877:64:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4996:8;:15;4972:13;:20;:39;4951:117;;;::::0;;-1:-1:-1;;;4951:117:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5079:37;5133:8;:15;-1:-1:-1::0;;;;;5119:30:13::2;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5119:30:13::2;;5079:70;;5165:7;5160:941;5182:13;:20;5178:1;:24;;;5160:941;;;5227:5;::::0;::::2;::::0;5223:327:::2;;5369:12;:39;5390:13;5404:1;5390:16;;;;;;;;;;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;5369:39:13::2;::::0;;;::::2;::::0;;;;;;-1:-1:-1;5369:39:13;;::::2;;:44:::0;:108;::::2;;;;5461:13;5475:1;5461:16;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5441:36:13::2;:13;5455:1;5441:16;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5441:36:13::2;;;5369:108;5340:195;;;::::0;;-1:-1:-1;;;5340:195:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;5340:195:13;;;;;;;;;;;;;::::2;;5625:1;-1:-1:-1::0;;;;;5588:39:13::2;5596:13;5610:1;5596:16;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5588:39:13::2;;;5563:127;;;::::0;;-1:-1:-1;;;5563:127:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4146:2:14;5729:48:13;;:8;5738:1;5729:11;;;;;;;;;;;;;;;;:48;;;;5704:133;;;::::0;;-1:-1:-1;;;5704:133:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5919:114;5999:8;6008:1;5999:11;;;;;;;;;;;;;;;;5991:20;;4146:2:14;5919:42:13;;:46;;;;;;:114;;;;:::i;:::-;5893:2;:140;5851:20;5872:1;5851:23;;;;;;;;;;;;;;;:182;;;::::0;::::2;6089:1;6047:12;:39;6068:13;6082:1;6068:16;;;;;;;;;;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;6047:39:13::2;::::0;;;::::2;::::0;;;;;;-1:-1:-1;6047:39:13;:43;;-1:-1:-1;;6047:43:13::2;;::::0;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;5204:3:13::2;5160:941;;;;5297:5:14;6183:2:13;:20;6175:51;;;::::0;;-1:-1:-1;;;6175:51:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;6175:51:13;;;;;;;;;;;;;::::2;;4455:5:14;6244:4:13;:29;6236:62;;;::::0;;-1:-1:-1;;;6236:62:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4743:6:14;6329:9:13;:35;6308:107;;;::::0;;-1:-1:-1;;;6308:107:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;4946:5:14;6446:12:13;:41;6425:116;;;::::0;;-1:-1:-1;;;6425:116:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5051:5:14;6572:11:13;:39;6551:113;;;::::0;;-1:-1:-1;;;6551:113:13;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;6763:11;6788:13;4146:2:14;6738:120:13;;;;;:::i;:::-;;::::0;::::2;::::0;;;;;;;;;;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;;;;::::2;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6738:120:13;;::::2;::::0;;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;6716:19:13;:142;;-1:-1:-1;;;;;;6716:142:13::2;-1:-1:-1::0;;;;;6716:142:13;;;::::2;::::0;;;::::2;::::0;;6868:40;;::::2;::::0;:24;;:40:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;6918:60:13;;::::2;::::0;:37;;:60:::2;::::0;::::2;::::0;::::2;:::i;:::-;;7025:13;:20;-1:-1:-1::0;;;;;7011:35:13::2;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;7011:35:13::2;-1:-1:-1::0;6988:58:13;;::::2;::::0;:20;;:58:::2;::::0;;::::2;::::0;::::2;:::i;:::-;;7079:29;5256:3:14;7079:2:13;:6;;;;;;:29;;;;:::i;:::-;7056:11;:52:::0;7140:29:::2;:2:::0;5256:3:14::2;7140:6:13;;::::0;;::::2;;;:29:::0;::::2;:::i;:::-;7118:19:::0;:51;-1:-1:-1;7206:1:13::2;7179:24:::0;:28;;;7217:23;:27;7254:19;:26;;;;7290:20;:32;;;;7332:29;:43;7385:30;:45;7440:19;:30;;-1:-1:-1;;;;;;7440:30:13::2;-1:-1:-1::0;;;;;7440:30:13;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;1319:20950:13;;-1:-1:-1;;;;1319:20950:13;598:104:7;685:10;598:104;:::o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:1;;;3136:155;;;;;:::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:1;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3538:215;-1:-1:-1;;;3538:215:1:o;1319:20950:13:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1319:20950:13;-1:-1:-1;;;;;1319:20950:13;;;;;;;;;;;-1:-1:-1;1319:20950:13;;;;;;;-1:-1:-1;1319:20950:13;;;-1:-1:-1;1319:20950:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1319:20950:13;;;-1:-1:-1;1319:20950:13;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;1319:20950:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Swap.sol",
  "type": "contract"
}
