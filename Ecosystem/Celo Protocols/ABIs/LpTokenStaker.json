{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint128[]",
          "name": "_startTimeOffset",
          "type": "uint128[]"
        },
        {
          "internalType": "uint128[]",
          "name": "_rewardsPerSecond",
          "type": "uint128[]"
        },
        {
          "internalType": "contract IERC20",
          "name": "_fixedRewardToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract Oracle",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_oracleIndex",
          "type": "uint256"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_pids",
          "type": "uint256[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimableReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "emissionSchedule",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "startTimeOffset",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "rewardsPerSecond",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "contract Oracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "oracleIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardMinter",
      "outputs": [
        {
          "internalType": "contract Minter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Minter",
          "name": "_rewardMinter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "11": "contracts/LpTokenStaker.sol",
    "2": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "3": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/LpTokenStaker.sol",
    "exportedSymbols": {
      "Address": [6440],
      "Context": [6144],
      "IERC20": [5868],
      "LpTokenStaker": [3792],
      "Minter": [2673],
      "Oracle": [2679],
      "Ownable": [5362],
      "SafeERC20": [6081],
      "SafeMath": [5790]
    },
    "id": 3793,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2661,
        "literals": ["solidity", "0.7", ".6"],
        "nodeType": "PragmaDirective",
        "src": "33:22:11"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2662,
        "nodeType": "ImportDirective",
        "scope": 3793,
        "sourceUnit": 5869,
        "src": "57:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2663,
        "nodeType": "ImportDirective",
        "scope": 3793,
        "sourceUnit": 6082,
        "src": "114:59:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2664,
        "nodeType": "ImportDirective",
        "scope": 3793,
        "sourceUnit": 5791,
        "src": "174:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2665,
        "nodeType": "ImportDirective",
        "scope": 3793,
        "sourceUnit": 5363,
        "src": "226:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2673,
        "linearizedBaseContracts": [2673],
        "name": "Minter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 2672,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "318:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "337:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:36:11"
            },
            "returnParameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:0:11"
            },
            "scope": 2673,
            "src": "304:59:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3793,
        "src": "281:84:11"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2679,
        "linearizedBaseContracts": [2679],
        "name": "Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "50d25bcd",
            "id": 2678,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:2:11"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "437:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:8:11"
            },
            "scope": 2679,
            "src": "390:55:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3793,
        "src": "367:80:11"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2680,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5362,
              "src": "722:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5362",
                "typeString": "contract Ownable"
              }
            },
            "id": 2681,
            "nodeType": "InheritanceSpecifier",
            "src": "722:7:11"
          }
        ],
        "contractDependencies": [5362, 6144],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3792,
        "linearizedBaseContracts": [3792, 5362, 6144],
        "name": "LpTokenStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2684,
            "libraryName": {
              "id": 2682,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5790,
              "src": "742:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5790",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "736:27:11",
            "typeName": {
              "id": 2683,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "755:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2687,
            "libraryName": {
              "id": 2685,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6081,
              "src": "774:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6081",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "768:27:11",
            "typeName": {
              "id": 2686,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5868,
              "src": "788:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5868",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "LpTokenStaker.UserInfo",
            "id": 2692,
            "members": [
              {
                "constant": false,
                "id": 2689,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 2692,
                "src": "853:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2688,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "853:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2691,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "scope": 2692,
                "src": "877:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2690,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "877:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 3792,
            "src": "827:75:11",
            "visibility": "public"
          },
          {
            "canonicalName": "LpTokenStaker.PoolInfo",
            "id": 2703,
            "members": [
              {
                "constant": false,
                "id": 2694,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "scope": 2703,
                "src": "959:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$5868",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 2693,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5868,
                  "src": "959:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2696,
                "mutability": "mutable",
                "name": "oracleIndex",
                "nodeType": "VariableDeclaration",
                "scope": 2703,
                "src": "1016:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2695,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1016:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2698,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "scope": 2703,
                "src": "1120:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2697,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1120:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2700,
                "mutability": "mutable",
                "name": "lastRewardTime",
                "nodeType": "VariableDeclaration",
                "scope": 2703,
                "src": "1201:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2699,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1201:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2702,
                "mutability": "mutable",
                "name": "accRewardPerShare",
                "nodeType": "VariableDeclaration",
                "scope": 2703,
                "src": "1281:25:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2701,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1281:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 3792,
            "src": "933:437:11",
            "visibility": "public"
          },
          {
            "canonicalName": "LpTokenStaker.EmissionPoint",
            "id": 2708,
            "members": [
              {
                "constant": false,
                "id": 2705,
                "mutability": "mutable",
                "name": "startTimeOffset",
                "nodeType": "VariableDeclaration",
                "scope": 2708,
                "src": "1465:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2704,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1465:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2707,
                "mutability": "mutable",
                "name": "rewardsPerSecond",
                "nodeType": "VariableDeclaration",
                "scope": 2708,
                "src": "1498:24:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2706,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "EmissionPoint",
            "nodeType": "StructDefinition",
            "scope": 3792,
            "src": "1434:95:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b8e5563",
            "id": 2710,
            "mutability": "mutable",
            "name": "rewardMinter",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "1535:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Minter_$2673",
              "typeString": "contract Minter"
            },
            "typeName": {
              "id": 2709,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2673,
              "src": "1535:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$2673",
                "typeString": "contract Minter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eacdaabc",
            "id": 2712,
            "mutability": "mutable",
            "name": "rewardsPerSecond",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "1567:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2711,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1567:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 2715,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "1630:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
              "typeString": "struct LpTokenStaker.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "id": 2713,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2703,
                "src": "1630:8:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                  "typeString": "struct LpTokenStaker.PoolInfo"
                }
              },
              "id": 2714,
              "nodeType": "ArrayTypeName",
              "src": "1630:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage_ptr",
                "typeString": "struct LpTokenStaker.PoolInfo[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "334d0bbd",
            "id": 2718,
            "mutability": "mutable",
            "name": "emissionSchedule",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "1887:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage",
              "typeString": "struct LpTokenStaker.EmissionPoint[]"
            },
            "typeName": {
              "baseType": {
                "id": 2716,
                "name": "EmissionPoint",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2708,
                "src": "1887:13:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EmissionPoint_$2708_storage_ptr",
                  "typeString": "struct LpTokenStaker.EmissionPoint"
                }
              },
              "id": 2717,
              "nodeType": "ArrayTypeName",
              "src": "1887:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage_ptr",
                "typeString": "struct LpTokenStaker.EmissionPoint[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 2724,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "1980:64:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo))"
            },
            "typeName": {
              "id": 2723,
              "keyType": {
                "id": 2719,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1980:48:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo))"
              },
              "valueType": {
                "id": 2722,
                "keyType": {
                  "id": 2720,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1999:28:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                  "typeString": "mapping(address => struct LpTokenStaker.UserInfo)"
                },
                "valueType": {
                  "id": 2721,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2692,
                  "src": "2018:8:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                    "typeString": "struct LpTokenStaker.UserInfo"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 2727,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "2137:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2137:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2170:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78e97925",
            "id": 2729,
            "mutability": "mutable",
            "name": "startTime",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "2228:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2728,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2228:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b69a7d8",
            "id": 2732,
            "mutability": "mutable",
            "name": "oracles",
            "nodeType": "VariableDeclaration",
            "scope": 3792,
            "src": "2302:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
              "typeString": "contract Oracle[]"
            },
            "typeName": {
              "baseType": {
                "id": 2730,
                "name": "Oracle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2679,
                "src": "2302:6:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Oracle_$2679",
                  "typeString": "contract Oracle"
                }
              },
              "id": 2731,
              "nodeType": "ArrayTypeName",
              "src": "2302:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage_ptr",
                "typeString": "contract Oracle[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2740,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "2346:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2736,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "2368:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2738,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "2389:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2345:59:11"
            },
            "src": "2332:73:11"
          },
          {
            "anonymous": false,
            "id": 2748,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2742,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "2425:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "2447:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "2468:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2424:59:11"
            },
            "src": "2410:74:11"
          },
          {
            "anonymous": false,
            "id": 2756,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "2522:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "2552:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2756,
                  "src": "2581:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2512:89:11"
            },
            "src": "2489:113:11"
          },
          {
            "body": {
              "id": 2822,
              "nodeType": "Block",
              "src": "2754:829:11",
              "statements": [
                {
                  "assignments": [2768],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2768,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 2822,
                      "src": "2764:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2764:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2771,
                  "initialValue": {
                    "expression": {
                      "id": 2769,
                      "name": "_startTimeOffset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "2781:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                        "typeString": "uint128[] memory"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2781:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2764:40:11"
                },
                {
                  "body": {
                    "id": 2799,
                    "nodeType": "Block",
                    "src": "2860:229:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 2790,
                                    "name": "_startTimeOffset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2759,
                                    "src": "2966:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                                      "typeString": "uint128[] memory"
                                    }
                                  },
                                  "id": 2792,
                                  "indexExpression": {
                                    "id": 2791,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "2983:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2966:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2793,
                                    "name": "_rewardsPerSecond",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2762,
                                    "src": "3025:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                                      "typeString": "uint128[] memory"
                                    }
                                  },
                                  "id": 2795,
                                  "indexExpression": {
                                    "id": 2794,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2773,
                                    "src": "3043:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3025:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "id": 2789,
                                "name": "EmissionPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2708,
                                "src": "2913:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_EmissionPoint_$2708_storage_ptr_$",
                                  "typeString": "type(struct LpTokenStaker.EmissionPoint storage pointer)"
                                }
                              },
                              "id": 2796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": ["startTimeOffset", "rewardsPerSecond"],
                              "nodeType": "FunctionCall",
                              "src": "2913:151:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EmissionPoint_$2708_memory_ptr",
                                "typeString": "struct LpTokenStaker.EmissionPoint memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EmissionPoint_$2708_memory_ptr",
                                "typeString": "struct LpTokenStaker.EmissionPoint memory"
                              }
                            ],
                            "expression": {
                              "id": 2786,
                              "name": "emissionSchedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2718,
                              "src": "2874:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage",
                                "typeString": "struct LpTokenStaker.EmissionPoint storage ref[] storage ref"
                              }
                            },
                            "id": 2788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2874:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_EmissionPoint_$2708_storage_$returns$__$",
                              "typeString": "function (struct LpTokenStaker.EmissionPoint storage ref)"
                            }
                          },
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2874:204:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2798,
                        "nodeType": "ExpressionStatement",
                        "src": "2874:204:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2778,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2773,
                        "src": "2843:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2847:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2843:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2852:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2843:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2800,
                  "initializationExpression": {
                    "assignments": [2773],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2773,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2800,
                        "src": "2819:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2819:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2777,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2774,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2768,
                        "src": "2831:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2831:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2819:22:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "2855:3:11",
                      "subExpression": {
                        "id": 2783,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2773,
                        "src": "2855:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2785,
                    "nodeType": "ExpressionStatement",
                    "src": "2855:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2814:275:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3213:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2804,
                          "name": "Oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2679,
                          "src": "3206:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Oracle_$2679_$",
                            "typeString": "type(contract Oracle)"
                          }
                        },
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3206:9:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$2679",
                          "typeString": "contract Oracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Oracle_$2679",
                          "typeString": "contract Oracle"
                        }
                      ],
                      "expression": {
                        "id": 2801,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2732,
                        "src": "3193:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                          "typeString": "contract Oracle[] storage ref"
                        }
                      },
                      "id": 2803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3193:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Oracle_$2679_$returns$__$",
                        "typeString": "function (contract Oracle)"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:23:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2813,
                            "name": "_fixedRewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2764,
                            "src": "3384:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$5868",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3432:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 2815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3463:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "id": 2816,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3498:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3498:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3550:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$5868",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2812,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2703,
                          "src": "3348:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$2703_storage_ptr_$",
                            "typeString": "type(struct LpTokenStaker.PoolInfo storage pointer)"
                          }
                        },
                        "id": 2819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": ["lpToken", "oracleIndex", "allocPoint", "lastRewardTime", "accRewardPerShare"],
                        "nodeType": "FunctionCall",
                        "src": "3348:218:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_memory_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_memory_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "id": 2809,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2715,
                        "src": "3321:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                          "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3321:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$2703_storage_$returns$__$",
                        "typeString": "function (struct LpTokenStaker.PoolInfo storage ref)"
                      }
                    },
                    "id": 2820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:255:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2821,
                  "nodeType": "ExpressionStatement",
                  "src": "3321:255:11"
                }
              ]
            },
            "id": 2823,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "_startTimeOffset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "2629:33:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2757,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "2629:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 2758,
                    "nodeType": "ArrayTypeName",
                    "src": "2629:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2762,
                  "mutability": "mutable",
                  "name": "_rewardsPerSecond",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "2672:34:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2760,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "2672:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 2761,
                    "nodeType": "ArrayTypeName",
                    "src": "2672:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2764,
                  "mutability": "mutable",
                  "name": "_fixedRewardToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "2716:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "2716:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2619:127:11"
            },
            "returnParameters": {
              "id": 2766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2754:0:11"
            },
            "scope": 3792,
            "src": "2608:975:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2839,
              "nodeType": "Block",
              "src": "3646:77:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2829,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "3664:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3677:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3664:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3656:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2833,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:23:11"
                },
                {
                  "expression": {
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2834,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2729,
                      "src": "3689:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2835,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3701:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3701:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3689:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "3689:27:11"
                }
              ]
            },
            "functionSelector": "be9a6555",
            "id": 2840,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2826,
                "modifierName": {
                  "id": 2825,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5311,
                  "src": "3636:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3636:9:11"
              }
            ],
            "name": "start",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3626:2:11"
            },
            "returnParameters": {
              "id": 2827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:0:11"
            },
            "scope": 3792,
            "src": "3612:111:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2859,
              "nodeType": "Block",
              "src": "3787:89:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Minter_$2673",
                          "typeString": "contract Minter"
                        },
                        "id": 2852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2848,
                          "name": "rewardMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2710,
                          "src": "3805:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minter_$2673",
                            "typeString": "contract Minter"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3828:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2849,
                            "name": "Minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2673,
                            "src": "3821:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Minter_$2673_$",
                              "typeString": "type(contract Minter)"
                            }
                          },
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3821:9:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minter_$2673",
                            "typeString": "contract Minter"
                          }
                        },
                        "src": "3805:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3797:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2854,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:34:11"
                },
                {
                  "expression": {
                    "id": 2857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2855,
                      "name": "rewardMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2710,
                      "src": "3841:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minter_$2673",
                        "typeString": "contract Minter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2856,
                      "name": "_rewardMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "3856:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minter_$2673",
                        "typeString": "contract Minter"
                      }
                    },
                    "src": "3841:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minter_$2673",
                      "typeString": "contract Minter"
                    }
                  },
                  "id": 2858,
                  "nodeType": "ExpressionStatement",
                  "src": "3841:28:11"
                }
              ]
            },
            "functionSelector": "fca3b5aa",
            "id": 2860,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2845,
                "modifierName": {
                  "id": 2844,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5311,
                  "src": "3777:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3777:9:11"
              }
            ],
            "name": "setMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2842,
                  "mutability": "mutable",
                  "name": "_rewardMinter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "3748:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Minter_$2673",
                    "typeString": "contract Minter"
                  },
                  "typeName": {
                    "id": 2841,
                    "name": "Minter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2673,
                    "src": "3748:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minter_$2673",
                      "typeString": "contract Minter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3747:22:11"
            },
            "returnParameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:0:11"
            },
            "scope": 3792,
            "src": "3729:147:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2892,
              "nodeType": "Block",
              "src": "4114:350:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2870,
                          "name": "_oracleIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2864,
                          "src": "4132:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 2871,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2732,
                            "src": "4147:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                              "typeString": "contract Oracle[] storage ref"
                            }
                          },
                          "id": 2872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4147:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4132:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4124:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4124:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2875,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:38:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2876,
                      "name": "_massUpdatePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3245,
                      "src": "4172:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4172:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2878,
                  "nodeType": "ExpressionStatement",
                  "src": "4172:18:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2883,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2862,
                            "src": "4263:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$5868",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 2884,
                            "name": "_oracleIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2864,
                            "src": "4302:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4344:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "id": 2886,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4379:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4379:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4431:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$5868",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2882,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2703,
                          "src": "4227:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$2703_storage_ptr_$",
                            "typeString": "type(struct LpTokenStaker.PoolInfo storage pointer)"
                          }
                        },
                        "id": 2889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": ["lpToken", "oracleIndex", "allocPoint", "lastRewardTime", "accRewardPerShare"],
                        "nodeType": "FunctionCall",
                        "src": "4227:220:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_memory_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_memory_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "id": 2879,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2715,
                        "src": "4200:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                          "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4200:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$2703_storage_$returns$__$",
                        "typeString": "function (struct LpTokenStaker.PoolInfo storage ref)"
                      }
                    },
                    "id": 2890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4200:257:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2891,
                  "nodeType": "ExpressionStatement",
                  "src": "4200:257:11"
                }
              ]
            },
            "functionSelector": "32a9caba",
            "id": 2893,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2867,
                "modifierName": {
                  "id": 2866,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5311,
                  "src": "4104:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4104:9:11"
              }
            ],
            "name": "addPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "4058:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5868",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5868,
                    "src": "4058:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5868",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2864,
                  "mutability": "mutable",
                  "name": "_oracleIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "4075:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4057:39:11"
            },
            "returnParameters": {
              "id": 2868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4114:0:11"
            },
            "scope": 3792,
            "src": "4041:423:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2911,
              "nodeType": "Block",
              "src": "4599:117:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2900,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "4609:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$2679",
                          "typeString": "contract Oracle"
                        }
                      },
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2678,
                      "src": "4609:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 2903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4609:22:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 2904,
                  "nodeType": "ExpressionStatement",
                  "src": "4609:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2908,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "4701:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$2679",
                          "typeString": "contract Oracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Oracle_$2679",
                          "typeString": "contract Oracle"
                        }
                      ],
                      "expression": {
                        "id": 2905,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2732,
                        "src": "4688:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                          "typeString": "contract Oracle[] storage ref"
                        }
                      },
                      "id": 2907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4688:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Oracle_$2679_$returns$__$",
                        "typeString": "function (contract Oracle)"
                      }
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2910,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:21:11"
                }
              ]
            },
            "functionSelector": "df5dd1a5",
            "id": 2912,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2898,
                "modifierName": {
                  "id": 2897,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5311,
                  "src": "4589:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4589:9:11"
              }
            ],
            "name": "addOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "4564:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Oracle_$2679",
                    "typeString": "contract Oracle"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "Oracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2679,
                    "src": "4564:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Oracle_$2679",
                      "typeString": "contract Oracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4563:16:11"
            },
            "returnParameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4599:0:11"
            },
            "scope": 3792,
            "src": "4545:171:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3040,
              "nodeType": "Block",
              "src": "5292:930:11",
              "statements": [
                {
                  "assignments": [2924],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2924,
                      "mutability": "mutable",
                      "name": "latestPrices",
                      "nodeType": "VariableDeclaration",
                      "scope": 3040,
                      "src": "5381:29:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5381:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2923,
                        "nodeType": "ArrayTypeName",
                        "src": "5381:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2931,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2928,
                          "name": "oracles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2732,
                          "src": "5427:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                            "typeString": "contract Oracle[] storage ref"
                          }
                        },
                        "id": 2929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5427:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5413:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5417:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2926,
                        "nodeType": "ArrayTypeName",
                        "src": "5417:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5413:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5381:61:11"
                },
                {
                  "expression": {
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2932,
                        "name": "latestPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2924,
                        "src": "5452:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2934,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5465:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5452:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030303030",
                      "id": 2935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5470:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "100000000"
                    },
                    "src": "5452:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "5452:27:11"
                },
                {
                  "body": {
                    "id": 2962,
                    "nodeType": "Block",
                    "src": "5534:77:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 2960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2949,
                              "name": "latestPrices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "5548:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2951,
                            "indexExpression": {
                              "id": 2950,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2939,
                              "src": "5561:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5548:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2954,
                                      "name": "oracles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2732,
                                      "src": "5574:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                                        "typeString": "contract Oracle[] storage ref"
                                      }
                                    },
                                    "id": 2956,
                                    "indexExpression": {
                                      "id": 2955,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2939,
                                      "src": "5582:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5574:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Oracle_$2679",
                                      "typeString": "contract Oracle"
                                    }
                                  },
                                  "id": 2957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "latestAnswer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2678,
                                  "src": "5574:23:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                    "typeString": "function () view external returns (int256)"
                                  }
                                },
                                "id": 2958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5574:25:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 2953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5566:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2952,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5566:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5566:34:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5548:52:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2961,
                        "nodeType": "ExpressionStatement",
                        "src": "5548:52:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2942,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2939,
                      "src": "5509:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2943,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2732,
                        "src": "5513:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Oracle_$2679_$dyn_storage",
                          "typeString": "contract Oracle[] storage ref"
                        }
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5513:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5509:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2963,
                  "initializationExpression": {
                    "assignments": [2939],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2939,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2963,
                        "src": "5494:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2938,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5494:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2941,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5506:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5494:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5529:3:11",
                      "subExpression": {
                        "id": 2946,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2939,
                        "src": "5529:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2948,
                    "nodeType": "ExpressionStatement",
                    "src": "5529:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "5489:122:11"
                },
                {
                  "assignments": [2965],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2965,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 3040,
                      "src": "5703:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2964,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5703:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "expression": {
                      "id": 2966,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "5720:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5720:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5703:32:11"
                },
                {
                  "expression": {
                    "id": 2975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2969,
                      "name": "allocPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2916,
                      "src": "5745:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2973,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2965,
                          "src": "5773:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5759:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2970,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5763:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2971,
                          "nodeType": "ArrayTypeName",
                          "src": "5763:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 2974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5759:21:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "5745:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2976,
                  "nodeType": "ExpressionStatement",
                  "src": "5745:35:11"
                },
                {
                  "body": {
                    "id": 3015,
                    "nodeType": "Block",
                    "src": "5833:199:11",
                    "statements": [
                      {
                        "assignments": [2988],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2988,
                            "mutability": "mutable",
                            "name": "pool",
                            "nodeType": "VariableDeclaration",
                            "scope": 3015,
                            "src": "5847:21:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                              "typeString": "struct LpTokenStaker.PoolInfo"
                            },
                            "typeName": {
                              "id": 2987,
                              "name": "PoolInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2703,
                              "src": "5847:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2992,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2989,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2715,
                            "src": "5871:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                              "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 2991,
                          "indexExpression": {
                            "id": 2990,
                            "name": "pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2978,
                            "src": "5880:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5871:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                            "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5847:37:11"
                      },
                      {
                        "expression": {
                          "id": 3004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2993,
                              "name": "allocPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2916,
                              "src": "5898:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2995,
                            "indexExpression": {
                              "id": 2994,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2978,
                              "src": "5910:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5898:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 2999,
                                  "name": "latestPrices",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2924,
                                  "src": "5937:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3002,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3000,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2988,
                                    "src": "5950:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                      "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 3001,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "oracleIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2696,
                                  "src": "5950:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5937:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 2996,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2988,
                                  "src": "5917:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                    "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                  }
                                },
                                "id": 2997,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allocPoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2698,
                                "src": "5917:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5673,
                              "src": "5917:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:51:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5898:70:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3005,
                        "nodeType": "ExpressionStatement",
                        "src": "5898:70:11"
                      },
                      {
                        "expression": {
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3006,
                            "name": "totalAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2918,
                            "src": "5982:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3009,
                                  "name": "allocPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2916,
                                  "src": "6004:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3011,
                                "indexExpression": {
                                  "id": 3010,
                                  "name": "pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2978,
                                  "src": "6016:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6004:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3007,
                                "name": "totalAP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2918,
                                "src": "5992:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5617,
                              "src": "5992:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5992:29:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5982:39:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3014,
                        "nodeType": "ExpressionStatement",
                        "src": "5982:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2981,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2978,
                      "src": "5812:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2982,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2965,
                      "src": "5818:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5812:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3016,
                  "initializationExpression": {
                    "assignments": [2978],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2978,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "scope": 3016,
                        "src": "5795:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5795:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2980,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5809:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5795:15:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5826:5:11",
                      "subExpression": {
                        "id": 2984,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2978,
                        "src": "5828:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2986,
                    "nodeType": "ExpressionStatement",
                    "src": "5826:5:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "5790:242:11"
                },
                {
                  "expression": {
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3017,
                      "name": "totalAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "6100:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3830",
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6131:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80_by_1",
                            "typeString": "int_const 80"
                          },
                          "value": "80"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_80_by_1",
                            "typeString": "int_const 80"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030",
                              "id": 3020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6122:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 3018,
                              "name": "totalAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2918,
                              "src": "6110:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5673,
                            "src": "6110:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6110:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5695,
                        "src": "6110:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6110:24:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6100:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "6100:34:11"
                },
                {
                  "expression": {
                    "id": 3034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3027,
                        "name": "allocPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2916,
                        "src": "6144:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 3029,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6156:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6144:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6173:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "expression": {
                          "id": 3030,
                          "name": "totalAP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2918,
                          "src": "6161:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5695,
                        "src": "6161:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6161:14:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6144:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3035,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:31:11"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3036,
                        "name": "allocPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2916,
                        "src": "6194:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3037,
                        "name": "totalAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2918,
                        "src": "6207:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3038,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6193:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 2919,
                  "id": 3039,
                  "nodeType": "Return",
                  "src": "6186:29:11"
                }
              ]
            },
            "id": 3041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAllocPoints",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5219:2:11"
            },
            "returnParameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2916,
                  "mutability": "mutable",
                  "name": "allocPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 3041,
                  "src": "5245:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2914,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5245:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2915,
                    "nodeType": "ArrayTypeName",
                    "src": "5245:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2918,
                  "mutability": "mutable",
                  "name": "totalAP",
                  "nodeType": "VariableDeclaration",
                  "scope": 3041,
                  "src": "5275:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5244:47:11"
            },
            "scope": 3792,
            "src": "5195:1027:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3049,
              "nodeType": "Block",
              "src": "6282:39:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3046,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "6299:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6299:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3045,
                  "id": 3048,
                  "nodeType": "Return",
                  "src": "6292:22:11"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 3050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6247:2:11"
            },
            "returnParameters": {
              "id": 3045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3044,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3050,
                  "src": "6273:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6273:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6272:9:11"
            },
            "scope": 3792,
            "src": "6228:93:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "6504:748:11",
              "statements": [
                {
                  "assignments": [3063, 3065],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3063,
                      "mutability": "mutable",
                      "name": "allocPoints",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6515:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3061,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6515:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3062,
                        "nodeType": "ArrayTypeName",
                        "src": "6515:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3065,
                      "mutability": "mutable",
                      "name": "totalAP",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6545:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3064,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6545:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3068,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3066,
                      "name": "_getAllocPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "6564:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function () view returns (uint256[] memory,uint256)"
                      }
                    },
                    "id": 3067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6514:67:11"
                },
                {
                  "assignments": [3070],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3070,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6591:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo"
                      },
                      "typeName": {
                        "id": 3069,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2703,
                        "src": "6591:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3074,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3071,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "6615:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3073,
                    "indexExpression": {
                      "id": 3072,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3052,
                      "src": "6624:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6615:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                      "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6591:38:11"
                },
                {
                  "assignments": [3076],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3076,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6639:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                        "typeString": "struct LpTokenStaker.UserInfo"
                      },
                      "typeName": {
                        "id": 3075,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2692,
                        "src": "6639:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3082,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3077,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "6663:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo storage ref))"
                        }
                      },
                      "id": 3079,
                      "indexExpression": {
                        "id": 3078,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3052,
                        "src": "6672:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6663:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                        "typeString": "mapping(address => struct LpTokenStaker.UserInfo storage ref)"
                      }
                    },
                    "id": 3081,
                    "indexExpression": {
                      "id": 3080,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3054,
                      "src": "6678:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6663:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2692_storage",
                      "typeString": "struct LpTokenStaker.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6639:45:11"
                },
                {
                  "assignments": [3084],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3084,
                      "mutability": "mutable",
                      "name": "accRewardPerShare",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6694:25:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3083,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6694:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3087,
                  "initialValue": {
                    "expression": {
                      "id": 3085,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3070,
                      "src": "6722:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accRewardPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2702,
                    "src": "6722:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6694:50:11"
                },
                {
                  "assignments": [3089],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3089,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "6754:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3088,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6754:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3098,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3095,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6804:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          ],
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6796:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3093,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6796:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6796:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3090,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3070,
                          "src": "6773:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3091,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2694,
                        "src": "6773:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "6773:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6773:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6754:56:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3099,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6824:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6824:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 3101,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3070,
                            "src": "6842:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                              "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                            }
                          },
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastRewardTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2700,
                          "src": "6842:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6824:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3104,
                          "name": "lpSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3089,
                          "src": "6865:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6877:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6865:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6824:54:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3108,
                        "name": "totalAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3065,
                        "src": "6882:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6893:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6882:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6824:70:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3150,
                  "nodeType": "IfStatement",
                  "src": "6820:344:11",
                  "trueBody": {
                    "id": 3149,
                    "nodeType": "Block",
                    "src": "6896:268:11",
                    "statements": [
                      {
                        "assignments": [3113],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3113,
                            "mutability": "mutable",
                            "name": "duration",
                            "nodeType": "VariableDeclaration",
                            "scope": 3149,
                            "src": "6910:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3112,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6910:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3120,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3117,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3070,
                                "src": "6949:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                  "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                }
                              },
                              "id": 3118,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2700,
                              "src": "6949:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3114,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6929:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6929:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5639,
                            "src": "6929:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6929:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6910:59:11"
                      },
                      {
                        "assignments": [3122],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3122,
                            "mutability": "mutable",
                            "name": "reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 3149,
                            "src": "6983:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3121,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6983:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3135,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3133,
                              "name": "totalAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3065,
                              "src": "7058:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3128,
                                    "name": "allocPoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3063,
                                    "src": "7035:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3130,
                                  "indexExpression": {
                                    "id": 3129,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3052,
                                    "src": "7047:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7035:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3125,
                                      "name": "rewardsPerSecond",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2712,
                                      "src": "7013:16:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3123,
                                      "name": "duration",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3113,
                                      "src": "7000:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5673,
                                    "src": "7000:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7000:30:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5673,
                                "src": "7000:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7000:53:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5695,
                            "src": "7000:57:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7000:66:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6983:83:11"
                      },
                      {
                        "expression": {
                          "id": 3147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3136,
                            "name": "accRewardPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3084,
                            "src": "7080:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3144,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3089,
                                    "src": "7143:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31653132",
                                        "id": 3141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7133:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3139,
                                        "name": "reward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3122,
                                        "src": "7122:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3140,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5673,
                                      "src": "7122:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7122:16:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5695,
                                  "src": "7122:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7122:30:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3137,
                                "name": "accRewardPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "7100:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5617,
                              "src": "7100:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7100:53:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7080:73:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3148,
                        "nodeType": "ExpressionStatement",
                        "src": "7080:73:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3160,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3076,
                          "src": "7229:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                            "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                          }
                        },
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2691,
                        "src": "7229:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 3157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7219:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3154,
                                "name": "accRewardPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "7196:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 3151,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3076,
                                  "src": "7180:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                    "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                  }
                                },
                                "id": 3152,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2689,
                                "src": "7180:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5673,
                              "src": "7180:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7180:34:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5695,
                          "src": "7180:38:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7180:44:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5639,
                      "src": "7180:48:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7180:65:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3058,
                  "id": 3163,
                  "nodeType": "Return",
                  "src": "7173:72:11"
                }
              ]
            },
            "functionSelector": "d60b5164",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimableReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3052,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "6415:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3054,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "6429:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6429:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6414:29:11"
            },
            "returnParameters": {
              "id": 3058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "6491:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6491:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6490:9:11"
            },
            "scope": 3792,
            "src": "6390:862:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3244,
              "nodeType": "Block",
              "src": "7340:572:11",
              "statements": [
                {
                  "assignments": [3172, 3174],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3172,
                      "mutability": "mutable",
                      "name": "allocPoints",
                      "nodeType": "VariableDeclaration",
                      "scope": 3244,
                      "src": "7351:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7351:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3171,
                        "nodeType": "ArrayTypeName",
                        "src": "7351:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3174,
                      "mutability": "mutable",
                      "name": "totalAP",
                      "nodeType": "VariableDeclaration",
                      "scope": 3244,
                      "src": "7381:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7381:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3177,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3175,
                      "name": "_getAllocPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "7400:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function () view returns (uint256[] memory,uint256)"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7400:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7350:67:11"
                },
                {
                  "body": {
                    "id": 3197,
                    "nodeType": "Block",
                    "src": "7482:68:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3190,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3179,
                              "src": "7508:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3191,
                                "name": "allocPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3172,
                                "src": "7513:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 3193,
                              "indexExpression": {
                                "id": 3192,
                                "name": "pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "7525:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7513:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3194,
                              "name": "totalAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3174,
                              "src": "7531:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3189,
                            "name": "_updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3342,
                            "src": "7496:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 3195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7496:43:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3196,
                        "nodeType": "ExpressionStatement",
                        "src": "7496:43:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3182,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "7449:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3183,
                        "name": "allocPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "7455:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7455:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7449:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3198,
                  "initializationExpression": {
                    "assignments": [3179],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3179,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "scope": 3198,
                        "src": "7432:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7432:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3181,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7446:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7432:15:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7475:5:11",
                      "subExpression": {
                        "id": 3186,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "7477:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3188,
                    "nodeType": "ExpressionStatement",
                    "src": "7475:5:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "7427:123:11"
                },
                {
                  "assignments": [3200],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3200,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 3244,
                      "src": "7559:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7559:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3203,
                  "initialValue": {
                    "expression": {
                      "id": 3201,
                      "name": "emissionSchedule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2718,
                      "src": "7576:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.EmissionPoint storage ref[] storage ref"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7576:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7559:40:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3204,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2729,
                        "src": "7613:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7625:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7613:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3207,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3200,
                        "src": "7630:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7639:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7630:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7613:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3243,
                  "nodeType": "IfStatement",
                  "src": "7609:297:11",
                  "trueBody": {
                    "id": 3242,
                    "nodeType": "Block",
                    "src": "7642:264:11",
                    "statements": [
                      {
                        "assignments": [3212],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3212,
                            "mutability": "mutable",
                            "name": "e",
                            "nodeType": "VariableDeclaration",
                            "scope": 3242,
                            "src": "7656:22:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EmissionPoint_$2708_memory_ptr",
                              "typeString": "struct LpTokenStaker.EmissionPoint"
                            },
                            "typeName": {
                              "id": 3211,
                              "name": "EmissionPoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2708,
                              "src": "7656:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EmissionPoint_$2708_storage_ptr",
                                "typeString": "struct LpTokenStaker.EmissionPoint"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3218,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3213,
                            "name": "emissionSchedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "7681:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage",
                              "typeString": "struct LpTokenStaker.EmissionPoint storage ref[] storage ref"
                            }
                          },
                          "id": 3217,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3214,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "7698:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7705:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7698:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7681:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EmissionPoint_$2708_storage",
                            "typeString": "struct LpTokenStaker.EmissionPoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7656:51:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 3222,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2729,
                                "src": "7745:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 3219,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7725:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7725:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5639,
                              "src": "7725:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7725:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 3224,
                              "name": "e",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3212,
                              "src": "7758:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EmissionPoint_$2708_memory_ptr",
                                "typeString": "struct LpTokenStaker.EmissionPoint memory"
                              }
                            },
                            "id": 3225,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTimeOffset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2705,
                            "src": "7758:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "7725:50:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3241,
                        "nodeType": "IfStatement",
                        "src": "7721:175:11",
                        "trueBody": {
                          "id": 3240,
                          "nodeType": "Block",
                          "src": "7777:119:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 3233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3227,
                                  "name": "rewardsPerSecond",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2712,
                                  "src": "7795:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3230,
                                        "name": "e",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3212,
                                        "src": "7822:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_EmissionPoint_$2708_memory_ptr",
                                          "typeString": "struct LpTokenStaker.EmissionPoint memory"
                                        }
                                      },
                                      "id": 3231,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rewardsPerSecond",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2707,
                                      "src": "7822:18:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 3229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7814:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 3228,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7814:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7814:27:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7795:46:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3234,
                              "nodeType": "ExpressionStatement",
                              "src": "7795:46:11"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 3235,
                                    "name": "emissionSchedule",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2718,
                                    "src": "7859:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_EmissionPoint_$2708_storage_$dyn_storage",
                                      "typeString": "struct LpTokenStaker.EmissionPoint storage ref[] storage ref"
                                    }
                                  },
                                  "id": 3237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "7859:20:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 3238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7859:22:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3239,
                              "nodeType": "ExpressionStatement",
                              "src": "7859:22:11"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_massUpdatePools",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7328:2:11"
            },
            "returnParameters": {
              "id": 3167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7340:0:11"
            },
            "scope": 3792,
            "src": "7303:609:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "8076:645:11",
              "statements": [
                {
                  "assignments": [3255],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3255,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "8086:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo"
                      },
                      "typeName": {
                        "id": 3254,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2703,
                        "src": "8086:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3259,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3256,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "8110:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3258,
                    "indexExpression": {
                      "id": 3257,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3247,
                      "src": "8119:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8110:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                      "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8086:38:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3260,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8138:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8138:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 3262,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "8157:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                        }
                      },
                      "id": 3263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2700,
                      "src": "8157:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8138:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3267,
                  "nodeType": "IfStatement",
                  "src": "8134:75:11",
                  "trueBody": {
                    "id": 3266,
                    "nodeType": "Block",
                    "src": "8178:31:11",
                    "statements": [
                      {
                        "functionReturnParameters": 3253,
                        "id": 3265,
                        "nodeType": "Return",
                        "src": "8192:7:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [3269],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3269,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "8218:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8218:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3278,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3275,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8268:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          ],
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8260:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8260:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8260:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3270,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3255,
                          "src": "8237:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2694,
                        "src": "8237:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5807,
                      "src": "8237:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8218:56:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3279,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3269,
                        "src": "8288:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8300:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8288:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3282,
                        "name": "_totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3251,
                        "src": "8305:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8325:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8305:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8288:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3295,
                  "nodeType": "IfStatement",
                  "src": "8284:126:11",
                  "trueBody": {
                    "id": 3294,
                    "nodeType": "Block",
                    "src": "8328:82:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3286,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3255,
                              "src": "8342:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                              }
                            },
                            "id": 3288,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2700,
                            "src": "8342:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3289,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8364:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8364:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8342:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3292,
                        "nodeType": "ExpressionStatement",
                        "src": "8342:37:11"
                      },
                      {
                        "functionReturnParameters": 3253,
                        "id": 3293,
                        "nodeType": "Return",
                        "src": "8393:7:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [3297],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3297,
                      "mutability": "mutable",
                      "name": "duration",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "8419:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8419:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3304,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3301,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3255,
                          "src": "8458:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2700,
                        "src": "8458:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3298,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8438:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8438:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5639,
                      "src": "8438:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8438:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8419:59:11"
                },
                {
                  "assignments": [3306],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3306,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "8488:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8488:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3317,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3315,
                        "name": "_totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3251,
                        "src": "8557:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3312,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3249,
                            "src": "8540:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3309,
                                "name": "rewardsPerSecond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2712,
                                "src": "8518:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3307,
                                "name": "duration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3297,
                                "src": "8505:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5673,
                              "src": "8505:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8505:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5673,
                          "src": "8505:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8505:47:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5695,
                      "src": "8505:51:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8505:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8488:86:11"
                },
                {
                  "expression": {
                    "id": 3332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3318,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "8584:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                        }
                      },
                      "id": 3320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accRewardPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2702,
                      "src": "8584:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3329,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3269,
                              "src": "8657:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 3326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8647:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 3324,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3306,
                                  "src": "8636:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5673,
                                "src": "8636:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8636:16:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5695,
                            "src": "8636:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8636:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 3321,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3255,
                            "src": "8609:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                              "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                            }
                          },
                          "id": 3322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2702,
                          "src": "8609:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5617,
                        "src": "8609:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8609:58:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8584:83:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3333,
                  "nodeType": "ExpressionStatement",
                  "src": "8584:83:11"
                },
                {
                  "expression": {
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3334,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "8677:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                        }
                      },
                      "id": 3336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2700,
                      "src": "8677:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3337,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8699:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8699:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8677:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "8677:37:11"
                }
              ]
            },
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3247,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "8006:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3249,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "8020:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8020:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3251,
                  "mutability": "mutable",
                  "name": "_totalAllocPoint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "8041:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8041:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8005:61:11"
            },
            "returnParameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8076:0:11"
            },
            "scope": 3792,
            "src": "7985:736:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3467,
              "nodeType": "Block",
              "src": "8849:850:11",
              "statements": [
                {
                  "assignments": [3350],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3350,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3467,
                      "src": "8859:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo"
                      },
                      "typeName": {
                        "id": 3349,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2703,
                        "src": "8859:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3354,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3351,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "8883:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3353,
                    "indexExpression": {
                      "id": 3352,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "8892:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8883:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                      "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8859:38:11"
                },
                {
                  "assignments": [3356],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3356,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 3467,
                      "src": "8907:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                        "typeString": "struct LpTokenStaker.UserInfo"
                      },
                      "typeName": {
                        "id": 3355,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2692,
                        "src": "8907:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3363,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3357,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "8931:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo storage ref))"
                        }
                      },
                      "id": 3359,
                      "indexExpression": {
                        "id": 3358,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3344,
                        "src": "8940:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8931:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                        "typeString": "mapping(address => struct LpTokenStaker.UserInfo storage ref)"
                      }
                    },
                    "id": 3362,
                    "indexExpression": {
                      "expression": {
                        "id": 3360,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8946:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8946:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8931:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2692_storage",
                      "typeString": "struct LpTokenStaker.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8907:50:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3364,
                      "name": "_massUpdatePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3245,
                      "src": "8967:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8967:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3366,
                  "nodeType": "ExpressionStatement",
                  "src": "8967:18:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3367,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3356,
                        "src": "8999:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2689,
                      "src": "8999:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9013:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8999:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3396,
                  "nodeType": "IfStatement",
                  "src": "8995:240:11",
                  "trueBody": {
                    "id": 3395,
                    "nodeType": "Block",
                    "src": "9016:219:11",
                    "statements": [
                      {
                        "assignments": [3372],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3372,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "scope": 3395,
                            "src": "9030:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3371,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9030:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3386,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3383,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3356,
                                "src": "9139:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                  "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                }
                              },
                              "id": 3384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2691,
                              "src": "9139:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31653132",
                                  "id": 3380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9108:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3376,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3350,
                                        "src": "9080:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                          "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 3377,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accRewardPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2702,
                                      "src": "9080:22:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 3373,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3356,
                                        "src": "9064:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 3374,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2689,
                                      "src": "9064:11:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5673,
                                    "src": "9064:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9064:39:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5695,
                                "src": "9064:43:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9064:49:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5639,
                            "src": "9064:53:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9064:108:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9030:142:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3390,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9204:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9204:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3392,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3372,
                              "src": "9216:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3387,
                              "name": "rewardMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2710,
                              "src": "9186:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Minter_$2673",
                                "typeString": "contract Minter"
                              }
                            },
                            "id": 3389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2672,
                            "src": "9186:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9186:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3394,
                        "nodeType": "ExpressionStatement",
                        "src": "9186:38:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9295:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9295:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9287:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9287:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9287:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3409,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9328:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LpTokenStaker_$3792",
                              "typeString": "contract LpTokenStaker"
                            }
                          ],
                          "id": 3408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9320:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9320:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9320:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3411,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3346,
                        "src": "9347:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3397,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3350,
                          "src": "9244:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2694,
                        "src": "9244:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5927,
                      "src": "9244:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9244:120:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "9244:120:11"
                },
                {
                  "expression": {
                    "id": 3422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3414,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3356,
                        "src": "9374:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2689,
                      "src": "9374:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3420,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3346,
                          "src": "9404:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 3417,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3356,
                            "src": "9388:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                              "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                            }
                          },
                          "id": 3418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2689,
                          "src": "9388:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5617,
                        "src": "9388:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9388:24:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9374:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3423,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:38:11"
                },
                {
                  "expression": {
                    "id": 3436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3424,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3356,
                        "src": "9422:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "9422:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9484:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3430,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3350,
                                "src": "9456:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                  "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                }
                              },
                              "id": 3431,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2702,
                              "src": "9456:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3427,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3356,
                                "src": "9440:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                  "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                }
                              },
                              "id": 3428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2689,
                              "src": "9440:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5673,
                            "src": "9440:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9440:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5695,
                        "src": "9440:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9440:49:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9422:67:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3437,
                  "nodeType": "ExpressionStatement",
                  "src": "9422:67:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3438,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "9503:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9510:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9503:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3459,
                  "nodeType": "IfStatement",
                  "src": "9499:145:11",
                  "trueBody": {
                    "id": 3458,
                    "nodeType": "Block",
                    "src": "9513:131:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3441,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3350,
                              "src": "9527:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                              }
                            },
                            "id": 3443,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2698,
                            "src": "9527:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3447,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3346,
                                "src": "9565:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 3444,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3350,
                                  "src": "9545:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                    "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                  }
                                },
                                "id": 3445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allocPoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2698,
                                "src": "9545:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5617,
                              "src": "9545:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9545:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9527:46:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3450,
                        "nodeType": "ExpressionStatement",
                        "src": "9527:46:11"
                      },
                      {
                        "expression": {
                          "id": 3456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3451,
                            "name": "totalAllocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2727,
                            "src": "9587:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3454,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3346,
                                "src": "9625:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3452,
                                "name": "totalAllocPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2727,
                                "src": "9605:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5617,
                              "src": "9605:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9605:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9587:46:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3457,
                        "nodeType": "ExpressionStatement",
                        "src": "9587:46:11"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9666:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9666:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3463,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3344,
                        "src": "9678:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3464,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3346,
                        "src": "9684:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3460,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2740,
                      "src": "9658:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9658:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3466,
                  "nodeType": "EmitStatement",
                  "src": "9653:39:11"
                }
              ]
            },
            "functionSelector": "e2bbb158",
            "id": 3468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "8811:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8811:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3346,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "8825:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8825:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8810:31:11"
            },
            "returnParameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8849:0:11"
            },
            "scope": 3792,
            "src": "8794:905:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3596,
              "nodeType": "Block",
              "src": "9811:829:11",
              "statements": [
                {
                  "assignments": [3476],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3476,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3596,
                      "src": "9821:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo"
                      },
                      "typeName": {
                        "id": 3475,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2703,
                        "src": "9821:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3480,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3477,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "9845:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3479,
                    "indexExpression": {
                      "id": 3478,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3470,
                      "src": "9854:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9845:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                      "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9821:38:11"
                },
                {
                  "assignments": [3482],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3482,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 3596,
                      "src": "9869:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                        "typeString": "struct LpTokenStaker.UserInfo"
                      },
                      "typeName": {
                        "id": 3481,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2692,
                        "src": "9869:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3489,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3483,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "9893:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo storage ref))"
                        }
                      },
                      "id": 3485,
                      "indexExpression": {
                        "id": 3484,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3470,
                        "src": "9902:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9893:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                        "typeString": "mapping(address => struct LpTokenStaker.UserInfo storage ref)"
                      }
                    },
                    "id": 3488,
                    "indexExpression": {
                      "expression": {
                        "id": 3486,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9908:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9908:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9893:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2692_storage",
                      "typeString": "struct LpTokenStaker.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9869:50:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3491,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3482,
                            "src": "9937:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                              "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                            }
                          },
                          "id": 3492,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2689,
                          "src": "9937:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3493,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3472,
                          "src": "9952:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9937:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 3495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 3490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9929:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9929:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3497,
                  "nodeType": "ExpressionStatement",
                  "src": "9929:53:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3498,
                      "name": "_massUpdatePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3245,
                      "src": "9992:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9992:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3500,
                  "nodeType": "ExpressionStatement",
                  "src": "9992:18:11"
                },
                {
                  "assignments": [3502],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3502,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "scope": 3596,
                      "src": "10020:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10020:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3516,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3513,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3482,
                          "src": "10121:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                            "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                          }
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2691,
                        "src": "10121:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653132",
                            "id": 3510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10094:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3506,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3476,
                                  "src": "10066:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                    "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                  }
                                },
                                "id": 3507,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accRewardPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2702,
                                "src": "10066:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 3503,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3482,
                                  "src": "10050:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                    "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                  }
                                },
                                "id": 3504,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2689,
                                "src": "10050:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5673,
                              "src": "10050:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10050:39:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5695,
                          "src": "10050:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10050:49:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5639,
                      "src": "10050:53:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10050:100:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10020:130:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3517,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3502,
                      "src": "10164:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10174:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10164:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3529,
                  "nodeType": "IfStatement",
                  "src": "10160:80:11",
                  "trueBody": {
                    "id": 3528,
                    "nodeType": "Block",
                    "src": "10177:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3523,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10209:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10209:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3525,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3502,
                              "src": "10221:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3520,
                              "name": "rewardMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2710,
                              "src": "10191:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Minter_$2673",
                                "typeString": "contract Minter"
                              }
                            },
                            "id": 3522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2672,
                            "src": "10191:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10191:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3527,
                        "nodeType": "ExpressionStatement",
                        "src": "10191:38:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3530,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "10249:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3532,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2689,
                      "src": "10249:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3536,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3472,
                          "src": "10279:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 3533,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3482,
                            "src": "10263:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                              "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                            }
                          },
                          "id": 3534,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2689,
                          "src": "10263:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5639,
                        "src": "10263:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10263:24:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10249:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3539,
                  "nodeType": "ExpressionStatement",
                  "src": "10249:38:11"
                },
                {
                  "expression": {
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3540,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "10297:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "10297:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653132",
                          "id": 3550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10359:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3546,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3476,
                                "src": "10331:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                  "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                }
                              },
                              "id": 3547,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2702,
                              "src": "10331:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3543,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3482,
                                "src": "10315:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                  "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                }
                              },
                              "id": 3544,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2689,
                              "src": "10315:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5673,
                            "src": "10315:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10315:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5695,
                        "src": "10315:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10315:49:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10297:67:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "10297:67:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3554,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3470,
                      "src": "10378:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10385:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10378:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3575,
                  "nodeType": "IfStatement",
                  "src": "10374:145:11",
                  "trueBody": {
                    "id": 3574,
                    "nodeType": "Block",
                    "src": "10388:131:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 3565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3557,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3476,
                              "src": "10402:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                              }
                            },
                            "id": 3559,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2698,
                            "src": "10402:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3563,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3472,
                                "src": "10440:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 3560,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3476,
                                  "src": "10420:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                    "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                  }
                                },
                                "id": 3561,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allocPoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2698,
                                "src": "10420:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5639,
                              "src": "10420:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10420:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10402:46:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3566,
                        "nodeType": "ExpressionStatement",
                        "src": "10402:46:11"
                      },
                      {
                        "expression": {
                          "id": 3572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3567,
                            "name": "totalAllocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2727,
                            "src": "10462:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3570,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3472,
                                "src": "10500:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3568,
                                "name": "totalAllocPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2727,
                                "src": "10480:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5639,
                              "src": "10480:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10480:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10462:46:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3573,
                        "nodeType": "ExpressionStatement",
                        "src": "10462:46:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3583,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10562:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10562:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10554:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10554:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10554:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3586,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3472,
                        "src": "10575:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3576,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "10528:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2694,
                        "src": "10528:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5902,
                      "src": "10528:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:55:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3590,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10607:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10607:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3592,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3470,
                        "src": "10619:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3593,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3472,
                        "src": "10625:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3589,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2748,
                      "src": "10598:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10598:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3595,
                  "nodeType": "EmitStatement",
                  "src": "10593:40:11"
                }
              ]
            },
            "functionSelector": "441a3e70",
            "id": 3597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3470,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 3597,
                  "src": "9773:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3472,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3597,
                  "src": "9787:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9787:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9772:31:11"
            },
            "returnParameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9811:0:11"
            },
            "scope": 3792,
            "src": "9755:885:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3699,
              "nodeType": "Block",
              "src": "10757:724:11",
              "statements": [
                {
                  "assignments": [3603],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3603,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "10767:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                        "typeString": "struct LpTokenStaker.PoolInfo"
                      },
                      "typeName": {
                        "id": 3602,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2703,
                        "src": "10767:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                          "typeString": "struct LpTokenStaker.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3607,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3604,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "10791:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                        "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3606,
                    "indexExpression": {
                      "id": 3605,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "10800:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10791:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                      "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10767:38:11"
                },
                {
                  "assignments": [3609],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3609,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "10815:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                        "typeString": "struct LpTokenStaker.UserInfo"
                      },
                      "typeName": {
                        "id": 3608,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2692,
                        "src": "10815:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3616,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3610,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "10839:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo storage ref))"
                        }
                      },
                      "id": 3612,
                      "indexExpression": {
                        "id": 3611,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "10848:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10839:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                        "typeString": "mapping(address => struct LpTokenStaker.UserInfo storage ref)"
                      }
                    },
                    "id": 3615,
                    "indexExpression": {
                      "expression": {
                        "id": 3613,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10854:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10854:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10839:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2692_storage",
                      "typeString": "struct LpTokenStaker.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10815:50:11"
                },
                {
                  "assignments": [3618],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3618,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3699,
                      "src": "10875:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10875:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3621,
                  "initialValue": {
                    "expression": {
                      "id": 3619,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3609,
                      "src": "10892:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                        "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2689,
                    "src": "10892:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10875:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3629,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10947:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10947:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10939:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3627,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10939:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10939:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3632,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3618,
                        "src": "10960:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3622,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3603,
                          "src": "10913:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                            "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                          }
                        },
                        "id": 3625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2694,
                        "src": "10913:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5868",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5902,
                      "src": "10913:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5868_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5868_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10913:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3634,
                  "nodeType": "ExpressionStatement",
                  "src": "10913:54:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11000:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11000:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3638,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "11012:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3639,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3618,
                        "src": "11018:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3635,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2756,
                      "src": "10982:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3641,
                  "nodeType": "EmitStatement",
                  "src": "10977:48:11"
                },
                {
                  "expression": {
                    "id": 3646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3642,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3609,
                        "src": "11035:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3644,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2689,
                      "src": "11035:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11049:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11035:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3647,
                  "nodeType": "ExpressionStatement",
                  "src": "11035:15:11"
                },
                {
                  "expression": {
                    "id": 3652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3648,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3609,
                        "src": "11060:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                          "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                        }
                      },
                      "id": 3650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "11060:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11078:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11060:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3653,
                  "nodeType": "ExpressionStatement",
                  "src": "11060:19:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3654,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "11094:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11101:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11094:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3698,
                  "nodeType": "IfStatement",
                  "src": "11090:385:11",
                  "trueBody": {
                    "id": 3697,
                    "nodeType": "Block",
                    "src": "11104:371:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3657,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3603,
                              "src": "11122:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                              }
                            },
                            "id": 3658,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2698,
                            "src": "11122:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 3659,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3618,
                            "src": "11141:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11122:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3678,
                          "nodeType": "Block",
                          "src": "11233:52:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 3676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3672,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3603,
                                    "src": "11251:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                      "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 3674,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2698,
                                  "src": "11251:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 3675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11269:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11251:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3677,
                              "nodeType": "ExpressionStatement",
                              "src": "11251:19:11"
                            }
                          ]
                        },
                        "id": 3679,
                        "nodeType": "IfStatement",
                        "src": "11118:167:11",
                        "trueBody": {
                          "id": 3671,
                          "nodeType": "Block",
                          "src": "11149:78:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 3669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3661,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3603,
                                    "src": "11167:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                      "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 3663,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2698,
                                  "src": "11167:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3667,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3618,
                                      "src": "11205:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 3664,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3603,
                                        "src": "11185:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                          "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 3665,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allocPoint",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2698,
                                      "src": "11185:15:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3666,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5639,
                                    "src": "11185:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11185:27:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11167:45:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3670,
                              "nodeType": "ExpressionStatement",
                              "src": "11167:45:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3680,
                            "name": "totalAllocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2727,
                            "src": "11302:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 3681,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3618,
                            "src": "11321:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11302:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3695,
                          "nodeType": "Block",
                          "src": "11413:52:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 3693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3691,
                                  "name": "totalAllocPoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2727,
                                  "src": "11431:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 3692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11449:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11431:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3694,
                              "nodeType": "ExpressionStatement",
                              "src": "11431:19:11"
                            }
                          ]
                        },
                        "id": 3696,
                        "nodeType": "IfStatement",
                        "src": "11298:167:11",
                        "trueBody": {
                          "id": 3690,
                          "nodeType": "Block",
                          "src": "11329:78:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 3688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3683,
                                  "name": "totalAllocPoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2727,
                                  "src": "11347:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3686,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3618,
                                      "src": "11385:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3684,
                                      "name": "totalAllocPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2727,
                                      "src": "11365:15:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5639,
                                    "src": "11365:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11365:27:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11347:45:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3689,
                              "nodeType": "ExpressionStatement",
                              "src": "11347:45:11"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5312ea8e",
            "id": 3700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3599,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "scope": 3700,
                  "src": "10736:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10736:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10735:14:11"
            },
            "returnParameters": {
              "id": 3601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10757:0:11"
            },
            "scope": 3792,
            "src": "10709:772:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3790,
              "nodeType": "Block",
              "src": "11668:521:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3706,
                      "name": "_massUpdatePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3245,
                      "src": "11678:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11678:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3708,
                  "nodeType": "ExpressionStatement",
                  "src": "11678:18:11"
                },
                {
                  "assignments": [3710],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3710,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "scope": 3790,
                      "src": "11706:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11706:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3711,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11706:15:11"
                },
                {
                  "body": {
                    "id": 3775,
                    "nodeType": "Block",
                    "src": "11771:323:11",
                    "statements": [
                      {
                        "assignments": [3724],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3724,
                            "mutability": "mutable",
                            "name": "pool",
                            "nodeType": "VariableDeclaration",
                            "scope": 3775,
                            "src": "11785:21:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                              "typeString": "struct LpTokenStaker.PoolInfo"
                            },
                            "typeName": {
                              "id": 3723,
                              "name": "PoolInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2703,
                              "src": "11785:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                "typeString": "struct LpTokenStaker.PoolInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3730,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3725,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2715,
                            "src": "11809:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2703_storage_$dyn_storage",
                              "typeString": "struct LpTokenStaker.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3729,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 3726,
                              "name": "_pids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3703,
                              "src": "11818:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 3728,
                            "indexExpression": {
                              "id": 3727,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3713,
                              "src": "11824:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11818:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11809:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2703_storage",
                            "typeString": "struct LpTokenStaker.PoolInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11785:42:11"
                      },
                      {
                        "assignments": [3732],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3732,
                            "mutability": "mutable",
                            "name": "user",
                            "nodeType": "VariableDeclaration",
                            "scope": 3775,
                            "src": "11841:21:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                              "typeString": "struct LpTokenStaker.UserInfo"
                            },
                            "typeName": {
                              "id": 3731,
                              "name": "UserInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2692,
                              "src": "11841:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                "typeString": "struct LpTokenStaker.UserInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3741,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3733,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2724,
                              "src": "11865:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct LpTokenStaker.UserInfo storage ref))"
                              }
                            },
                            "id": 3737,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3734,
                                "name": "_pids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3703,
                                "src": "11874:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 3736,
                              "indexExpression": {
                                "id": 3735,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3713,
                                "src": "11880:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11874:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11865:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2692_storage_$",
                              "typeString": "mapping(address => struct LpTokenStaker.UserInfo storage ref)"
                            }
                          },
                          "id": 3740,
                          "indexExpression": {
                            "expression": {
                              "id": 3738,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11884:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11884:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11865:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2692_storage",
                            "typeString": "struct LpTokenStaker.UserInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11841:54:11"
                      },
                      {
                        "expression": {
                          "id": 3759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3742,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3710,
                            "src": "11909:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3755,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3732,
                                      "src": "11985:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                        "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                      }
                                    },
                                    "id": 3756,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2691,
                                    "src": "11985:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31653132",
                                        "id": 3752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11975:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 3748,
                                              "name": "pool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3724,
                                              "src": "11947:4:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                                "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                              }
                                            },
                                            "id": 3749,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "accRewardPerShare",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2702,
                                            "src": "11947:22:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "expression": {
                                              "id": 3745,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3732,
                                              "src": "11931:4:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                                "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                              }
                                            },
                                            "id": 3746,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2689,
                                            "src": "11931:11:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3747,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5673,
                                          "src": "11931:15:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 3750,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11931:39:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3751,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5695,
                                      "src": "11931:43:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11931:49:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5639,
                                  "src": "11931:53:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11931:70:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3743,
                                "name": "pending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3710,
                                "src": "11919:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5617,
                              "src": "11919:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11919:83:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11909:93:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3760,
                        "nodeType": "ExpressionStatement",
                        "src": "11909:93:11"
                      },
                      {
                        "expression": {
                          "id": 3773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3761,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3732,
                              "src": "12016:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                              }
                            },
                            "id": 3763,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "12016:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31653132",
                                "id": 3771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12078:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                },
                                "value": "1e12"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                  "typeString": "int_const 1000000000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3767,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3724,
                                      "src": "12050:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$2703_storage_ptr",
                                        "typeString": "struct LpTokenStaker.PoolInfo storage pointer"
                                      }
                                    },
                                    "id": 3768,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accRewardPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2702,
                                    "src": "12050:22:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 3764,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3732,
                                      "src": "12034:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserInfo_$2692_storage_ptr",
                                        "typeString": "struct LpTokenStaker.UserInfo storage pointer"
                                      }
                                    },
                                    "id": 3765,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2689,
                                    "src": "12034:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5673,
                                  "src": "12034:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12034:39:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5695,
                              "src": "12034:43:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12034:49:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12016:67:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3774,
                        "nodeType": "ExpressionStatement",
                        "src": "12016:67:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3716,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3713,
                      "src": "11748:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3717,
                        "name": "_pids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "11752:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 3718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11752:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11748:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3776,
                  "initializationExpression": {
                    "assignments": [3713],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3713,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3776,
                        "src": "11736:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3712,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11736:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3715,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11745:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11736:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11766:3:11",
                      "subExpression": {
                        "id": 3720,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3713,
                        "src": "11766:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3722,
                    "nodeType": "ExpressionStatement",
                    "src": "11766:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "11731:363:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3777,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3710,
                      "src": "12107:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12117:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12107:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3789,
                  "nodeType": "IfStatement",
                  "src": "12103:80:11",
                  "trueBody": {
                    "id": 3788,
                    "nodeType": "Block",
                    "src": "12120:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3783,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12152:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12152:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3785,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3710,
                              "src": "12164:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3780,
                              "name": "rewardMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2710,
                              "src": "12134:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Minter_$2673",
                                "typeString": "contract Minter"
                              }
                            },
                            "id": 3782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2672,
                            "src": "12134:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12134:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3787,
                        "nodeType": "ExpressionStatement",
                        "src": "12134:38:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6ba4c138",
            "id": 3791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3703,
                  "mutability": "mutable",
                  "name": "_pids",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "11633:24:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3701,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11633:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3702,
                    "nodeType": "ArrayTypeName",
                    "src": "11633:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11632:26:11"
            },
            "returnParameters": {
              "id": 3705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11668:0:11"
            },
            "scope": 3792,
            "src": "11618:571:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3793,
        "src": "696:11496:11"
      }
    ],
    "src": "33:12160:11"
  },
  "bytecode": "",
  "bytecodeSha1": "22ea488899fb2d3da5b83fa0899679c3bd755a58",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "LpTokenStaker",
  "coverageMap": {
    "branches": {
      "0": {
        "LpTokenStaker.setMinter": {
          "112": [1297, 1320, true]
        },
        "Ownable.transferOwnership": {
          "111": [2099, 2121, true]
        }
      },
      "11": {
        "LpTokenStaker._massUpdatePools": {
          "101": [7613, 7626, false],
          "102": [7630, 7640, false],
          "103": [7725, 7775, false]
        },
        "LpTokenStaker._updatePool": {
          "104": [8138, 8176, false],
          "105": [8288, 8301, true],
          "106": [8305, 8326, false]
        },
        "LpTokenStaker.addPool": {
          "86": [4132, 4161, true]
        },
        "LpTokenStaker.claim": {
          "93": [12107, 12118, false]
        },
        "LpTokenStaker.claimableReward": {
          "95": [6824, 6861, false],
          "96": [6865, 6878, false],
          "97": [6882, 6894, false]
        },
        "LpTokenStaker.deposit": {
          "98": [8999, 9014, false],
          "99": [9503, 9511, false]
        },
        "LpTokenStaker.emergencyWithdraw": {
          "90": [11094, 11102, false],
          "91": [11122, 11147, false],
          "92": [11302, 11327, false]
        },
        "LpTokenStaker.setMinter": {
          "100": [3805, 3830, true]
        },
        "LpTokenStaker.start": {
          "94": [3664, 3678, true]
        },
        "LpTokenStaker.withdraw": {
          "87": [9937, 9959, true],
          "88": [10164, 10175, false],
          "89": [10378, 10386, false]
        }
      },
      "2": {
        "SafeMath.add": {
          "119": [2802, 2808, true]
        },
        "SafeMath.div": {
          "117": [4302, 4307, true]
        },
        "SafeMath.mul": {
          "115": [3619, 3625, false],
          "116": [3680, 3690, true]
        },
        "SafeMath.sub": {
          "118": [3221, 3227, true]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "113": [3495, 3516, false],
          "114": [3624, 3654, true]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "109": [7234, 7241, false],
          "110": [7375, 7396, false]
        },
        "Address.functionCallWithValue": {
          "107": [4767, 4797, true],
          "108": [4858, 4876, true]
        }
      },
      "6": {}
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "28": [1150, 1163]
        },
        "Ownable.renounceOwnership": {
          "26": [1781, 1826],
          "27": [1836, 1855]
        },
        "Ownable.transferOwnership": {
          "43": [2091, 2164],
          "44": [2174, 2217],
          "45": [2227, 2244]
        }
      },
      "11": {
        "LpTokenStaker._getAllocPoints": {
          "62": [5452, 5479],
          "63": [5548, 5600],
          "64": [5529, 5532],
          "65": [5745, 5780],
          "66": [5898, 5968],
          "67": [5982, 6021],
          "68": [5826, 5831],
          "69": [6100, 6134],
          "70": [6144, 6175],
          "71": [6186, 6215]
        },
        "LpTokenStaker._massUpdatePools": {
          "49": [7496, 7539],
          "50": [7475, 7480],
          "51": [7795, 7841],
          "52": [7859, 7881]
        },
        "LpTokenStaker._updatePool": {
          "73": [8192, 8199],
          "74": [8342, 8379],
          "75": [8393, 8400],
          "76": [8584, 8667],
          "77": [8677, 8714]
        },
        "LpTokenStaker.addOracle": {
          "33": [4609, 4631],
          "34": [4688, 4709]
        },
        "LpTokenStaker.addPool": {
          "1": [4124, 4162],
          "2": [4172, 4190],
          "3": [4200, 4457]
        },
        "LpTokenStaker.claim": {
          "21": [11678, 11696],
          "22": [11909, 12002],
          "23": [12016, 12083],
          "24": [11766, 11769],
          "25": [12134, 12172]
        },
        "LpTokenStaker.claimableReward": {
          "31": [7080, 7153],
          "32": [7173, 7245]
        },
        "LpTokenStaker.deposit": {
          "35": [8967, 8985],
          "36": [9186, 9224],
          "37": [9244, 9364],
          "38": [9374, 9412],
          "39": [9422, 9489],
          "40": [9527, 9573],
          "41": [9587, 9633],
          "42": [9653, 9692]
        },
        "LpTokenStaker.emergencyWithdraw": {
          "13": [10913, 10967],
          "14": [10977, 11025],
          "15": [11035, 11050],
          "16": [11060, 11079],
          "17": [11167, 11212],
          "18": [11251, 11270],
          "19": [11347, 11392],
          "20": [11431, 11450]
        },
        "LpTokenStaker.poolLength": {
          "0": [6292, 6314]
        },
        "LpTokenStaker.setMinter": {
          "46": [3797, 3831],
          "47": [3841, 3869]
        },
        "LpTokenStaker.start": {
          "29": [3656, 3679],
          "30": [3689, 3716]
        },
        "LpTokenStaker.withdraw": {
          "4": [9929, 9982],
          "5": [9992, 10010],
          "6": [10191, 10229],
          "7": [10249, 10287],
          "8": [10297, 10364],
          "9": [10402, 10448],
          "10": [10462, 10508],
          "11": [10528, 10583],
          "12": [10593, 10633]
        }
      },
      "2": {
        "SafeMath.add": {
          "61": [2794, 2840]
        },
        "SafeMath.div": {
          "56": [4294, 4338],
          "57": [4348, 4360]
        },
        "SafeMath.mul": {
          "53": [3627, 3635],
          "54": [3672, 3728],
          "55": [3738, 3746]
        },
        "SafeMath.sub": {
          "58": [3213, 3262],
          "59": [3272, 3284]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "78": [3616, 3701]
        },
        "SafeERC20.safeTransfer": {
          "60": [786, 872]
        },
        "SafeERC20.safeTransferFrom": {
          "72": [985, 1081]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "84": [7257, 7274],
          "85": [7765, 7785]
        },
        "Address.functionCall": {
          "79": [3708, 3767]
        },
        "Address.functionCallWithValue": {
          "80": [4759, 4840],
          "81": [4850, 4910],
          "82": [5065, 5124]
        },
        "Address.isContract": {
          "83": [1117, 1132]
        }
      },
      "6": {
        "Context._msgSender": {
          "48": [678, 695]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Minter",
    "Oracle",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101375760003560e01c806378e97925116100b8578063d60b51641161007c578063d60b516414610380578063df5dd1a5146103ac578063e2bbb158146103d2578063eacdaabc146103f5578063f2fde38b146103fd578063fca3b5aa1461042357610137565b806378e979251461031b5780638da5cb5b1461032357806393f1a40b1461032b5780639b8e556314610370578063be9a65551461037857610137565b8063441a3e70116100ff578063441a3e701461022a5780635312ea8e1461024d5780635b69a7d81461026a5780636ba4c138146102a3578063715018a61461031357610137565b8063081e3eda1461013c5780631526fe271461015657806317caf6f1146101a857806332a9caba146101b0578063334d0bbd146101de575b600080fd5b610144610449565b60408051918252519081900360200190f35b6101736004803603602081101561016c57600080fd5b503561044f565b604080516001600160a01b03909616865260208601949094528484019290925260608401526080830152519081900360a00190f35b61014461049a565b6101dc600480360360408110156101c657600080fd5b506001600160a01b0381351690602001356104a0565b005b6101fb600480360360208110156101f457600080fd5b5035610632565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6101dc6004803603604081101561024057600080fd5b5080359060200135610667565b6101dc6004803603602081101561026357600080fd5b503561084e565b6102876004803603602081101561028057600080fd5b503561093c565b604080516001600160a01b039092168252519081900360200190f35b6101dc600480360360208110156102b957600080fd5b8101906020810181356401000000008111156102d457600080fd5b8201836020820111156102e657600080fd5b8035906020019184602083028401116401000000008311171561030857600080fd5b509092509050610966565b6101dc610adc565b610144610b88565b610287610b8e565b6103576004803603604081101561034157600080fd5b50803590602001356001600160a01b0316610b9d565b6040805192835260208301919091528051918290030190f35b610287610bc1565b6101dc610bd0565b6101446004803603604081101561039657600080fd5b50803590602001356001600160a01b0316610c45565b6101dc600480360360208110156103c257600080fd5b50356001600160a01b0316610dd8565b6101dc600480360360408110156103e857600080fd5b5080359060200135610ef1565b610144611082565b6101dc6004803603602081101561041357600080fd5b50356001600160a01b0316611088565b6101dc6004803603602081101561043957600080fd5b50356001600160a01b031661118a565b60035490565b6003818154811061045f57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b60065481565b6104a8611224565b6001600160a01b03166104b9610b8e565b6001600160a01b031614610502576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b600854811061051057600080fd5b610518611228565b6040805160a0810182526001600160a01b03938416815260208101928352600091810182815242606083019081526080830184815260038054600181018255955292517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600590950294850180546001600160a01b031916919097161790955592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c83015591517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d82015591517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e830155517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f90910155565b6004818154811061064257600080fd5b6000918252602090912001546001600160801b038082169250600160801b9091041682565b60006003838154811061067657fe5b60009182526020808320868452600580835260408086203387529093529190932080549290910290920192508311156106eb576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6106f3611228565b600061072d826001015461072764e8d4a510006107218760040154876000015461131c90919063ffffffff16565b9061137c565b906113e3565b905080156107a157600154604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505050505b81546107ad90856113e3565b80835560048401546107ca9164e8d4a5100091610721919061131c565b600183015584156107fa5760028301546107e490856113e3565b60028401556006546107f690856113e3565b6006555b8254610810906001600160a01b03163386611440565b604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b60006003828154811061085d57fe5b600091825260208083208584526005808352604080862033808852945290942080549390940201805490945061089f916001600160a01b039091169083611440565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3600080835560018301558315610936578083600201541061090a57600283015461090090826113e3565b6002840155610912565b600060028401555b80600654106109305760065461092890826113e3565b600655610936565b60006006555b50505050565b6008818154811061094c57600080fd5b6000918252602090912001546001600160a01b0316905081565b61096e611228565b6000805b82811015610a64576000600385858481811061098a57fe5b905060200201358154811061099b57fe5b906000526020600020906005020190506000600560008787868181106109bd57fe5b9050602002013581526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000209050610a2d610a26826001015461072764e8d4a510006107218760040154876000015461131c90919063ffffffff16565b8590611492565b9350610a5364e8d4a510006107218460040154846000015461131c90919063ffffffff16565b600191820155919091019050610972565b508015610ad757600154604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b158015610abe57600080fd5b505af1158015610ad2573d6000803e3d6000fd5b505050505b505050565b610ae4611224565b6001600160a01b0316610af5610b8e565b6001600160a01b031614610b3e576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60075481565b6000546001600160a01b031690565b60056020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b610bd8611224565b6001600160a01b0316610be9610b8e565b6001600160a01b031614610c32576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b60075415610c3f57600080fd5b42600755565b6000806000610c526114ec565b91509150600060038681548110610c6557fe5b60009182526020808320898452600580835260408086206001600160a01b038c8116885290855281872095909202909201600481810154825485516370a0823160e01b81523093810193909352945192985095969493909216926370a082319260248082019391829003018186803b158015610ce057600080fd5b505afa158015610cf4573d6000803e3d6000fd5b505050506040513d6020811015610d0a57600080fd5b5051600385015490915042118015610d2157508015155b8015610d2c57508415155b15610da1576000610d4a8560030154426113e390919063ffffffff16565b90506000610d84876107218a8e81518110610d6157fe5b6020026020010151610d7e6002548761131c90919063ffffffff16565b9061131c565b9050610d9c610a26846107218464e8d4a5100061131c565b935050505b610dc9836001015461072764e8d4a5100061072186886000015461131c90919063ffffffff16565b96505050505050505b92915050565b610de0611224565b6001600160a01b0316610df1610b8e565b6001600160a01b031614610e3a576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b806001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7357600080fd5b505afa158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b5050600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b600060038381548110610f0057fe5b60009182526020808320868452600580835260408086203387529093529190932091029091019150610f30611228565b805415610fd5576000610f65826001015461072764e8d4a510006107218760040154876000015461131c90919063ffffffff16565b600154604080516340c10f1960e01b81523360048201526024810184905290519293506001600160a01b03909116916340c10f199160448082019260009290919082900301818387803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b50505050505b8154610fec906001600160a01b031633308661172d565b8054610ff89084611492565b80825560048301546110159164e8d4a5100091610721919061131c565b6001820155831561104557600282015461102f9084611492565b60028301556006546110419084611492565b6006555b604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b60025481565b611090611224565b6001600160a01b03166110a1610b8e565b6001600160a01b0316146110ea576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b6001600160a01b03811661112f5760405162461bcd60e51b8152600401808060200182810382526026815260200180611b8e6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611192611224565b6001600160a01b03166111a3610b8e565b6001600160a01b0316146111ec576040805162461bcd60e51b81526020600482018190526024820152600080516020611bfb833981519152604482015290519081900360640190fd5b6001546001600160a01b03161561120257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000806112336114ec565b9150915060005b8251811015611269576112618184838151811061125357fe5b602002602001015184611787565b60010161123a565b506004546007541580159061127e5750600081115b15610ad75760006004600183038154811061129557fe5b6000918252602091829020604080518082019091529101546001600160801b03808216808452600160801b90920416928201929092526007549092506112dc9042906113e3565b11156109365760208101516001600160801b031660025560048054806112fe57fe5b60008281526020812082016000199081019190915501905550505050565b60008261132b57506000610dd2565b8282028284828161133857fe5b04146113755760405162461bcd60e51b8152600401808060200182810382526021815260200180611bda6021913960400191505060405180910390fd5b9392505050565b60008082116113d2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816113db57fe5b049392505050565b60008282111561143a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ad79084906118c0565b600082820183811015611375576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b606060008060088054905067ffffffffffffffff8111801561150d57600080fd5b50604051908082528060200260200182016040528015611537578160200160208202803683370190505b5090506305f5e1008160008151811061154c57fe5b602090810291909101015260015b600854811015611607576008818154811061157157fe5b60009182526020918290200154604080516350d25bcd60e01b815290516001600160a01b03909216926350d25bcd92600480840193829003018186803b1580156115ba57600080fd5b505afa1580156115ce573d6000803e3d6000fd5b505050506040513d60208110156115e457600080fd5b505182518390839081106115f457fe5b602090810291909101015260010161155a565b506003548067ffffffffffffffff8111801561162257600080fd5b5060405190808252806020026020018201604052801561164c578160200160208202803683370190505b50935060015b818110156116f05760006003828154811061166957fe5b906000526020600020906005020190506116a78482600101548151811061168c57fe5b6020026020010151826002015461131c90919063ffffffff16565b8683815181106116b357fe5b6020026020010181815250506116e58683815181106116ce57fe5b60200260200101518661149290919063ffffffff16565b945050600101611652565b50611701605061072185606461131c565b925061170e83600561137c565b8460008151811061171b57fe5b60200260200101818152505050509091565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526109369085906118c0565b60006003848154811061179657fe5b90600052602060002090600502019050806003015442116117b75750610ad7565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561180157600080fd5b505afa158015611815573d6000803e3d6000fd5b505050506040513d602081101561182b57600080fd5b5051905080158061183a575082155b1561184c575042600390910155610ad7565b60006118658360030154426113e390919063ffffffff16565b905060006118868561072188610d7e6002548761131c90919063ffffffff16565b90506118a961189e846107218464e8d4a5100061131c565b600486015490611492565b600485015550504260039092019190915550505050565b6000611915826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119719092919063ffffffff16565b805190915015610ad75780806020019051602081101561193457600080fd5b5051610ad75760405162461bcd60e51b815260040180806020018281038252602a815260200180611c1b602a913960400191505060405180910390fd5b60606119808484600085611988565b949350505050565b6060824710156119c95760405162461bcd60e51b8152600401808060200182810382526026815260200180611bb46026913960400191505060405180910390fd5b6119d285611ae3565b611a23576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611a615780518252601f199092019160209182019101611a42565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611ac3576040519150601f19603f3d011682016040523d82523d6000602084013e611ac8565b606091505b5091509150611ad8828286611ae9565b979650505050505050565b3b151590565b60608315611af8575081611375565b825115611b085782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b52578181015183820152602001611b3a565b50505050905090810190601f168015611b7f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201a8068a7d1bcd8a45052e0e47528db02b27f83ba763ff1f93e29e778efc8016264736f6c63430007060033",
  "deployedSourceMap": "696:11496:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6228:93;;;:::i;:::-;;;;;;;;;;;;;;;;1630:26;;;;;;;;;;;;;;;;-1:-1:-1;1630:26:11;;:::i;:::-;;;;-1:-1:-1;;;;;1630:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:34;;;:::i;4041:423::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4041:423:11;;;;;;;;:::i;:::-;;1887:39;;;;;;;;;;;;;;;;-1:-1:-1;1887:39:11;;:::i;:::-;;;;;-1:-1:-1;;;;;1887:39:11;;;;;;-1:-1:-1;;;;;1887:39:11;;;;;;;;;;;;;;;;9755:885;;;;;;;;;;;;;;;;-1:-1:-1;9755:885:11;;;;;;;:::i;10709:772::-;;;;;;;;;;;;;;;;-1:-1:-1;10709:772:11;;:::i;2302:23::-;;;;;;;;;;;;;;;;-1:-1:-1;2302:23:11;;:::i;:::-;;;;-1:-1:-1;;;;;2302:23:11;;;;;;;;;;;;;;11618:571;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11618:571:11;;-1:-1:-1;11618:571:11;-1:-1:-1;11618:571:11;:::i;1717:145:0:-;;;:::i;2228:24:11:-;;;:::i;1085:85:0:-;;;:::i;1980:64:11:-;;;;;;;;;;;;;;;;-1:-1:-1;1980:64:11;;;;;;-1:-1:-1;;;;;1980:64:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1535:26;;;:::i;3612:111::-;;;:::i;6390:862::-;;;;;;;;;;;;;;;;-1:-1:-1;6390:862:11;;;;;;-1:-1:-1;;;;;6390:862:11;;:::i;4545:171::-;;;;;;;;;;;;;;;;-1:-1:-1;4545:171:11;-1:-1:-1;;;;;4545:171:11;;:::i;8794:905::-;;;;;;;;;;;;;;;;-1:-1:-1;8794:905:11;;;;;;;:::i;1567:31::-;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;3729:147:11:-;;;;;;;;;;;;;;;;-1:-1:-1;3729:147:11;-1:-1:-1;;;;;3729:147:11;;:::i;6228:93::-;6299:8;:15;6228:93;:::o;1630:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1630:26:11;;;;-1:-1:-1;1630:26:11;;;;;:::o;2137:34::-;;;;:::o;4041:423::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;4147:7:11::1;:14:::0;4132:29;::::1;4124:38;;;::::0;::::1;;4172:18;:16;:18::i;:::-;4227:220;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4227:220:11;;::::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;4227:220:11;;;;;;4379:15:::1;4227:220:::0;;;;;;;;;;;;4200:8:::1;:257:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4200:257:11::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;4041:423::o;1887:39::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1887:39:11;;;;-1:-1:-1;;;;1887:39:11;;;;;:::o;9755:885::-;9821:21;9845:8;9854:4;9845:14;;;;;;;;;;;;;;;;9893;;;9845;9893;;;;;;;9908:10;9893:26;;;;;;;;;9937:11;;9845:14;;;;;;;;-1:-1:-1;;;9937:22:11;9929:53;;;;;-1:-1:-1;;;9929:53:11;;;;;;;;;;;;-1:-1:-1;;;9929:53:11;;;;;;;;;;;;;;;9992:18;:16;:18::i;:::-;10020:15;10050:100;10121:4;:15;;;10050:49;10094:4;10050:39;10066:4;:22;;;10050:4;:11;;;:15;;:39;;;;:::i;:::-;:43;;:49::i;:::-;:53;;:100::i;:::-;10020:130;-1:-1:-1;10164:11:11;;10160:80;;10191:12;;:38;;;-1:-1:-1;;;10191:38:11;;10209:10;10191:38;;;;;;;;;;;;-1:-1:-1;;;;;10191:12:11;;;;:17;;:38;;;;;:12;;:38;;;;;;;;:12;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10160:80;10263:11;;:24;;10279:7;10263:15;:24::i;:::-;10249:38;;;10331:22;;;;10315:49;;10359:4;;10315:39;;10249:38;10315:15;:39::i;:49::-;10297:15;;;:67;10378:8;;10374:145;;10420:15;;;;:28;;10440:7;10420:19;:28::i;:::-;10402:15;;;:46;10480:15;;:28;;10500:7;10480:19;:28::i;:::-;10462:15;:46;10374:145;10528:12;;:55;;-1:-1:-1;;;;;10528:12:11;10562:10;10575:7;10528:25;:55::i;:::-;10598:35;;;;;;;;10619:4;;10607:10;;10598:35;;;;;;;;;9755:885;;;;;:::o;10709:772::-;10767:21;10791:8;10800:4;10791:14;;;;;;;;;;;;;;;;10839;;;10791;10839;;;;;;;10854:10;10839:26;;;;;;;;10892:11;;10791:14;;;;;10913:12;;10791:14;;-1:-1:-1;10913:54:11;;-1:-1:-1;;;;;10913:12:11;;;;10892:11;10913:25;:54::i;:::-;10982:43;;;;;;;;11012:4;;11000:10;;10982:43;;;;;;;;;11049:1;11035:15;;;11060;;;:19;11094:8;;11090:385;;11141:6;11122:4;:15;;;:25;11118:167;;11185:15;;;;:27;;11205:6;11185:19;:27::i;:::-;11167:15;;;:45;11118:167;;;11269:1;11251:15;;;:19;11118:167;11321:6;11302:15;;:25;11298:167;;11365:15;;:27;;11385:6;11365:19;:27::i;:::-;11347:15;:45;11298:167;;;11449:1;11431:15;:19;11298:167;10709:772;;;;:::o;2302:23::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2302:23:11;;-1:-1:-1;2302:23:11;:::o;11618:571::-;11678:18;:16;:18::i;:::-;11706:15;;11731:363;11748:16;;;11731:363;;;11785:21;11809:8;11818:5;;11824:1;11818:8;;;;;;;;;;;;;11809:18;;;;;;;;;;;;;;;;;;11785:42;;11841:21;11865:8;:18;11874:5;;11880:1;11874:8;;;;;;;;;;;;;11865:18;;;;;;;;;;;:30;11884:10;-1:-1:-1;;;;;11865:30:11;-1:-1:-1;;;;;11865:30:11;;;;;;;;;;;;11841:54;;11919:83;11931:70;11985:4;:15;;;11931:49;11975:4;11931:39;11947:4;:22;;;11931:4;:11;;;:15;;:39;;;;:::i;:70::-;11919:7;;:11;:83::i;:::-;11909:93;;12034:49;12078:4;12034:39;12050:4;:22;;;12034:4;:11;;;:15;;:39;;;;:::i;:49::-;12016:15;;;;:67;11766:3;;;;;-1:-1:-1;11731:363:11;;;-1:-1:-1;12107:11:11;;12103:80;;12134:12;;:38;;;-1:-1:-1;;;12134:38:11;;12152:10;12134:38;;;;;;;;;;;;-1:-1:-1;;;;;12134:12:11;;;;:17;;:38;;;;;:12;;:38;;;;;;;;:12;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12103:80;11618:571;;;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;2228:24:11:-;;;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;1980:64:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1535:26::-;;;-1:-1:-1;;;;;1535:26:11;;:::o;3612:111::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;3664:9:11::1;::::0;:14;3656:23:::1;;;::::0;::::1;;3701:15;3689:9;:27:::0;3612:111::o;6390:862::-;6491:7;6515:28;6545:15;6564:17;:15;:17::i;:::-;6514:67;;;;6591:21;6615:8;6624:4;6615:14;;;;;;;;;;;;;;;;6663;;;6615;6663;;;;;;;-1:-1:-1;;;;;6663:21:11;;;;;;;;;;;6615:14;;;;;;;6722:22;;;;;6773:12;;:37;;-1:-1:-1;;;6773:37:11;;6804:4;6773:37;;;;;;;;;6615:14;;-1:-1:-1;6663:21:11;;6615:14;6773:12;;;;;:22;;:37;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6773:37:11;6842:19;;;;6773:37;;-1:-1:-1;6824:15:11;:37;:54;;;;-1:-1:-1;6865:13:11;;;6824:54;:70;;;;-1:-1:-1;6882:12:11;;;6824:70;6820:344;;;6910:16;6929:40;6949:4;:19;;;6929:15;:19;;:40;;;;:::i;:::-;6910:59;;6983:14;7000:66;7058:7;7000:53;7035:11;7047:4;7035:17;;;;;;;;;;;;;;7000:30;7013:16;;7000:8;:12;;:30;;;;:::i;:::-;:34;;:53::i;:66::-;6983:83;-1:-1:-1;7100:53:11;7122:30;7143:8;7122:16;6983:83;7133:4;7122:10;:16::i;7100:53::-;7080:73;;6820:344;;;7180:65;7229:4;:15;;;7180:44;7219:4;7180:34;7196:17;7180:4;:11;;;:15;;:34;;;;:::i;:65::-;7173:72;;;;;;;;6390:862;;;;;:::o;4545:171::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;4609:7:11::1;-1:-1:-1::0;;;;;4609:20:11::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;4688:7:11::1;:21:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4688:21:11;;;;;::::1;::::0;;-1:-1:-1;;;;;;4688:21:11::1;-1:-1:-1::0;;;;;4688:21:11;;;::::1;::::0;;;::::1;::::0;;4545:171::o;8794:905::-;8859:21;8883:8;8892:4;8883:14;;;;;;;;;;;;;;;;8931;;;8883;8931;;;;;;;8946:10;8931:26;;;;;;;;;8883:14;;;;;;-1:-1:-1;8967:18:11;:16;:18::i;:::-;8999:11;;:15;8995:240;;9030:15;9064:108;9139:4;:15;;;9064:49;9108:4;9064:39;9080:4;:22;;;9064:4;:11;;;:15;;:39;;;;:::i;:108::-;9186:12;;:38;;;-1:-1:-1;;;9186:38:11;;9204:10;9186:38;;;;;;;;;;;;9030:142;;-1:-1:-1;;;;;;9186:12:11;;;;:17;;:38;;;;;:12;;:38;;;;;;;;:12;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8995:240;;9244:12;;:120;;-1:-1:-1;;;;;9244:12:11;9295:10;9328:4;9347:7;9244:29;:120::i;:::-;9388:11;;:24;;9404:7;9388:15;:24::i;:::-;9374:38;;;9456:22;;;;9440:49;;9484:4;;9440:39;;9374:38;9440:15;:39::i;:49::-;9422:15;;;:67;9503:8;;9499:145;;9545:15;;;;:28;;9565:7;9545:19;:28::i;:::-;9527:15;;;:46;9605:15;;:28;;9625:7;9605:19;:28::i;:::-;9587:15;:46;9499:145;9658:34;;;;;;;;9678:4;;9666:10;;9658:34;;;;;;;;;8794:905;;;;:::o;1567:31::-;;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;3729:147:11:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;3805:12:11::1;::::0;-1:-1:-1;;;;;3805:12:11::1;:25:::0;3797:34:::1;;;::::0;::::1;;3841:12;:28:::0;;-1:-1:-1;;;;;;3841:28:11::1;-1:-1:-1::0;;;;;3841:28:11;;;::::1;::::0;;;::::1;::::0;;3729:147::o;598:104:6:-;685:10;598:104;:::o;7303:609:11:-;7351:28;7381:15;7400:17;:15;:17::i;:::-;7350:67;;;;7432:11;7427:123;7455:11;:18;7449:3;:24;7427:123;;;7496:43;7508:3;7513:11;7525:3;7513:16;;;;;;;;;;;;;;7531:7;7496:11;:43::i;:::-;7475:5;;7427:123;;;-1:-1:-1;7576:16:11;:23;7613:9;;:13;;;;:27;;;7639:1;7630:6;:10;7613:27;7609:297;;;7656:22;7681:16;7705:1;7698:6;:8;7681:26;;;;;;;;;;;;;;;;;7656:51;;;;;;;;;7681:26;;7656:51;-1:-1:-1;;;;;7656:51:11;;;;;;-1:-1:-1;;;7656:51:11;;;;;;;;;;;7745:9;;7656:51;;-1:-1:-1;7725:30:11;;:15;;:19;:30::i;:::-;:50;7721:175;;;7822:18;;;;-1:-1:-1;;;;;7814:27:11;7795:16;:46;7859:16;:22;;;;;;;;;;;;;;;;-1:-1:-1;;7859:22:11;;;;;;;;;;7609:297;7303:609;;;:::o;3538:215:2:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:2;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3538:215;-1:-1:-1;;;3538:215:2:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:2:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:2;;;3136:155::o;704:175:4:-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;2690:175:2:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;5195:1027:11;5245:28;5275:15;5381:29;5427:7;:14;;;;5413:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5413:29:11;;5381:61;;5470:9;5452:12;5465:1;5452:15;;;;;;;;;;;;;;;;;:27;5506:1;5489:122;5513:7;:14;5509:18;;5489:122;;;5574:7;5582:1;5574:10;;;;;;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;5574:25:11;;;;-1:-1:-1;;;;;5574:10:11;;;;:23;;:25;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5574:25:11;5548:15;;:12;;5561:1;;5548:15;;;;;;;;;;;;;;;:52;5529:3;;5489:122;;;-1:-1:-1;5720:8:11;:15;;5759:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5759:21:11;-1:-1:-1;5745:35:11;-1:-1:-1;5809:1:11;5790:242;5818:6;5812:3;:12;5790:242;;;5847:21;5871:8;5880:3;5871:13;;;;;;;;;;;;;;;;;;5847:37;;5917:51;5937:12;5950:4;:16;;;5937:30;;;;;;;;;;;;;;5917:4;:15;;;:19;;:51;;;;:::i;:::-;5898:11;5910:3;5898:16;;;;;;;;;;;;;:70;;;;;5992:29;6004:11;6016:3;6004:16;;;;;;;;;;;;;;5992:7;:11;;:29;;;;:::i;:::-;5982:39;-1:-1:-1;;5826:5:11;;5790:242;;;-1:-1:-1;6110:24:11;6131:2;6110:16;:7;6122:3;6110:11;:16::i;:24::-;6100:34;-1:-1:-1;6161:14:11;6100:34;6173:1;6161:11;:14::i;:::-;6144:11;6156:1;6144:14;;;;;;;;;;;;;:31;;;;;6186:29;;5195:1027;;:::o;885:203:4:-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;7985:736:11:-;8086:21;8110:8;8119:4;8110:14;;;;;;;;;;;;;;;;;;8086:38;;8157:4;:19;;;8138:15;:38;8134:75;;8192:7;;;8134:75;8237:12;;:37;;;-1:-1:-1;;;8237:37:11;;8268:4;8237:37;;;;;;8218:16;;-1:-1:-1;;;;;8237:12:11;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8237:37:11;;-1:-1:-1;8288:13:11;;;:38;;-1:-1:-1;8305:21:11;;8288:38;8284:126;;;-1:-1:-1;8364:15:11;8342:19;;;;:37;8393:7;;8284:126;8419:16;8438:40;8458:4;:19;;;8438:15;:19;;:40;;;;:::i;:::-;8419:59;;8488:14;8505:69;8557:16;8505:47;8540:11;8505:30;8518:16;;8505:8;:12;;:30;;;;:::i;:69::-;8488:86;-1:-1:-1;8609:58:11;8636:30;8657:8;8636:16;8488:86;8647:4;8636:10;:16::i;:30::-;8609:22;;;;;:26;:58::i;:::-;8584:22;;;:83;-1:-1:-1;;8699:15:11;8677:19;;;;:37;;;;-1:-1:-1;7985:736:11;;;:::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:5;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:5:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [696, 12192],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD60B5164 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD60B5164 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xDF5DD1A5 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xEACDAABC EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x423 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x78E97925 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x9B8E5563 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x378 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x5B69A7D8 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x6BA4C138 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x313 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x32A9CABA EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x334D0BBD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x667 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x84E JUMP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x966 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xADC JUMP JUMPDEST PUSH2 0x144 PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x287 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x118A JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B9 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x502 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP5 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x5 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP8 AND OR SWAP1 SWAP6 SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E DUP4 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x676 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F3 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x727 PUSH5 0xE8D4A51000 PUSH2 0x721 DUP8 PUSH1 0x4 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x137C JUMP JUMPDEST SWAP1 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 SLOAD PUSH2 0x7AD SWAP1 DUP6 PUSH2 0x13E3 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x7CA SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP5 ISZERO PUSH2 0x7FA JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x7E4 SWAP1 DUP6 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x6 SLOAD PUSH2 0x7F6 SWAP1 DUP6 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMPDEST DUP3 SLOAD PUSH2 0x810 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x85D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP1 DUP9 MSTORE SWAP5 MSTORE SWAP1 SWAP5 KECCAK256 DUP1 SLOAD SWAP4 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP PUSH2 0x89F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE DUP4 ISZERO PUSH2 0x936 JUMPI DUP1 DUP4 PUSH1 0x2 ADD SLOAD LT PUSH2 0x90A JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x900 SWAP1 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x912 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST DUP1 PUSH1 0x6 SLOAD LT PUSH2 0x930 JUMPI PUSH1 0x6 SLOAD PUSH2 0x928 SWAP1 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA64 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x98A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x9BD JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xA2D PUSH2 0xA26 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x727 PUSH5 0xE8D4A51000 PUSH2 0x721 DUP8 PUSH1 0x4 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1492 JUMP JUMPDEST SWAP4 POP PUSH2 0xA53 PUSH5 0xE8D4A51000 PUSH2 0x721 DUP5 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x972 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAE4 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAF5 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB3E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBD8 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBE9 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC52 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xC65 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SWAP6 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD PUSH1 0x4 DUP2 DUP2 ADD SLOAD DUP3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP5 MLOAD SWAP3 SWAP9 POP SWAP6 SWAP7 SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 DUP6 ADD SLOAD SWAP1 SWAP2 POP TIMESTAMP GT DUP1 ISZERO PUSH2 0xD21 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD2C JUMPI POP DUP5 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x0 PUSH2 0xD4A DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x13E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD84 DUP8 PUSH2 0x721 DUP11 DUP15 DUP2 MLOAD DUP2 LT PUSH2 0xD61 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD7E PUSH1 0x2 SLOAD DUP8 PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP PUSH2 0xD9C PUSH2 0xA26 DUP5 PUSH2 0x721 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x131C JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xDC9 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x727 PUSH5 0xE8D4A51000 PUSH2 0x721 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE0 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF00 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xF30 PUSH2 0x1228 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 PUSH2 0xF65 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x727 PUSH5 0xE8D4A51000 PUSH2 0x721 DUP8 PUSH1 0x4 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP2 SLOAD PUSH2 0xFEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x172D JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF8 SWAP1 DUP5 PUSH2 0x1492 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x1015 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP4 ISZERO PUSH2 0x1045 JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x102F SWAP1 DUP5 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x6 SLOAD PUSH2 0x1041 SWAP1 DUP5 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10A1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B8E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A3 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1233 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1261 DUP2 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1253 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x123A JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x127E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x7 SLOAD SWAP1 SWAP3 POP PUSH2 0x12DC SWAP1 TIMESTAMP SWAP1 PUSH2 0x13E3 JUMP JUMPDEST GT ISZERO PUSH2 0x936 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x12FE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x132B JUMPI POP PUSH1 0x0 PUSH2 0xDD2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1338 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BDA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x13D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x13DB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x143A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xAD7 SWAP1 DUP5 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x150D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1537 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH4 0x5F5E100 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x154C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1571 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x50D25BCD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x50D25BCD SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x15F4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x155A JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x164C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1669 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH2 0x16A7 DUP5 DUP3 PUSH1 0x1 ADD SLOAD DUP2 MLOAD DUP2 LT PUSH2 0x168C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x16E5 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16CE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x1492 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP PUSH1 0x1 ADD PUSH2 0x1652 JUMP JUMPDEST POP PUSH2 0x1701 PUSH1 0x50 PUSH2 0x721 DUP6 PUSH1 0x64 PUSH2 0x131C JUMP JUMPDEST SWAP3 POP PUSH2 0x170E DUP4 PUSH1 0x5 PUSH2 0x137C JUMP JUMPDEST DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x171B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x936 SWAP1 DUP6 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1796 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP GT PUSH2 0x17B7 JUMPI POP PUSH2 0xAD7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1815 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x183A JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x184C JUMPI POP TIMESTAMP PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP4 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x13E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1886 DUP6 PUSH2 0x721 DUP9 PUSH2 0xD7E PUSH1 0x2 SLOAD DUP8 PUSH2 0x131C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18A9 PUSH2 0x189E DUP5 PUSH2 0x721 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x4 DUP7 ADD SLOAD SWAP1 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SSTORE POP POP TIMESTAMP PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1915 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1971 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xAD7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C1B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1980 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1988 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BB4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D2 DUP6 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x1A23 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1A61 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AC3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AD8 DUP3 DUP3 DUP7 PUSH2 0x1AE9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AF8 JUMPI POP DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1B08 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B52 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B3A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B7F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212201A8068A7 0xD1 0xBC 0xD8 LOG4 POP MSTORE 0xE0 0xE4 PUSH22 0x28DB02B27F83BA763FF1F93E29E778EFC8016264736F PUSH13 0x63430007060033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [696, 12192],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [696, 12192],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [696, 12192],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [696, 12192],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [696, 12192],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [696, 12192],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [696, 12192],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137"
    },
    "25": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [696, 12192],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [696, 12192],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x78E97925"
    },
    "38": {
      "fn": null,
      "offset": [696, 12192],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD60B5164"
    },
    "49": {
      "fn": null,
      "offset": [696, 12192],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD60B5164"
    },
    "60": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x380"
    },
    "64": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDF5DD1A5"
    },
    "71": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AC"
    },
    "75": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE2BBB158"
    },
    "82": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3D2"
    },
    "86": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEACDAABC"
    },
    "93": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F5"
    },
    "97": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3FD"
    },
    "108": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFCA3B5AA"
    },
    "115": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x423"
    },
    "119": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137"
    },
    "123": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMP",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPDEST",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x78E97925"
    },
    "131": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31B"
    },
    "135": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x323"
    },
    "146": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x93F1A40B"
    },
    "153": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "157": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9B8E5563"
    },
    "164": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x370"
    },
    "168": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "169": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBE9A6555"
    },
    "175": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "176": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x378"
    },
    "179": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "180": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137"
    },
    "183": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMP",
      "path": "11"
    },
    "184": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPDEST",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x441A3E70"
    },
    "191": {
      "fn": null,
      "offset": [696, 12192],
      "op": "GT",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x441A3E70"
    },
    "202": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "206": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5312EA8E"
    },
    "213": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24D"
    },
    "217": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5B69A7D8"
    },
    "224": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "225": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26A"
    },
    "228": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6BA4C138"
    },
    "235": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "236": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A3"
    },
    "239": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "240": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "246": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "247": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x313"
    },
    "250": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "251": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137"
    },
    "254": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMP",
      "path": "11"
    },
    "255": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPDEST",
      "path": "11"
    },
    "256": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "257": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x81E3EDA"
    },
    "262": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13C"
    },
    "266": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "267": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "268": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1526FE27"
    },
    "273": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "274": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x156"
    },
    "277": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x17CAF6F1"
    },
    "284": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "285": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A8"
    },
    "288": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "289": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x32A9CABA"
    },
    "295": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "296": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B0"
    },
    "299": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "300": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH4",
      "path": "11",
      "value": "0x334D0BBD"
    },
    "306": {
      "fn": null,
      "offset": [696, 12192],
      "op": "EQ",
      "path": "11"
    },
    "307": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DE"
    },
    "310": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPI",
      "path": "11"
    },
    "311": {
      "fn": null,
      "offset": [696, 12192],
      "op": "JUMPDEST",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [696, 12192],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "314": {
      "fn": null,
      "offset": [696, 12192],
      "op": "DUP1",
      "path": "11"
    },
    "315": {
      "first_revert": true,
      "fn": null,
      "offset": [696, 12192],
      "op": "REVERT",
      "path": "11"
    },
    "316": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "JUMPDEST",
      "path": "11"
    },
    "317": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "320": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "PUSH2",
      "path": "11",
      "value": "0x449"
    },
    "323": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "i",
      "offset": [6228, 6321],
      "op": "JUMP",
      "path": "11"
    },
    "324": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "JUMPDEST",
      "path": "11"
    },
    "325": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "327": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "DUP1",
      "path": "11"
    },
    "328": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "MLOAD",
      "path": "11"
    },
    "329": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SWAP2",
      "path": "11"
    },
    "330": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "DUP3",
      "path": "11"
    },
    "331": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "MSTORE",
      "path": "11"
    },
    "332": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "MLOAD",
      "path": "11"
    },
    "333": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SWAP1",
      "path": "11"
    },
    "334": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "DUP2",
      "path": "11"
    },
    "335": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SWAP1",
      "path": "11"
    },
    "336": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SUB",
      "path": "11"
    },
    "337": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "339": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "ADD",
      "path": "11"
    },
    "340": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SWAP1",
      "path": "11"
    },
    "341": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "RETURN",
      "path": "11"
    },
    "342": {
      "offset": [1630, 1656],
      "op": "JUMPDEST",
      "path": "11"
    },
    "343": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH2",
      "path": "11",
      "value": "0x173"
    },
    "346": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "348": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP1",
      "path": "11"
    },
    "349": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "350": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SUB",
      "path": "11"
    },
    "351": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "353": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP2",
      "path": "11"
    },
    "354": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "LT",
      "path": "11"
    },
    "355": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ISZERO",
      "path": "11"
    },
    "356": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16C"
    },
    "359": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "JUMPI",
      "path": "11"
    },
    "360": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "362": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP1",
      "path": "11"
    },
    "363": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "REVERT",
      "path": "11"
    },
    "364": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "JUMPDEST",
      "path": "11"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "offset": [1630, 1656],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "367": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44F"
    },
    "370": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "i",
      "offset": [1630, 1656],
      "op": "JUMP",
      "path": "11"
    },
    "371": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "JUMPDEST",
      "path": "11"
    },
    "372": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "374": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP1",
      "path": "11"
    },
    "375": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MLOAD",
      "path": "11"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "385": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP7",
      "path": "11"
    },
    "386": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "AND",
      "path": "11"
    },
    "387": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP7",
      "path": "11"
    },
    "388": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "389": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "391": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP7",
      "path": "11"
    },
    "392": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "393": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP5",
      "path": "11"
    },
    "394": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "395": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP5",
      "path": "11"
    },
    "396": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "397": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP5",
      "path": "11"
    },
    "398": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP5",
      "path": "11"
    },
    "399": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "400": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP3",
      "path": "11"
    },
    "401": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "402": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP3",
      "path": "11"
    },
    "403": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "404": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "406": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP5",
      "path": "11"
    },
    "407": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "408": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "409": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "411": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP4",
      "path": "11"
    },
    "412": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "413": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "414": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MLOAD",
      "path": "11"
    },
    "415": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "416": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP2",
      "path": "11"
    },
    "417": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "418": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SUB",
      "path": "11"
    },
    "419": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "421": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "422": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "423": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "RETURN",
      "path": "11"
    },
    "424": {
      "offset": [2137, 2171],
      "op": "JUMPDEST",
      "path": "11"
    },
    "425": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [2137, 2171],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "428": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [2137, 2171],
      "op": "PUSH2",
      "path": "11",
      "value": "0x49A"
    },
    "431": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "i",
      "offset": [2137, 2171],
      "op": "JUMP",
      "path": "11"
    },
    "432": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "JUMPDEST",
      "path": "11"
    },
    "433": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "436": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "438": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "DUP1",
      "path": "11"
    },
    "439": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "440": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "SUB",
      "path": "11"
    },
    "441": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "443": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "DUP2",
      "path": "11"
    },
    "444": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "LT",
      "path": "11"
    },
    "445": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "ISZERO",
      "path": "11"
    },
    "446": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C6"
    },
    "449": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "JUMPI",
      "path": "11"
    },
    "450": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "452": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "DUP1",
      "path": "11"
    },
    "453": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "REVERT",
      "path": "11"
    },
    "454": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "JUMPDEST",
      "path": "11"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "DUP2",
      "path": "11"
    },
    "465": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "466": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "AND",
      "path": "11"
    },
    "467": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "SWAP1",
      "path": "11"
    },
    "468": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "470": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "ADD",
      "path": "11"
    },
    "471": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "472": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A0"
    },
    "475": {
      "fn": "LpTokenStaker.addPool",
      "jump": "i",
      "offset": [4041, 4464],
      "op": "JUMP",
      "path": "11"
    },
    "476": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "JUMPDEST",
      "path": "11"
    },
    "477": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "STOP",
      "path": "11"
    },
    "478": {
      "offset": [1887, 1926],
      "op": "JUMPDEST",
      "path": "11"
    },
    "479": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FB"
    },
    "482": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "484": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "485": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "486": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SUB",
      "path": "11"
    },
    "487": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "489": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "490": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "LT",
      "path": "11"
    },
    "491": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "ISZERO",
      "path": "11"
    },
    "492": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F4"
    },
    "495": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "JUMPI",
      "path": "11"
    },
    "496": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "498": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "499": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "REVERT",
      "path": "11"
    },
    "500": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "JUMPDEST",
      "path": "11"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "offset": [1887, 1926],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "503": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH2",
      "path": "11",
      "value": "0x632"
    },
    "506": {
      "fn": "LpTokenStaker.addPool",
      "jump": "i",
      "offset": [1887, 1926],
      "op": "JUMP",
      "path": "11"
    },
    "507": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "JUMPDEST",
      "path": "11"
    },
    "508": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "510": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "MLOAD",
      "path": "11"
    },
    "511": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "512": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP4",
      "path": "11"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "op": "SUB"
    },
    "521": {
      "offset": [1887, 1926],
      "op": "AND",
      "path": "11"
    },
    "522": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "523": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "MSTORE",
      "path": "11"
    },
    "524": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "526": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "ADD",
      "path": "11"
    },
    "527": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP3",
      "path": "11"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "offset": [1887, 1926],
      "op": "AND",
      "path": "11"
    },
    "537": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "538": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "MSTORE",
      "path": "11"
    },
    "539": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "541": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "ADD",
      "path": "11"
    },
    "542": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP3",
      "path": "11"
    },
    "543": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "POP",
      "path": "11"
    },
    "544": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "POP",
      "path": "11"
    },
    "545": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "POP",
      "path": "11"
    },
    "546": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "548": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "MLOAD",
      "path": "11"
    },
    "549": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "550": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP2",
      "path": "11"
    },
    "551": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SUB",
      "path": "11"
    },
    "552": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP1",
      "path": "11"
    },
    "553": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "RETURN",
      "path": "11"
    },
    "554": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "JUMPDEST",
      "path": "11"
    },
    "555": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "558": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "560": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "DUP1",
      "path": "11"
    },
    "561": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "562": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "SUB",
      "path": "11"
    },
    "563": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "565": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "DUP2",
      "path": "11"
    },
    "566": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "LT",
      "path": "11"
    },
    "567": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "ISZERO",
      "path": "11"
    },
    "568": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH2",
      "path": "11",
      "value": "0x240"
    },
    "571": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "JUMPI",
      "path": "11"
    },
    "572": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "574": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "DUP1",
      "path": "11"
    },
    "575": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "REVERT",
      "path": "11"
    },
    "576": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "JUMPDEST",
      "path": "11"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "DUP1",
      "path": "11"
    },
    "579": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "580": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "SWAP1",
      "path": "11"
    },
    "581": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "583": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "ADD",
      "path": "11"
    },
    "584": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "585": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "PUSH2",
      "path": "11",
      "value": "0x667"
    },
    "588": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [9755, 10640],
      "op": "JUMP",
      "path": "11"
    },
    "589": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "JUMPDEST",
      "path": "11"
    },
    "590": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "593": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "595": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "DUP1",
      "path": "11"
    },
    "596": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "597": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "SUB",
      "path": "11"
    },
    "598": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "600": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "DUP2",
      "path": "11"
    },
    "601": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "LT",
      "path": "11"
    },
    "602": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "ISZERO",
      "path": "11"
    },
    "603": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH2",
      "path": "11",
      "value": "0x263"
    },
    "606": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "JUMPI",
      "path": "11"
    },
    "607": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "609": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "DUP1",
      "path": "11"
    },
    "610": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "REVERT",
      "path": "11"
    },
    "611": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "JUMPDEST",
      "path": "11"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "614": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "PUSH2",
      "path": "11",
      "value": "0x84E"
    },
    "617": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "i",
      "offset": [10709, 11481],
      "op": "JUMP",
      "path": "11"
    },
    "618": {
      "offset": [2302, 2325],
      "op": "JUMPDEST",
      "path": "11"
    },
    "619": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH2",
      "path": "11",
      "value": "0x287"
    },
    "622": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "624": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP1",
      "path": "11"
    },
    "625": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "626": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SUB",
      "path": "11"
    },
    "627": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "629": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "630": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "LT",
      "path": "11"
    },
    "631": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "ISZERO",
      "path": "11"
    },
    "632": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH2",
      "path": "11",
      "value": "0x280"
    },
    "635": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "JUMPI",
      "path": "11"
    },
    "636": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "638": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP1",
      "path": "11"
    },
    "639": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "REVERT",
      "path": "11"
    },
    "640": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "JUMPDEST",
      "path": "11"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "offset": [2302, 2325],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "643": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH2",
      "path": "11",
      "value": "0x93C"
    },
    "646": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "i",
      "offset": [2302, 2325],
      "op": "JUMP",
      "path": "11"
    },
    "647": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "JUMPDEST",
      "path": "11"
    },
    "648": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "650": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP1",
      "path": "11"
    },
    "651": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "MLOAD",
      "path": "11"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "op": "SUB"
    },
    "660": {
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "661": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP3",
      "path": "11"
    },
    "662": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "AND",
      "path": "11"
    },
    "663": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP3",
      "path": "11"
    },
    "664": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "MSTORE",
      "path": "11"
    },
    "665": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "MLOAD",
      "path": "11"
    },
    "666": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "667": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "668": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "669": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SUB",
      "path": "11"
    },
    "670": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "672": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "ADD",
      "path": "11"
    },
    "673": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "674": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "RETURN",
      "path": "11"
    },
    "675": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "676": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "679": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "681": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "682": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "683": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SUB",
      "path": "11"
    },
    "684": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "686": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP2",
      "path": "11"
    },
    "687": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "LT",
      "path": "11"
    },
    "688": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ISZERO",
      "path": "11"
    },
    "689": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B9"
    },
    "692": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPI",
      "path": "11"
    },
    "693": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "695": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "696": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "REVERT",
      "path": "11"
    },
    "697": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "698": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP2",
      "path": "11"
    },
    "699": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "700": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP1",
      "path": "11"
    },
    "701": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "703": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP2",
      "path": "11"
    },
    "704": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "705": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP2",
      "path": "11"
    },
    "706": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "707": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "713": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP2",
      "path": "11"
    },
    "714": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "GT",
      "path": "11"
    },
    "715": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ISZERO",
      "path": "11"
    },
    "716": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D4"
    },
    "719": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPI",
      "path": "11"
    },
    "720": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "722": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "723": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "REVERT",
      "path": "11"
    },
    "724": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "725": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP3",
      "path": "11"
    },
    "726": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "727": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP4",
      "path": "11"
    },
    "728": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "730": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP3",
      "path": "11"
    },
    "731": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "732": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "GT",
      "path": "11"
    },
    "733": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ISZERO",
      "path": "11"
    },
    "734": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E6"
    },
    "737": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPI",
      "path": "11"
    },
    "738": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "740": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "741": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "REVERT",
      "path": "11"
    },
    "742": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "743": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "744": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "745": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP1",
      "path": "11"
    },
    "746": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "748": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "749": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP2",
      "path": "11"
    },
    "750": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP5",
      "path": "11"
    },
    "751": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "753": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP4",
      "path": "11"
    },
    "754": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "MUL",
      "path": "11"
    },
    "755": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP5",
      "path": "11"
    },
    "756": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ADD",
      "path": "11"
    },
    "757": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "GT",
      "path": "11"
    },
    "758": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "764": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP4",
      "path": "11"
    },
    "765": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "GT",
      "path": "11"
    },
    "766": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "OR",
      "path": "11"
    },
    "767": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "ISZERO",
      "path": "11"
    },
    "768": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x308"
    },
    "771": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPI",
      "path": "11"
    },
    "772": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "774": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "DUP1",
      "path": "11"
    },
    "775": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "REVERT",
      "path": "11"
    },
    "776": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP1",
      "path": "11"
    },
    "779": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP3",
      "path": "11"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "SWAP1",
      "path": "11"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "PUSH2",
      "path": "11",
      "value": "0x966"
    },
    "786": {
      "fn": "LpTokenStaker.claim",
      "jump": "i",
      "offset": [11618, 12189],
      "op": "JUMP",
      "path": "11"
    },
    "787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "JUMPDEST",
      "path": "0"
    },
    "788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1717, 1862],
      "op": "JUMP",
      "path": "0"
    },
    "795": {
      "offset": [2228, 2252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [2228, 2252],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [2228, 2252],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB88"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [2228, 2252],
      "op": "JUMP",
      "path": "11"
    },
    "803": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "807": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "810": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1085, 1170],
      "op": "JUMP",
      "path": "0"
    },
    "811": {
      "offset": [1980, 2044],
      "op": "JUMPDEST",
      "path": "11"
    },
    "812": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH2",
      "path": "11",
      "value": "0x357"
    },
    "815": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "817": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "818": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "819": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SUB",
      "path": "11"
    },
    "820": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "822": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP2",
      "path": "11"
    },
    "823": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "LT",
      "path": "11"
    },
    "824": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "ISZERO",
      "path": "11"
    },
    "825": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH2",
      "path": "11",
      "value": "0x341"
    },
    "828": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "JUMPI",
      "path": "11"
    },
    "829": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "832": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "REVERT",
      "path": "11"
    },
    "833": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "JUMPDEST",
      "path": "11"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "836": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "ADD",
      "path": "11"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "op": "SUB"
    },
    "850": {
      "offset": [1980, 2044],
      "op": "AND",
      "path": "11"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB9D"
    },
    "854": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1980, 2044],
      "op": "JUMP",
      "path": "11"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "JUMPDEST",
      "path": "11"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "859": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MLOAD",
      "path": "11"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP3",
      "path": "11"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP4",
      "path": "11"
    },
    "862": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "863": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "865": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP4",
      "path": "11"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "ADD",
      "path": "11"
    },
    "867": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP2",
      "path": "11"
    },
    "868": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP2",
      "path": "11"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "872": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MLOAD",
      "path": "11"
    },
    "873": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP2",
      "path": "11"
    },
    "874": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP3",
      "path": "11"
    },
    "875": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "876": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SUB",
      "path": "11"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "ADD",
      "path": "11"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "RETURN",
      "path": "11"
    },
    "880": {
      "offset": [1535, 1561],
      "op": "JUMPDEST",
      "path": "11"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [1535, 1561],
      "op": "PUSH2",
      "path": "11",
      "value": "0x287"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [1535, 1561],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBC1"
    },
    "887": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1535, 1561],
      "op": "JUMP",
      "path": "11"
    },
    "888": {
      "fn": "LpTokenStaker.start",
      "offset": [3612, 3723],
      "op": "JUMPDEST",
      "path": "11"
    },
    "889": {
      "fn": "LpTokenStaker.start",
      "offset": [3612, 3723],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "892": {
      "fn": "LpTokenStaker.start",
      "offset": [3612, 3723],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBD0"
    },
    "895": {
      "fn": "LpTokenStaker.start",
      "jump": "i",
      "offset": [3612, 3723],
      "op": "JUMP",
      "path": "11"
    },
    "896": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "897": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "900": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "902": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "DUP1",
      "path": "11"
    },
    "903": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "904": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "SUB",
      "path": "11"
    },
    "905": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "907": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "DUP2",
      "path": "11"
    },
    "908": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "LT",
      "path": "11"
    },
    "909": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "ISZERO",
      "path": "11"
    },
    "910": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH2",
      "path": "11",
      "value": "0x396"
    },
    "913": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "JUMPI",
      "path": "11"
    },
    "914": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "916": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "DUP1",
      "path": "11"
    },
    "917": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "REVERT",
      "path": "11"
    },
    "918": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "DUP1",
      "path": "11"
    },
    "921": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "922": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "SWAP1",
      "path": "11"
    },
    "923": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "925": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "ADD",
      "path": "11"
    },
    "926": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "op": "SUB"
    },
    "935": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "AND",
      "path": "11"
    },
    "936": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC45"
    },
    "939": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [6390, 7252],
      "op": "JUMP",
      "path": "11"
    },
    "940": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "JUMPDEST",
      "path": "11"
    },
    "941": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "944": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "946": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "DUP1",
      "path": "11"
    },
    "947": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "948": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "SUB",
      "path": "11"
    },
    "949": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "951": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "DUP2",
      "path": "11"
    },
    "952": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "LT",
      "path": "11"
    },
    "953": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "ISZERO",
      "path": "11"
    },
    "954": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C2"
    },
    "957": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "JUMPI",
      "path": "11"
    },
    "958": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "960": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "DUP1",
      "path": "11"
    },
    "961": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "REVERT",
      "path": "11"
    },
    "962": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "JUMPDEST",
      "path": "11"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "AND",
      "path": "11"
    },
    "974": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD8"
    },
    "977": {
      "fn": "LpTokenStaker.addOracle",
      "jump": "i",
      "offset": [4545, 4716],
      "op": "JUMP",
      "path": "11"
    },
    "978": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "JUMPDEST",
      "path": "11"
    },
    "979": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "982": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "984": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "DUP1",
      "path": "11"
    },
    "985": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "986": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "SUB",
      "path": "11"
    },
    "987": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "989": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "DUP2",
      "path": "11"
    },
    "990": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "LT",
      "path": "11"
    },
    "991": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "ISZERO",
      "path": "11"
    },
    "992": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E8"
    },
    "995": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "JUMPI",
      "path": "11"
    },
    "996": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "998": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "DUP1",
      "path": "11"
    },
    "999": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "REVERT",
      "path": "11"
    },
    "1000": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "DUP1",
      "path": "11"
    },
    "1003": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1004": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "SWAP1",
      "path": "11"
    },
    "1005": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1007": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "ADD",
      "path": "11"
    },
    "1008": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1009": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEF1"
    },
    "1012": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [8794, 9699],
      "op": "JUMP",
      "path": "11"
    },
    "1013": {
      "offset": [1567, 1598],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1014": {
      "fn": "LpTokenStaker.deposit",
      "offset": [1567, 1598],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "1017": {
      "fn": "LpTokenStaker.deposit",
      "offset": [1567, 1598],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1082"
    },
    "1020": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [1567, 1598],
      "op": "JUMP",
      "path": "11"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "1025": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1027": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP1",
      "path": "0"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1029": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "SUB",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP2",
      "path": "0"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "LT",
      "path": "0"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "ISZERO",
      "path": "0"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPI",
      "path": "0"
    },
    "1039": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1041": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "DUP1",
      "path": "0"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "REVERT",
      "path": "0"
    },
    "1043": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "AND",
      "path": "0"
    },
    "1055": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1088"
    },
    "1058": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2011, 2251],
      "op": "JUMP",
      "path": "0"
    },
    "1059": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1060": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC"
    },
    "1063": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1065": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "DUP1",
      "path": "11"
    },
    "1066": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1067": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "SUB",
      "path": "11"
    },
    "1068": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1070": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "DUP2",
      "path": "11"
    },
    "1071": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "LT",
      "path": "11"
    },
    "1072": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "ISZERO",
      "path": "11"
    },
    "1073": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH2",
      "path": "11",
      "value": "0x439"
    },
    "1076": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "JUMPI",
      "path": "11"
    },
    "1077": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1079": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "DUP1",
      "path": "11"
    },
    "1080": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "REVERT",
      "path": "11"
    },
    "1081": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "op": "SUB"
    },
    "1092": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "AND",
      "path": "11"
    },
    "1093": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "PUSH2",
      "path": "11",
      "value": "0x118A"
    },
    "1096": {
      "fn": "LpTokenStaker.setMinter",
      "jump": "i",
      "offset": [3729, 3876],
      "op": "JUMP",
      "path": "11"
    },
    "1097": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1098": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6299, 6307],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x3"
    },
    "1100": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6299, 6314],
      "op": "SLOAD",
      "path": "11"
    },
    "1101": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [6228, 6321],
      "op": "SWAP1",
      "path": "11"
    },
    "1102": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "o",
      "offset": [6228, 6321],
      "op": "JUMP",
      "path": "11"
    },
    "1103": {
      "offset": [1630, 1656],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1104": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1106": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP2",
      "path": "11"
    },
    "1107": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP2",
      "path": "11"
    },
    "1108": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1109": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP2",
      "path": "11"
    },
    "1110": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "LT",
      "path": "11"
    },
    "1111": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45F"
    },
    "1114": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "JUMPI",
      "path": "11"
    },
    "1115": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1117": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP1",
      "path": "11"
    },
    "1118": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "REVERT",
      "path": "11"
    },
    "1119": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1120": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1122": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP2",
      "path": "11"
    },
    "1123": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP3",
      "path": "11"
    },
    "1124": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MSTORE",
      "path": "11"
    },
    "1125": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1127": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1128": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP2",
      "path": "11"
    },
    "1129": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "KECCAK256",
      "path": "11"
    },
    "1130": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1132": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1133": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP2",
      "path": "11"
    },
    "1134": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "MUL",
      "path": "11"
    },
    "1135": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "1136": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP1",
      "path": "11"
    },
    "1137": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1138": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1140": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP3",
      "path": "11"
    },
    "1141": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "1142": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1143": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1145": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP4",
      "path": "11"
    },
    "1146": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "1147": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1148": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1150": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP5",
      "path": "11"
    },
    "1151": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "1152": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1153": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1155": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1156": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP5",
      "path": "11"
    },
    "1157": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "ADD",
      "path": "11"
    },
    "1158": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SLOAD",
      "path": "11"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "op": "SUB"
    },
    "1167": {
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1168": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP4",
      "path": "11"
    },
    "1169": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "AND",
      "path": "11"
    },
    "1170": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP5",
      "path": "11"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1173": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP3",
      "path": "11"
    },
    "1174": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP1",
      "path": "11"
    },
    "1175": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "SWAP2",
      "path": "11"
    },
    "1176": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [1630, 1656],
      "op": "DUP6",
      "path": "11"
    },
    "1177": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "o",
      "offset": [1630, 1656],
      "op": "JUMP",
      "path": "11"
    },
    "1178": {
      "offset": [2137, 2171],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1179": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [2137, 2171],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1181": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [2137, 2171],
      "op": "SLOAD",
      "path": "11"
    },
    "1182": {
      "fn": "LpTokenStaker.poolLength",
      "offset": [2137, 2171],
      "op": "DUP2",
      "path": "11"
    },
    "1183": {
      "fn": "LpTokenStaker.poolLength",
      "jump": "o",
      "offset": [2137, 2171],
      "op": "JUMP",
      "path": "11"
    },
    "1184": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4041, 4464],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1185": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1188": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "1191": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "1192": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "1202": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B9"
    },
    "1205": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "1208": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "1209": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "op": "SUB"
    },
    "1218": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "1219": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "1220": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x502"
    },
    "1223": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "1224": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1226": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "1227": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "1228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "1237": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1239": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1241": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "1242": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "1243": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "1244": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "1245": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "1246": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1248": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "1249": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "1250": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1253": {
      "op": "DUP1"
    },
    "1254": {
      "op": "MLOAD"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "1260": {
      "op": "DUP4"
    },
    "1261": {
      "op": "CODECOPY"
    },
    "1262": {
      "op": "DUP2"
    },
    "1263": {
      "op": "MLOAD"
    },
    "1264": {
      "op": "SWAP2"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1268": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "1269": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "1270": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "1271": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "1273": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "1276": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "1277": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1279": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "1280": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "1281": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "1282": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1283": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4147, 4154],
      "op": "PUSH1",
      "path": "11",
      "statement": 1,
      "value": "0x8"
    },
    "1285": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4147, 4161],
      "op": "SLOAD",
      "path": "11"
    },
    "1286": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4132, 4161],
      "op": "DUP2",
      "path": "11"
    },
    "1287": {
      "branch": 86,
      "fn": "LpTokenStaker.addPool",
      "offset": [4132, 4161],
      "op": "LT",
      "path": "11"
    },
    "1288": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "PUSH2",
      "path": "11",
      "value": "0x510"
    },
    "1291": {
      "branch": 86,
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "JUMPI",
      "path": "11"
    },
    "1292": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1294": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "DUP1",
      "path": "11"
    },
    "1295": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "REVERT",
      "path": "11"
    },
    "1296": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4124, 4162],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1297": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4172, 4190],
      "op": "PUSH2",
      "path": "11",
      "statement": 2,
      "value": "0x518"
    },
    "1300": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4172, 4188],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1228"
    },
    "1303": {
      "fn": "LpTokenStaker.addPool",
      "jump": "i",
      "offset": [4172, 4190],
      "op": "JUMP",
      "path": "11"
    },
    "1304": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4172, 4190],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1305": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x40"
    },
    "1307": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP1",
      "path": "11"
    },
    "1308": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MLOAD",
      "path": "11"
    },
    "1309": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "1311": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1312": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "ADD",
      "path": "11"
    },
    "1313": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP3",
      "path": "11"
    },
    "1314": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "SWAP4",
      "path": "11"
    },
    "1324": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP5",
      "path": "11"
    },
    "1325": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "AND",
      "path": "11"
    },
    "1326": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1327": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1328": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1330": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1331": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "ADD",
      "path": "11"
    },
    "1332": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "SWAP3",
      "path": "11"
    },
    "1333": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP4",
      "path": "11"
    },
    "1334": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1337": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "SWAP2",
      "path": "11"
    },
    "1338": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1339": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "ADD",
      "path": "11"
    },
    "1340": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP3",
      "path": "11"
    },
    "1341": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1342": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1343": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4379, 4394],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "1344": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1346": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP4",
      "path": "11"
    },
    "1347": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "ADD",
      "path": "11"
    },
    "1348": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "SWAP1",
      "path": "11"
    },
    "1349": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1350": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1351": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "1353": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP4",
      "path": "11"
    },
    "1354": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "ADD",
      "path": "11"
    },
    "1355": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP5",
      "path": "11"
    },
    "1356": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "DUP2",
      "path": "11"
    },
    "1357": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4227, 4447],
      "op": "MSTORE",
      "path": "11"
    },
    "1358": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4208],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1360": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP1",
      "path": "11"
    },
    "1361": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SLOAD",
      "path": "11"
    },
    "1362": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1364": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP2",
      "path": "11"
    },
    "1365": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1366": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP3",
      "path": "11"
    },
    "1367": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1368": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP6",
      "path": "11"
    },
    "1369": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MSTORE",
      "path": "11"
    },
    "1370": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP3",
      "path": "11"
    },
    "1371": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MLOAD",
      "path": "11"
    },
    "1372": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1405": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1407": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP1",
      "path": "11"
    },
    "1408": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP6",
      "path": "11"
    },
    "1409": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MUL",
      "path": "11"
    },
    "1410": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP5",
      "path": "11"
    },
    "1411": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP6",
      "path": "11"
    },
    "1412": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1413": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP1",
      "path": "11"
    },
    "1414": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SLOAD",
      "path": "11"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "op": "SUB"
    },
    "1423": {
      "op": "NOT"
    },
    "1424": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "AND",
      "path": "11"
    },
    "1425": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP2",
      "path": "11"
    },
    "1426": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP1",
      "path": "11"
    },
    "1427": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP8",
      "path": "11"
    },
    "1428": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "AND",
      "path": "11"
    },
    "1429": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "OR",
      "path": "11"
    },
    "1430": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP1",
      "path": "11"
    },
    "1431": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP6",
      "path": "11"
    },
    "1432": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1433": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP3",
      "path": "11"
    },
    "1434": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MLOAD",
      "path": "11"
    },
    "1435": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
    },
    "1468": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP4",
      "path": "11"
    },
    "1469": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1470": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1471": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP2",
      "path": "11"
    },
    "1472": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MLOAD",
      "path": "11"
    },
    "1473": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D"
    },
    "1506": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP3",
      "path": "11"
    },
    "1507": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1508": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1509": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP2",
      "path": "11"
    },
    "1510": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MLOAD",
      "path": "11"
    },
    "1511": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E"
    },
    "1544": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "DUP4",
      "path": "11"
    },
    "1545": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1546": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1547": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "MLOAD",
      "path": "11"
    },
    "1548": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F"
    },
    "1581": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP1",
      "path": "11"
    },
    "1582": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SWAP2",
      "path": "11"
    },
    "1583": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "ADD",
      "path": "11"
    },
    "1584": {
      "fn": "LpTokenStaker.addPool",
      "offset": [4200, 4457],
      "op": "SSTORE",
      "path": "11"
    },
    "1585": {
      "fn": "LpTokenStaker.addPool",
      "jump": "o",
      "offset": [4041, 4464],
      "op": "JUMP",
      "path": "11"
    },
    "1586": {
      "offset": [1887, 1926],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1587": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1589": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "1590": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "1591": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SLOAD",
      "path": "11"
    },
    "1592": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP2",
      "path": "11"
    },
    "1593": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "LT",
      "path": "11"
    },
    "1594": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH2",
      "path": "11",
      "value": "0x642"
    },
    "1597": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "JUMPI",
      "path": "11"
    },
    "1598": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1600": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "1601": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "REVERT",
      "path": "11"
    },
    "1602": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1603": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1605": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP2",
      "path": "11"
    },
    "1606": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP3",
      "path": "11"
    },
    "1607": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "MSTORE",
      "path": "11"
    },
    "1608": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1610": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP1",
      "path": "11"
    },
    "1611": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP2",
      "path": "11"
    },
    "1612": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "KECCAK256",
      "path": "11"
    },
    "1613": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "ADD",
      "path": "11"
    },
    "1614": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SLOAD",
      "path": "11"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "offset": [1887, 1926],
      "op": "DUP1",
      "path": "11"
    },
    "1624": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP3",
      "path": "11"
    },
    "1625": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "AND",
      "path": "11"
    },
    "1626": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP3",
      "path": "11"
    },
    "1627": {
      "op": "POP"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "offset": [1887, 1926],
      "op": "SWAP1",
      "path": "11"
    },
    "1634": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "SWAP2",
      "path": "11"
    },
    "1635": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DIV",
      "path": "11"
    },
    "1636": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "AND",
      "path": "11"
    },
    "1637": {
      "fn": "LpTokenStaker.addPool",
      "offset": [1887, 1926],
      "op": "DUP3",
      "path": "11"
    },
    "1638": {
      "fn": "LpTokenStaker.addPool",
      "jump": "o",
      "offset": [1887, 1926],
      "op": "JUMP",
      "path": "11"
    },
    "1639": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1640": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9821, 9842],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1642": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9853],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1644": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9854, 9858],
      "op": "DUP4",
      "path": "11"
    },
    "1645": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "DUP2",
      "path": "11"
    },
    "1646": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SLOAD",
      "path": "11"
    },
    "1647": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "DUP2",
      "path": "11"
    },
    "1648": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "LT",
      "path": "11"
    },
    "1649": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "PUSH2",
      "path": "11",
      "value": "0x676"
    },
    "1652": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "JUMPI",
      "path": "11"
    },
    "1653": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "INVALID",
      "path": "11"
    },
    "1654": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1655": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1657": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP2",
      "path": "11"
    },
    "1658": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "DUP3",
      "path": "11"
    },
    "1659": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "MSTORE",
      "path": "11"
    },
    "1660": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1662": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "DUP1",
      "path": "11"
    },
    "1663": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "DUP4",
      "path": "11"
    },
    "1664": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "KECCAK256",
      "path": "11"
    },
    "1665": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP7",
      "path": "11"
    },
    "1666": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP5",
      "path": "11"
    },
    "1667": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "MSTORE",
      "path": "11"
    },
    "1668": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1670": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP1",
      "path": "11"
    },
    "1671": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP4",
      "path": "11"
    },
    "1672": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "MSTORE",
      "path": "11"
    },
    "1673": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1675": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP1",
      "path": "11"
    },
    "1676": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "DUP7",
      "path": "11"
    },
    "1677": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9907],
      "op": "KECCAK256",
      "path": "11"
    },
    "1678": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9908, 9918],
      "op": "CALLER",
      "path": "11"
    },
    "1679": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "DUP8",
      "path": "11"
    },
    "1680": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "MSTORE",
      "path": "11"
    },
    "1681": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "SWAP1",
      "path": "11"
    },
    "1682": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "SWAP4",
      "path": "11"
    },
    "1683": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "MSTORE",
      "path": "11"
    },
    "1684": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "SWAP2",
      "path": "11"
    },
    "1685": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "SWAP1",
      "path": "11"
    },
    "1686": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "SWAP4",
      "path": "11"
    },
    "1687": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9893, 9919],
      "op": "KECCAK256",
      "path": "11"
    },
    "1688": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9937, 9948],
      "op": "DUP1",
      "path": "11",
      "statement": 4
    },
    "1689": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9937, 9948],
      "op": "SLOAD",
      "path": "11"
    },
    "1690": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP3",
      "path": "11"
    },
    "1691": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP1",
      "path": "11"
    },
    "1692": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP2",
      "path": "11"
    },
    "1693": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "MUL",
      "path": "11"
    },
    "1694": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP1",
      "path": "11"
    },
    "1695": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP3",
      "path": "11"
    },
    "1696": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "ADD",
      "path": "11"
    },
    "1697": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9845, 9859],
      "op": "SWAP3",
      "path": "11"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "DUP4"
    },
    "1700": {
      "op": "GT"
    },
    "1701": {
      "branch": 87,
      "fn": "LpTokenStaker.withdraw",
      "offset": [9937, 9959],
      "op": "ISZERO",
      "path": "11"
    },
    "1702": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6EB"
    },
    "1705": {
      "branch": 87,
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "JUMPI",
      "path": "11"
    },
    "1706": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1708": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP1",
      "path": "11"
    },
    "1709": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MLOAD",
      "path": "11"
    },
    "1710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP2",
      "path": "11"
    },
    "1718": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MSTORE",
      "path": "11"
    },
    "1719": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1721": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1723": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP3",
      "path": "11"
    },
    "1724": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "ADD",
      "path": "11"
    },
    "1725": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MSTORE",
      "path": "11"
    },
    "1726": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x12"
    },
    "1728": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1730": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP3",
      "path": "11"
    },
    "1731": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "ADD",
      "path": "11"
    },
    "1732": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MSTORE",
      "path": "11"
    },
    "1733": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "1757": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP3",
      "path": "11"
    },
    "1758": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "ADD",
      "path": "11"
    },
    "1759": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MSTORE",
      "path": "11"
    },
    "1760": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "SWAP1",
      "path": "11"
    },
    "1761": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "MLOAD",
      "path": "11"
    },
    "1762": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "SWAP1",
      "path": "11"
    },
    "1763": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "DUP2",
      "path": "11"
    },
    "1764": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "SWAP1",
      "path": "11"
    },
    "1765": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "SUB",
      "path": "11"
    },
    "1766": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "1768": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "ADD",
      "path": "11"
    },
    "1769": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "SWAP1",
      "path": "11"
    },
    "1770": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "REVERT",
      "path": "11"
    },
    "1771": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9929, 9982],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1772": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9992, 10010],
      "op": "PUSH2",
      "path": "11",
      "statement": 5,
      "value": "0x6F3"
    },
    "1775": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9992, 10008],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1228"
    },
    "1778": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [9992, 10010],
      "op": "JUMP",
      "path": "11"
    },
    "1779": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9992, 10010],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1780": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10020, 10035],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1782": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10150],
      "op": "PUSH2",
      "path": "11",
      "value": "0x72D"
    },
    "1785": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10121, 10125],
      "op": "DUP3",
      "path": "11"
    },
    "1786": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10121, 10136],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1788": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10121, 10136],
      "op": "ADD",
      "path": "11"
    },
    "1789": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10121, 10136],
      "op": "SLOAD",
      "path": "11"
    },
    "1790": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10099],
      "op": "PUSH2",
      "path": "11",
      "value": "0x727"
    },
    "1793": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10094, 10098],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "1799": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "1802": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10066, 10070],
      "op": "DUP8",
      "path": "11"
    },
    "1803": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10066, 10088],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1805": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10066, 10088],
      "op": "ADD",
      "path": "11"
    },
    "1806": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10066, 10088],
      "op": "SLOAD",
      "path": "11"
    },
    "1807": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10054],
      "op": "DUP8",
      "path": "11"
    },
    "1808": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10061],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1810": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10061],
      "op": "ADD",
      "path": "11"
    },
    "1811": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10061],
      "op": "SLOAD",
      "path": "11"
    },
    "1812": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10065],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "1815": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10065],
      "op": "SWAP1",
      "path": "11"
    },
    "1816": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "SWAP2",
      "path": "11"
    },
    "1817": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "SWAP1",
      "path": "11"
    },
    "1818": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1823": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "AND",
      "path": "11"
    },
    "1824": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10050, 10089],
      "op": "JUMP",
      "path": "11"
    },
    "1825": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10089],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1826": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10093],
      "op": "SWAP1",
      "path": "11"
    },
    "1827": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10093],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137C"
    },
    "1830": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10050, 10099],
      "op": "JUMP",
      "path": "11"
    },
    "1831": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10099],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1832": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10103],
      "op": "SWAP1",
      "path": "11"
    },
    "1833": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10103],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "1836": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10050, 10150],
      "op": "JUMP",
      "path": "11"
    },
    "1837": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10050, 10150],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1838": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10020, 10150],
      "op": "SWAP1",
      "path": "11"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10164, 10175],
      "op": "DUP1",
      "path": "11"
    },
    "1841": {
      "branch": 88,
      "fn": "LpTokenStaker.withdraw",
      "offset": [10164, 10175],
      "op": "ISZERO",
      "path": "11"
    },
    "1842": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10160, 10240],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7A1"
    },
    "1845": {
      "branch": 88,
      "fn": "LpTokenStaker.withdraw",
      "offset": [10160, 10240],
      "op": "JUMPI",
      "path": "11"
    },
    "1846": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0x1"
    },
    "1848": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "SLOAD",
      "path": "11"
    },
    "1849": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1851": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1852": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "MLOAD",
      "path": "11"
    },
    "1853": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP2",
      "path": "11"
    },
    "1862": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "MSTORE",
      "path": "11"
    },
    "1863": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10209, 10219],
      "op": "CALLER",
      "path": "11"
    },
    "1864": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1866": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP3",
      "path": "11"
    },
    "1867": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ADD",
      "path": "11"
    },
    "1868": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "MSTORE",
      "path": "11"
    },
    "1869": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1871": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP2",
      "path": "11"
    },
    "1872": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ADD",
      "path": "11"
    },
    "1873": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP5",
      "path": "11"
    },
    "1874": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP1",
      "path": "11"
    },
    "1875": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "MSTORE",
      "path": "11"
    },
    "1876": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP1",
      "path": "11"
    },
    "1877": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "MLOAD",
      "path": "11"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "op": "SUB"
    },
    "1886": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "SWAP1",
      "path": "11"
    },
    "1887": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "SWAP3",
      "path": "11"
    },
    "1888": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "AND",
      "path": "11"
    },
    "1889": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "SWAP2",
      "path": "11"
    },
    "1890": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10208],
      "op": "PUSH4",
      "path": "11",
      "value": "0x40C10F19"
    },
    "1895": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10208],
      "op": "SWAP2",
      "path": "11"
    },
    "1896": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "1898": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1899": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP3",
      "path": "11"
    },
    "1900": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ADD",
      "path": "11"
    },
    "1901": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP3",
      "path": "11"
    },
    "1902": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1904": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "SWAP3",
      "path": "11"
    },
    "1905": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP1",
      "path": "11"
    },
    "1906": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP2",
      "path": "11"
    },
    "1907": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP1",
      "path": "11"
    },
    "1908": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP3",
      "path": "11"
    },
    "1909": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SWAP1",
      "path": "11"
    },
    "1910": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "SUB",
      "path": "11"
    },
    "1911": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ADD",
      "path": "11"
    },
    "1912": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP2",
      "path": "11"
    },
    "1913": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "DUP4",
      "path": "11"
    },
    "1914": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10203],
      "op": "DUP8",
      "path": "11"
    },
    "1915": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1916": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1917": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ISZERO",
      "path": "11"
    },
    "1918": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1919": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ISZERO",
      "path": "11"
    },
    "1920": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH2",
      "path": "11",
      "value": "0x788"
    },
    "1923": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "JUMPI",
      "path": "11"
    },
    "1924": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1926": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1927": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "REVERT",
      "path": "11"
    },
    "1928": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1929": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "POP",
      "path": "11"
    },
    "1930": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "GAS",
      "path": "11"
    },
    "1931": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "CALL",
      "path": "11"
    },
    "1932": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ISZERO",
      "path": "11"
    },
    "1933": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1934": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "ISZERO",
      "path": "11"
    },
    "1935": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH2",
      "path": "11",
      "value": "0x79C"
    },
    "1938": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "JUMPI",
      "path": "11"
    },
    "1939": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1940": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1942": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "DUP1",
      "path": "11"
    },
    "1943": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1944": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1945": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1947": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "REVERT",
      "path": "11"
    },
    "1948": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1949": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "POP",
      "path": "11"
    },
    "1950": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "POP",
      "path": "11"
    },
    "1951": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "POP",
      "path": "11"
    },
    "1952": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10191, 10229],
      "op": "POP",
      "path": "11"
    },
    "1953": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10160, 10240],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1954": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10274],
      "op": "DUP2",
      "path": "11",
      "statement": 7
    },
    "1955": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10274],
      "op": "SLOAD",
      "path": "11"
    },
    "1956": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10287],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7AD"
    },
    "1959": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10287],
      "op": "SWAP1",
      "path": "11"
    },
    "1960": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10279, 10286],
      "op": "DUP6",
      "path": "11"
    },
    "1961": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10278],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "1964": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10263, 10287],
      "op": "JUMP",
      "path": "11"
    },
    "1965": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10263, 10287],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1966": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10249, 10287],
      "op": "DUP1",
      "path": "11"
    },
    "1967": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10249, 10287],
      "op": "DUP4",
      "path": "11"
    },
    "1968": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10249, 10287],
      "op": "SSTORE",
      "path": "11"
    },
    "1969": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10331, 10353],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x4"
    },
    "1971": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10331, 10353],
      "op": "DUP5",
      "path": "11"
    },
    "1972": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10331, 10353],
      "op": "ADD",
      "path": "11"
    },
    "1973": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10331, 10353],
      "op": "SLOAD",
      "path": "11"
    },
    "1974": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10364],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7CA"
    },
    "1977": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10364],
      "op": "SWAP2",
      "path": "11"
    },
    "1978": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10359, 10363],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "1984": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10359, 10363],
      "op": "SWAP2",
      "path": "11"
    },
    "1985": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10354],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "1988": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10354],
      "op": "SWAP2",
      "path": "11"
    },
    "1989": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10249, 10287],
      "op": "SWAP1",
      "path": "11"
    },
    "1990": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10330],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "1993": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10315, 10354],
      "op": "JUMP",
      "path": "11"
    },
    "1994": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10315, 10364],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1995": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10297, 10312],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1997": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10297, 10312],
      "op": "DUP4",
      "path": "11"
    },
    "1998": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10297, 10312],
      "op": "ADD",
      "path": "11"
    },
    "1999": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10297, 10364],
      "op": "SSTORE",
      "path": "11"
    },
    "2000": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10378, 10386],
      "op": "DUP5",
      "path": "11"
    },
    "2001": {
      "branch": 89,
      "fn": "LpTokenStaker.withdraw",
      "offset": [10378, 10386],
      "op": "ISZERO",
      "path": "11"
    },
    "2002": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10374, 10519],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7FA"
    },
    "2005": {
      "branch": 89,
      "fn": "LpTokenStaker.withdraw",
      "offset": [10374, 10519],
      "op": "JUMPI",
      "path": "11"
    },
    "2006": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10435],
      "op": "PUSH1",
      "path": "11",
      "statement": 9,
      "value": "0x2"
    },
    "2008": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10435],
      "op": "DUP4",
      "path": "11"
    },
    "2009": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10435],
      "op": "ADD",
      "path": "11"
    },
    "2010": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10435],
      "op": "SLOAD",
      "path": "11"
    },
    "2011": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10448],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E4"
    },
    "2014": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10448],
      "op": "SWAP1",
      "path": "11"
    },
    "2015": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10440, 10447],
      "op": "DUP6",
      "path": "11"
    },
    "2016": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10439],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "2019": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10420, 10448],
      "op": "JUMP",
      "path": "11"
    },
    "2020": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10420, 10448],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2021": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10402, 10417],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2023": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10402, 10417],
      "op": "DUP5",
      "path": "11"
    },
    "2024": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10402, 10417],
      "op": "ADD",
      "path": "11"
    },
    "2025": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10402, 10448],
      "op": "SSTORE",
      "path": "11"
    },
    "2026": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10495],
      "op": "PUSH1",
      "path": "11",
      "statement": 10,
      "value": "0x6"
    },
    "2028": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10495],
      "op": "SLOAD",
      "path": "11"
    },
    "2029": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10508],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7F6"
    },
    "2032": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10508],
      "op": "SWAP1",
      "path": "11"
    },
    "2033": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10500, 10507],
      "op": "DUP6",
      "path": "11"
    },
    "2034": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10499],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "2037": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10480, 10508],
      "op": "JUMP",
      "path": "11"
    },
    "2038": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10480, 10508],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2039": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10462, 10477],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2041": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10462, 10508],
      "op": "SSTORE",
      "path": "11"
    },
    "2042": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10374, 10519],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2043": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10540],
      "op": "DUP3",
      "path": "11",
      "statement": 11
    },
    "2044": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10540],
      "op": "SLOAD",
      "path": "11"
    },
    "2045": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10583],
      "op": "PUSH2",
      "path": "11",
      "value": "0x810"
    },
    "2048": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10583],
      "op": "SWAP1",
      "path": "11"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "op": "SUB"
    },
    "2057": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10540],
      "op": "AND",
      "path": "11"
    },
    "2058": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10562, 10572],
      "op": "CALLER",
      "path": "11"
    },
    "2059": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10575, 10582],
      "op": "DUP7",
      "path": "11"
    },
    "2060": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10553],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1440"
    },
    "2063": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "i",
      "offset": [10528, 10583],
      "op": "JUMP",
      "path": "11"
    },
    "2064": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10528, 10583],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2065": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x40"
    },
    "2067": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "DUP1",
      "path": "11"
    },
    "2068": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "MLOAD",
      "path": "11"
    },
    "2069": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "DUP6",
      "path": "11"
    },
    "2070": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "DUP2",
      "path": "11"
    },
    "2071": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "MSTORE",
      "path": "11"
    },
    "2072": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "SWAP1",
      "path": "11"
    },
    "2073": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "MLOAD",
      "path": "11"
    },
    "2074": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10619, 10623],
      "op": "DUP7",
      "path": "11"
    },
    "2075": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10619, 10623],
      "op": "SWAP2",
      "path": "11"
    },
    "2076": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10607, 10617],
      "op": "CALLER",
      "path": "11"
    },
    "2077": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10607, 10617],
      "op": "SWAP2",
      "path": "11"
    },
    "2078": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "PUSH32",
      "path": "11",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2111": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "SWAP2",
      "path": "11"
    },
    "2112": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "DUP2",
      "path": "11"
    },
    "2113": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "SWAP1",
      "path": "11"
    },
    "2114": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "SUB",
      "path": "11"
    },
    "2115": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2117": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "ADD",
      "path": "11"
    },
    "2118": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "SWAP1",
      "path": "11"
    },
    "2119": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [10598, 10633],
      "op": "LOG3",
      "path": "11"
    },
    "2120": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "POP",
      "path": "11"
    },
    "2121": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "POP",
      "path": "11"
    },
    "2122": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "POP",
      "path": "11"
    },
    "2123": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "POP",
      "path": "11"
    },
    "2124": {
      "fn": "LpTokenStaker.withdraw",
      "offset": [9755, 10640],
      "op": "POP",
      "path": "11"
    },
    "2125": {
      "fn": "LpTokenStaker.withdraw",
      "jump": "o",
      "offset": [9755, 10640],
      "op": "JUMP",
      "path": "11"
    },
    "2126": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2127": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10767, 10788],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2129": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10799],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2131": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10800, 10804],
      "op": "DUP3",
      "path": "11"
    },
    "2132": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "DUP2",
      "path": "11"
    },
    "2133": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SLOAD",
      "path": "11"
    },
    "2134": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "DUP2",
      "path": "11"
    },
    "2135": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "LT",
      "path": "11"
    },
    "2136": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "PUSH2",
      "path": "11",
      "value": "0x85D"
    },
    "2139": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "JUMPI",
      "path": "11"
    },
    "2140": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "INVALID",
      "path": "11"
    },
    "2141": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2142": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2144": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP2",
      "path": "11"
    },
    "2145": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "DUP3",
      "path": "11"
    },
    "2146": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "MSTORE",
      "path": "11"
    },
    "2147": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2149": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "DUP1",
      "path": "11"
    },
    "2150": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "DUP4",
      "path": "11"
    },
    "2151": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "KECCAK256",
      "path": "11"
    },
    "2152": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP6",
      "path": "11"
    },
    "2153": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP5",
      "path": "11"
    },
    "2154": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "MSTORE",
      "path": "11"
    },
    "2155": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2157": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP1",
      "path": "11"
    },
    "2158": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP4",
      "path": "11"
    },
    "2159": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "MSTORE",
      "path": "11"
    },
    "2160": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2162": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP1",
      "path": "11"
    },
    "2163": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "DUP7",
      "path": "11"
    },
    "2164": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10853],
      "op": "KECCAK256",
      "path": "11"
    },
    "2165": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10854, 10864],
      "op": "CALLER",
      "path": "11"
    },
    "2166": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "DUP1",
      "path": "11"
    },
    "2167": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "DUP9",
      "path": "11"
    },
    "2168": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "MSTORE",
      "path": "11"
    },
    "2169": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "SWAP5",
      "path": "11"
    },
    "2170": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "MSTORE",
      "path": "11"
    },
    "2171": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "SWAP1",
      "path": "11"
    },
    "2172": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "SWAP5",
      "path": "11"
    },
    "2173": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10839, 10865],
      "op": "KECCAK256",
      "path": "11"
    },
    "2174": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10892, 10903],
      "op": "DUP1",
      "path": "11"
    },
    "2175": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10892, 10903],
      "op": "SLOAD",
      "path": "11"
    },
    "2176": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP4",
      "path": "11"
    },
    "2177": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP1",
      "path": "11"
    },
    "2178": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP5",
      "path": "11"
    },
    "2179": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "MUL",
      "path": "11"
    },
    "2180": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "ADD",
      "path": "11"
    },
    "2181": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "DUP1",
      "path": "11",
      "statement": 13
    },
    "2182": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "SLOAD",
      "path": "11"
    },
    "2183": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP1",
      "path": "11"
    },
    "2184": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10791, 10805],
      "op": "SWAP5",
      "path": "11"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10967],
      "op": "PUSH2",
      "path": "11",
      "value": "0x89F"
    },
    "2189": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10967],
      "op": "SWAP2",
      "path": "11"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2196": {
      "op": "SHL"
    },
    "2197": {
      "op": "SUB"
    },
    "2198": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "SWAP1",
      "path": "11"
    },
    "2199": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "SWAP2",
      "path": "11"
    },
    "2200": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "AND",
      "path": "11"
    },
    "2201": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10925],
      "op": "SWAP1",
      "path": "11"
    },
    "2202": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10892, 10903],
      "op": "DUP4",
      "path": "11"
    },
    "2203": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10938],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1440"
    },
    "2206": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "i",
      "offset": [10913, 10967],
      "op": "JUMP",
      "path": "11"
    },
    "2207": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10913, 10967],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2208": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x40"
    },
    "2210": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "DUP1",
      "path": "11"
    },
    "2211": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "MLOAD",
      "path": "11"
    },
    "2212": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "DUP3",
      "path": "11"
    },
    "2213": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "DUP2",
      "path": "11"
    },
    "2214": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "MSTORE",
      "path": "11"
    },
    "2215": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "SWAP1",
      "path": "11"
    },
    "2216": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "MLOAD",
      "path": "11"
    },
    "2217": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11012, 11016],
      "op": "DUP6",
      "path": "11"
    },
    "2218": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11012, 11016],
      "op": "SWAP2",
      "path": "11"
    },
    "2219": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11000, 11010],
      "op": "CALLER",
      "path": "11"
    },
    "2220": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11000, 11010],
      "op": "SWAP2",
      "path": "11"
    },
    "2221": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "PUSH32",
      "path": "11",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2254": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "SWAP2",
      "path": "11"
    },
    "2255": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "DUP2",
      "path": "11"
    },
    "2256": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "SWAP1",
      "path": "11"
    },
    "2257": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "SUB",
      "path": "11"
    },
    "2258": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2260": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "ADD",
      "path": "11"
    },
    "2261": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "SWAP1",
      "path": "11"
    },
    "2262": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10982, 11025],
      "op": "LOG3",
      "path": "11"
    },
    "2263": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11049, 11050],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0x0"
    },
    "2265": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11035, 11050],
      "op": "DUP1",
      "path": "11"
    },
    "2266": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11035, 11050],
      "op": "DUP4",
      "path": "11"
    },
    "2267": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11035, 11050],
      "op": "SSTORE",
      "path": "11"
    },
    "2268": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11060, 11075],
      "op": "PUSH1",
      "path": "11",
      "statement": 16,
      "value": "0x1"
    },
    "2270": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11060, 11075],
      "op": "DUP4",
      "path": "11"
    },
    "2271": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11060, 11075],
      "op": "ADD",
      "path": "11"
    },
    "2272": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11060, 11079],
      "op": "SSTORE",
      "path": "11"
    },
    "2273": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11094, 11102],
      "op": "DUP4",
      "path": "11"
    },
    "2274": {
      "branch": 90,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11094, 11102],
      "op": "ISZERO",
      "path": "11"
    },
    "2275": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11090, 11475],
      "op": "PUSH2",
      "path": "11",
      "value": "0x936"
    },
    "2278": {
      "branch": 90,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11090, 11475],
      "op": "JUMPI",
      "path": "11"
    },
    "2279": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11141, 11147],
      "op": "DUP1",
      "path": "11"
    },
    "2280": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11122, 11126],
      "op": "DUP4",
      "path": "11"
    },
    "2281": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11122, 11137],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2283": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11122, 11137],
      "op": "ADD",
      "path": "11"
    },
    "2284": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11122, 11137],
      "op": "SLOAD",
      "path": "11"
    },
    "2285": {
      "branch": 91,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11122, 11147],
      "op": "LT",
      "path": "11"
    },
    "2286": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90A"
    },
    "2289": {
      "branch": 91,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "JUMPI",
      "path": "11"
    },
    "2290": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11200],
      "op": "PUSH1",
      "path": "11",
      "statement": 17,
      "value": "0x2"
    },
    "2292": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11200],
      "op": "DUP4",
      "path": "11"
    },
    "2293": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11200],
      "op": "ADD",
      "path": "11"
    },
    "2294": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11200],
      "op": "SLOAD",
      "path": "11"
    },
    "2295": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11212],
      "op": "PUSH2",
      "path": "11",
      "value": "0x900"
    },
    "2298": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11212],
      "op": "SWAP1",
      "path": "11"
    },
    "2299": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11205, 11211],
      "op": "DUP3",
      "path": "11"
    },
    "2300": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11204],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "2303": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "i",
      "offset": [11185, 11212],
      "op": "JUMP",
      "path": "11"
    },
    "2304": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11185, 11212],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2305": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11167, 11182],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2307": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11167, 11182],
      "op": "DUP5",
      "path": "11"
    },
    "2308": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11167, 11182],
      "op": "ADD",
      "path": "11"
    },
    "2309": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11167, 11212],
      "op": "SSTORE",
      "path": "11"
    },
    "2310": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "PUSH2",
      "path": "11",
      "value": "0x912"
    },
    "2313": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "JUMP",
      "path": "11"
    },
    "2314": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2315": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11269, 11270],
      "op": "PUSH1",
      "path": "11",
      "statement": 18,
      "value": "0x0"
    },
    "2317": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11251, 11266],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2319": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11251, 11266],
      "op": "DUP5",
      "path": "11"
    },
    "2320": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11251, 11266],
      "op": "ADD",
      "path": "11"
    },
    "2321": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11251, 11270],
      "op": "SSTORE",
      "path": "11"
    },
    "2322": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11118, 11285],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2323": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11321, 11327],
      "op": "DUP1",
      "path": "11"
    },
    "2324": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11302, 11317],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2326": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11302, 11317],
      "op": "SLOAD",
      "path": "11"
    },
    "2327": {
      "branch": 92,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11302, 11327],
      "op": "LT",
      "path": "11"
    },
    "2328": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "PUSH2",
      "path": "11",
      "value": "0x930"
    },
    "2331": {
      "branch": 92,
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "JUMPI",
      "path": "11"
    },
    "2332": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11380],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0x6"
    },
    "2334": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11380],
      "op": "SLOAD",
      "path": "11"
    },
    "2335": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11392],
      "op": "PUSH2",
      "path": "11",
      "value": "0x928"
    },
    "2338": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11392],
      "op": "SWAP1",
      "path": "11"
    },
    "2339": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11385, 11391],
      "op": "DUP3",
      "path": "11"
    },
    "2340": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11384],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "2343": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "i",
      "offset": [11365, 11392],
      "op": "JUMP",
      "path": "11"
    },
    "2344": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11365, 11392],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2345": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11347, 11362],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2347": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11347, 11392],
      "op": "SSTORE",
      "path": "11"
    },
    "2348": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "PUSH2",
      "path": "11",
      "value": "0x936"
    },
    "2351": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "JUMP",
      "path": "11"
    },
    "2352": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2353": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11449, 11450],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x0"
    },
    "2355": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11431, 11446],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2357": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11431, 11450],
      "op": "SSTORE",
      "path": "11"
    },
    "2358": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [11298, 11465],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2359": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "POP",
      "path": "11"
    },
    "2360": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "POP",
      "path": "11"
    },
    "2361": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "POP",
      "path": "11"
    },
    "2362": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [10709, 11481],
      "op": "POP",
      "path": "11"
    },
    "2363": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "o",
      "offset": [10709, 11481],
      "op": "JUMP",
      "path": "11"
    },
    "2364": {
      "offset": [2302, 2325],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2365": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "2367": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "2368": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "2369": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SLOAD",
      "path": "11"
    },
    "2370": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "2371": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "LT",
      "path": "11"
    },
    "2372": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH2",
      "path": "11",
      "value": "0x94C"
    },
    "2375": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "JUMPI",
      "path": "11"
    },
    "2376": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2378": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP1",
      "path": "11"
    },
    "2379": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "REVERT",
      "path": "11"
    },
    "2380": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2381": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2383": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP2",
      "path": "11"
    },
    "2384": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "DUP3",
      "path": "11"
    },
    "2385": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "MSTORE",
      "path": "11"
    },
    "2386": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2388": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "2389": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP2",
      "path": "11"
    },
    "2390": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "KECCAK256",
      "path": "11"
    },
    "2391": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "ADD",
      "path": "11"
    },
    "2392": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SLOAD",
      "path": "11"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "offset": [2302, 2325],
      "op": "AND",
      "path": "11"
    },
    "2402": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "offset": [2302, 2325],
      "op": "SWAP1",
      "path": "11"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "offset": [2302, 2325],
      "op": "DUP2",
      "path": "11"
    },
    "2405": {
      "fn": "LpTokenStaker.emergencyWithdraw",
      "jump": "o",
      "offset": [2302, 2325],
      "op": "JUMP",
      "path": "11"
    },
    "2406": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2407": {
      "fn": "LpTokenStaker.claim",
      "offset": [11678, 11696],
      "op": "PUSH2",
      "path": "11",
      "statement": 21,
      "value": "0x96E"
    },
    "2410": {
      "fn": "LpTokenStaker.claim",
      "offset": [11678, 11694],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1228"
    },
    "2413": {
      "fn": "LpTokenStaker.claim",
      "jump": "i",
      "offset": [11678, 11696],
      "op": "JUMP",
      "path": "11"
    },
    "2414": {
      "fn": "LpTokenStaker.claim",
      "offset": [11678, 11696],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2415": {
      "fn": "LpTokenStaker.claim",
      "offset": [11706, 11721],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2417": {
      "fn": "LpTokenStaker.claim",
      "offset": [11706, 11721],
      "op": "DUP1",
      "path": "11"
    },
    "2418": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2419": {
      "fn": "LpTokenStaker.claim",
      "offset": [11748, 11764],
      "op": "DUP3",
      "path": "11"
    },
    "2420": {
      "fn": "LpTokenStaker.claim",
      "offset": [11748, 11764],
      "op": "DUP2",
      "path": "11"
    },
    "2421": {
      "fn": "LpTokenStaker.claim",
      "offset": [11748, 11764],
      "op": "LT",
      "path": "11"
    },
    "2422": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "ISZERO",
      "path": "11"
    },
    "2423": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA64"
    },
    "2426": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "JUMPI",
      "path": "11"
    },
    "2427": {
      "fn": "LpTokenStaker.claim",
      "offset": [11785, 11806],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2429": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11817],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2431": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11823],
      "op": "DUP6",
      "path": "11"
    },
    "2432": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11823],
      "op": "DUP6",
      "path": "11"
    },
    "2433": {
      "fn": "LpTokenStaker.claim",
      "offset": [11824, 11825],
      "op": "DUP5",
      "path": "11"
    },
    "2434": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "DUP2",
      "path": "11"
    },
    "2435": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "DUP2",
      "path": "11"
    },
    "2436": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "LT",
      "path": "11"
    },
    "2437": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "PUSH2",
      "path": "11",
      "value": "0x98A"
    },
    "2440": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "JUMPI",
      "path": "11"
    },
    "2441": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "INVALID",
      "path": "11"
    },
    "2442": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2443": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "SWAP1",
      "path": "11"
    },
    "2444": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "POP",
      "path": "11"
    },
    "2445": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2447": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "MUL",
      "path": "11"
    },
    "2448": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "ADD",
      "path": "11"
    },
    "2449": {
      "fn": "LpTokenStaker.claim",
      "offset": [11818, 11826],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "2450": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "DUP2",
      "path": "11"
    },
    "2451": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "SLOAD",
      "path": "11"
    },
    "2452": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "DUP2",
      "path": "11"
    },
    "2453": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "LT",
      "path": "11"
    },
    "2454": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "PUSH2",
      "path": "11",
      "value": "0x99B"
    },
    "2457": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "JUMPI",
      "path": "11"
    },
    "2458": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "INVALID",
      "path": "11"
    },
    "2459": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2460": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "SWAP1",
      "path": "11"
    },
    "2461": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2463": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "MSTORE",
      "path": "11"
    },
    "2464": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2466": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2468": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "KECCAK256",
      "path": "11"
    },
    "2469": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "SWAP1",
      "path": "11"
    },
    "2470": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2472": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "MUL",
      "path": "11"
    },
    "2473": {
      "fn": "LpTokenStaker.claim",
      "offset": [11809, 11827],
      "op": "ADD",
      "path": "11"
    },
    "2474": {
      "fn": "LpTokenStaker.claim",
      "offset": [11785, 11827],
      "op": "SWAP1",
      "path": "11"
    },
    "2475": {
      "fn": "LpTokenStaker.claim",
      "offset": [11785, 11827],
      "op": "POP",
      "path": "11"
    },
    "2476": {
      "fn": "LpTokenStaker.claim",
      "offset": [11841, 11862],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2478": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11873],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2480": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2482": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11879],
      "op": "DUP8",
      "path": "11"
    },
    "2483": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11879],
      "op": "DUP8",
      "path": "11"
    },
    "2484": {
      "fn": "LpTokenStaker.claim",
      "offset": [11880, 11881],
      "op": "DUP7",
      "path": "11"
    },
    "2485": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "DUP2",
      "path": "11"
    },
    "2486": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "DUP2",
      "path": "11"
    },
    "2487": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "LT",
      "path": "11"
    },
    "2488": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BD"
    },
    "2491": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "JUMPI",
      "path": "11"
    },
    "2492": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "INVALID",
      "path": "11"
    },
    "2493": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2494": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "SWAP1",
      "path": "11"
    },
    "2495": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "POP",
      "path": "11"
    },
    "2496": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2498": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "MUL",
      "path": "11"
    },
    "2499": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "ADD",
      "path": "11"
    },
    "2500": {
      "fn": "LpTokenStaker.claim",
      "offset": [11874, 11882],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "2501": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "DUP2",
      "path": "11"
    },
    "2502": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "MSTORE",
      "path": "11"
    },
    "2503": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2505": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "ADD",
      "path": "11"
    },
    "2506": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "SWAP1",
      "path": "11"
    },
    "2507": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "DUP2",
      "path": "11"
    },
    "2508": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "MSTORE",
      "path": "11"
    },
    "2509": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2511": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "ADD",
      "path": "11"
    },
    "2512": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2514": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11883],
      "op": "KECCAK256",
      "path": "11"
    },
    "2515": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2517": {
      "fn": "LpTokenStaker.claim",
      "offset": [11884, 11894],
      "op": "CALLER",
      "path": "11"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "SUB"
    },
    "2526": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "AND",
      "path": "11"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "AND",
      "path": "11"
    },
    "2536": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "DUP2",
      "path": "11"
    },
    "2537": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "MSTORE",
      "path": "11"
    },
    "2538": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2540": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "ADD",
      "path": "11"
    },
    "2541": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "SWAP1",
      "path": "11"
    },
    "2542": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "DUP2",
      "path": "11"
    },
    "2543": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "MSTORE",
      "path": "11"
    },
    "2544": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2546": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "ADD",
      "path": "11"
    },
    "2547": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2549": {
      "fn": "LpTokenStaker.claim",
      "offset": [11865, 11895],
      "op": "KECCAK256",
      "path": "11"
    },
    "2550": {
      "fn": "LpTokenStaker.claim",
      "offset": [11841, 11895],
      "op": "SWAP1",
      "path": "11"
    },
    "2551": {
      "fn": "LpTokenStaker.claim",
      "offset": [11841, 11895],
      "op": "POP",
      "path": "11"
    },
    "2552": {
      "fn": "LpTokenStaker.claim",
      "offset": [11919, 12002],
      "op": "PUSH2",
      "path": "11",
      "statement": 22,
      "value": "0xA2D"
    },
    "2555": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 12001],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA26"
    },
    "2558": {
      "fn": "LpTokenStaker.claim",
      "offset": [11985, 11989],
      "op": "DUP3",
      "path": "11"
    },
    "2559": {
      "fn": "LpTokenStaker.claim",
      "offset": [11985, 12000],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2561": {
      "fn": "LpTokenStaker.claim",
      "offset": [11985, 12000],
      "op": "ADD",
      "path": "11"
    },
    "2562": {
      "fn": "LpTokenStaker.claim",
      "offset": [11985, 12000],
      "op": "SLOAD",
      "path": "11"
    },
    "2563": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11980],
      "op": "PUSH2",
      "path": "11",
      "value": "0x727"
    },
    "2566": {
      "fn": "LpTokenStaker.claim",
      "offset": [11975, 11979],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "2572": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11970],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "2575": {
      "fn": "LpTokenStaker.claim",
      "offset": [11947, 11951],
      "op": "DUP8",
      "path": "11"
    },
    "2576": {
      "fn": "LpTokenStaker.claim",
      "offset": [11947, 11969],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2578": {
      "fn": "LpTokenStaker.claim",
      "offset": [11947, 11969],
      "op": "ADD",
      "path": "11"
    },
    "2579": {
      "fn": "LpTokenStaker.claim",
      "offset": [11947, 11969],
      "op": "SLOAD",
      "path": "11"
    },
    "2580": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11935],
      "op": "DUP8",
      "path": "11"
    },
    "2581": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11942],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2583": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11942],
      "op": "ADD",
      "path": "11"
    },
    "2584": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11942],
      "op": "SLOAD",
      "path": "11"
    },
    "2585": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11946],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "2588": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11946],
      "op": "SWAP1",
      "path": "11"
    },
    "2589": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11970],
      "op": "SWAP2",
      "path": "11"
    },
    "2590": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11970],
      "op": "SWAP1",
      "path": "11"
    },
    "2591": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11970],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2596": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 11970],
      "op": "AND",
      "path": "11"
    },
    "2597": {
      "fn": "LpTokenStaker.claim",
      "jump": "i",
      "offset": [11931, 11970],
      "op": "JUMP",
      "path": "11"
    },
    "2598": {
      "fn": "LpTokenStaker.claim",
      "offset": [11931, 12001],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2599": {
      "fn": "LpTokenStaker.claim",
      "offset": [11919, 11926],
      "op": "DUP6",
      "path": "11"
    },
    "2600": {
      "fn": "LpTokenStaker.claim",
      "offset": [11919, 11926],
      "op": "SWAP1",
      "path": "11"
    },
    "2601": {
      "fn": "LpTokenStaker.claim",
      "offset": [11919, 11930],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "2604": {
      "fn": "LpTokenStaker.claim",
      "jump": "i",
      "offset": [11919, 12002],
      "op": "JUMP",
      "path": "11"
    },
    "2605": {
      "fn": "LpTokenStaker.claim",
      "offset": [11919, 12002],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2606": {
      "fn": "LpTokenStaker.claim",
      "offset": [11909, 12002],
      "op": "SWAP4",
      "path": "11"
    },
    "2607": {
      "fn": "LpTokenStaker.claim",
      "offset": [11909, 12002],
      "op": "POP",
      "path": "11"
    },
    "2608": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12083],
      "op": "PUSH2",
      "path": "11",
      "statement": 23,
      "value": "0xA53"
    },
    "2611": {
      "fn": "LpTokenStaker.claim",
      "offset": [12078, 12082],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "2617": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12073],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "2620": {
      "fn": "LpTokenStaker.claim",
      "offset": [12050, 12054],
      "op": "DUP5",
      "path": "11"
    },
    "2621": {
      "fn": "LpTokenStaker.claim",
      "offset": [12050, 12072],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2623": {
      "fn": "LpTokenStaker.claim",
      "offset": [12050, 12072],
      "op": "ADD",
      "path": "11"
    },
    "2624": {
      "fn": "LpTokenStaker.claim",
      "offset": [12050, 12072],
      "op": "SLOAD",
      "path": "11"
    },
    "2625": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12038],
      "op": "DUP5",
      "path": "11"
    },
    "2626": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12045],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2628": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12045],
      "op": "ADD",
      "path": "11"
    },
    "2629": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12045],
      "op": "SLOAD",
      "path": "11"
    },
    "2630": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12049],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "2633": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12049],
      "op": "SWAP1",
      "path": "11"
    },
    "2634": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12073],
      "op": "SWAP2",
      "path": "11"
    },
    "2635": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12073],
      "op": "SWAP1",
      "path": "11"
    },
    "2636": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12073],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2641": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12073],
      "op": "AND",
      "path": "11"
    },
    "2642": {
      "fn": "LpTokenStaker.claim",
      "jump": "i",
      "offset": [12034, 12073],
      "op": "JUMP",
      "path": "11"
    },
    "2643": {
      "fn": "LpTokenStaker.claim",
      "offset": [12034, 12083],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2644": {
      "fn": "LpTokenStaker.claim",
      "offset": [12016, 12031],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2646": {
      "fn": "LpTokenStaker.claim",
      "offset": [12016, 12031],
      "op": "SWAP2",
      "path": "11"
    },
    "2647": {
      "fn": "LpTokenStaker.claim",
      "offset": [12016, 12031],
      "op": "DUP3",
      "path": "11"
    },
    "2648": {
      "fn": "LpTokenStaker.claim",
      "offset": [12016, 12031],
      "op": "ADD",
      "path": "11"
    },
    "2649": {
      "fn": "LpTokenStaker.claim",
      "offset": [12016, 12083],
      "op": "SSTORE",
      "path": "11"
    },
    "2650": {
      "fn": "LpTokenStaker.claim",
      "offset": [11766, 11769],
      "op": "SWAP2",
      "path": "11",
      "statement": 24
    },
    "2651": {
      "fn": "LpTokenStaker.claim",
      "offset": [11766, 11769],
      "op": "SWAP1",
      "path": "11"
    },
    "2652": {
      "fn": "LpTokenStaker.claim",
      "offset": [11766, 11769],
      "op": "SWAP2",
      "path": "11"
    },
    "2653": {
      "fn": "LpTokenStaker.claim",
      "offset": [11766, 11769],
      "op": "ADD",
      "path": "11"
    },
    "2654": {
      "fn": "LpTokenStaker.claim",
      "offset": [11766, 11769],
      "op": "SWAP1",
      "path": "11"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "PUSH2",
      "path": "11",
      "value": "0x972"
    },
    "2659": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "JUMP",
      "path": "11"
    },
    "2660": {
      "fn": "LpTokenStaker.claim",
      "offset": [11731, 12094],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "fn": "LpTokenStaker.claim",
      "offset": [12107, 12118],
      "op": "DUP1",
      "path": "11"
    },
    "2663": {
      "branch": 93,
      "fn": "LpTokenStaker.claim",
      "offset": [12107, 12118],
      "op": "ISZERO",
      "path": "11"
    },
    "2664": {
      "fn": "LpTokenStaker.claim",
      "offset": [12103, 12183],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD7"
    },
    "2667": {
      "branch": 93,
      "fn": "LpTokenStaker.claim",
      "offset": [12103, 12183],
      "op": "JUMPI",
      "path": "11"
    },
    "2668": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0x1"
    },
    "2670": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "SLOAD",
      "path": "11"
    },
    "2671": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2673": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2674": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "MLOAD",
      "path": "11"
    },
    "2675": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP2",
      "path": "11"
    },
    "2684": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "MSTORE",
      "path": "11"
    },
    "2685": {
      "fn": "LpTokenStaker.claim",
      "offset": [12152, 12162],
      "op": "CALLER",
      "path": "11"
    },
    "2686": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2688": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP3",
      "path": "11"
    },
    "2689": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ADD",
      "path": "11"
    },
    "2690": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "MSTORE",
      "path": "11"
    },
    "2691": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "2693": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP2",
      "path": "11"
    },
    "2694": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ADD",
      "path": "11"
    },
    "2695": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP5",
      "path": "11"
    },
    "2696": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP1",
      "path": "11"
    },
    "2697": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "MSTORE",
      "path": "11"
    },
    "2698": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP1",
      "path": "11"
    },
    "2699": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "MLOAD",
      "path": "11"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "op": "SUB"
    },
    "2708": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "SWAP1",
      "path": "11"
    },
    "2709": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "SWAP3",
      "path": "11"
    },
    "2710": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "AND",
      "path": "11"
    },
    "2711": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "SWAP2",
      "path": "11"
    },
    "2712": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12151],
      "op": "PUSH4",
      "path": "11",
      "value": "0x40C10F19"
    },
    "2717": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12151],
      "op": "SWAP2",
      "path": "11"
    },
    "2718": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "2720": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2721": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP3",
      "path": "11"
    },
    "2722": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ADD",
      "path": "11"
    },
    "2723": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP3",
      "path": "11"
    },
    "2724": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2726": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "SWAP3",
      "path": "11"
    },
    "2727": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP1",
      "path": "11"
    },
    "2728": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP2",
      "path": "11"
    },
    "2729": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP1",
      "path": "11"
    },
    "2730": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP3",
      "path": "11"
    },
    "2731": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SWAP1",
      "path": "11"
    },
    "2732": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "SUB",
      "path": "11"
    },
    "2733": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ADD",
      "path": "11"
    },
    "2734": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP2",
      "path": "11"
    },
    "2735": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "DUP4",
      "path": "11"
    },
    "2736": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12146],
      "op": "DUP8",
      "path": "11"
    },
    "2737": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2738": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2739": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ISZERO",
      "path": "11"
    },
    "2740": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2741": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ISZERO",
      "path": "11"
    },
    "2742": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH2",
      "path": "11",
      "value": "0xABE"
    },
    "2745": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "JUMPI",
      "path": "11"
    },
    "2746": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2748": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2749": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "REVERT",
      "path": "11"
    },
    "2750": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2751": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "POP",
      "path": "11"
    },
    "2752": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "GAS",
      "path": "11"
    },
    "2753": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "CALL",
      "path": "11"
    },
    "2754": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ISZERO",
      "path": "11"
    },
    "2755": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2756": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "ISZERO",
      "path": "11"
    },
    "2757": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD2"
    },
    "2760": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "JUMPI",
      "path": "11"
    },
    "2761": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2762": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2764": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "DUP1",
      "path": "11"
    },
    "2765": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2766": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2767": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2769": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "REVERT",
      "path": "11"
    },
    "2770": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2771": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "POP",
      "path": "11"
    },
    "2772": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "POP",
      "path": "11"
    },
    "2773": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "POP",
      "path": "11"
    },
    "2774": {
      "fn": "LpTokenStaker.claim",
      "offset": [12134, 12172],
      "op": "POP",
      "path": "11"
    },
    "2775": {
      "fn": "LpTokenStaker.claim",
      "offset": [12103, 12183],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2776": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "POP",
      "path": "11"
    },
    "2777": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "POP",
      "path": "11"
    },
    "2778": {
      "fn": "LpTokenStaker.claim",
      "offset": [11618, 12189],
      "op": "POP",
      "path": "11"
    },
    "2779": {
      "fn": "LpTokenStaker.claim",
      "jump": "o",
      "offset": [11618, 12189],
      "op": "JUMP",
      "path": "11"
    },
    "2780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1717, 1862],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2781": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE4"
    },
    "2784": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "2787": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "2788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "op": "SUB"
    },
    "2797": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "2798": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF5"
    },
    "2801": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "2804": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "2805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "op": "SUB"
    },
    "2814": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "2815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "2816": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3E"
    },
    "2819": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "2820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "2823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "2824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2842": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2849": {
      "op": "DUP1"
    },
    "2850": {
      "op": "MLOAD"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2853": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "2856": {
      "op": "DUP4"
    },
    "2857": {
      "op": "CODECOPY"
    },
    "2858": {
      "op": "DUP2"
    },
    "2859": {
      "op": "MLOAD"
    },
    "2860": {
      "op": "SWAP2"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2864": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "2865": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2866": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "2867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2868": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "2869": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "2871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "2873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2875": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "2876": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "2877": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "2878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2879": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "2881": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "DUP1",
      "path": "0"
    },
    "2882": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SLOAD",
      "path": "0"
    },
    "2883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "MLOAD",
      "path": "0"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP1",
      "path": "0"
    },
    "2895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP2",
      "path": "0"
    },
    "2896": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "AND",
      "path": "0"
    },
    "2897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1807, 1813],
      "op": "SWAP1",
      "path": "0"
    },
    "2898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2931": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "SWAP1",
      "path": "0"
    },
    "2932": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "DUP4",
      "path": "0"
    },
    "2933": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1823, 1824],
      "op": "SWAP1",
      "path": "0"
    },
    "2934": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1786, 1826],
      "op": "LOG3",
      "path": "0"
    },
    "2935": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1853, 1854],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x0"
    },
    "2937": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "DUP1",
      "path": "0"
    },
    "2938": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SLOAD",
      "path": "0"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "op": "SUB"
    },
    "2947": {
      "op": "NOT"
    },
    "2948": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "AND",
      "path": "0"
    },
    "2949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SWAP1",
      "path": "0"
    },
    "2950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1836, 1855],
      "op": "SSTORE",
      "path": "0"
    },
    "2951": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1717, 1862],
      "op": "JUMP",
      "path": "0"
    },
    "2952": {
      "offset": [2228, 2252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [2228, 2252],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2955": {
      "fn": "Ownable.renounceOwnership",
      "offset": [2228, 2252],
      "op": "SLOAD",
      "path": "11"
    },
    "2956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [2228, 2252],
      "op": "DUP2",
      "path": "11"
    },
    "2957": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [2228, 2252],
      "op": "JUMP",
      "path": "11"
    },
    "2958": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2959": {
      "fn": "Ownable.owner",
      "offset": [1131, 1138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2961": {
      "fn": "Ownable.owner",
      "offset": [1157, 1163],
      "op": "SLOAD",
      "path": "0",
      "statement": 28
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "fn": "Ownable.owner",
      "offset": [1157, 1163],
      "op": "AND",
      "path": "0"
    },
    "2971": {
      "fn": "Ownable.owner",
      "offset": [1085, 1170],
      "op": "SWAP1",
      "path": "0"
    },
    "2972": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1085, 1170],
      "op": "JUMP",
      "path": "0"
    },
    "2973": {
      "offset": [1980, 2044],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2974": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2976": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2978": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "2979": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP2",
      "path": "11"
    },
    "2980": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "2981": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2983": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP3",
      "path": "11"
    },
    "2984": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP4",
      "path": "11"
    },
    "2985": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "2986": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2988": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "2989": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP5",
      "path": "11"
    },
    "2990": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "KECCAK256",
      "path": "11"
    },
    "2991": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "2992": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP2",
      "path": "11"
    },
    "2993": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "2994": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "2995": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP3",
      "path": "11"
    },
    "2996": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "MSTORE",
      "path": "11"
    },
    "2997": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "2998": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "KECCAK256",
      "path": "11"
    },
    "2999": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP1",
      "path": "11"
    },
    "3000": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SLOAD",
      "path": "11"
    },
    "3001": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3003": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP1",
      "path": "11"
    },
    "3004": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SWAP2",
      "path": "11"
    },
    "3005": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "ADD",
      "path": "11"
    },
    "3006": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "SLOAD",
      "path": "11"
    },
    "3007": {
      "fn": "Ownable.owner",
      "offset": [1980, 2044],
      "op": "DUP3",
      "path": "11"
    },
    "3008": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1980, 2044],
      "op": "JUMP",
      "path": "11"
    },
    "3009": {
      "offset": [1535, 1561],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3010": {
      "fn": "Ownable.owner",
      "offset": [1535, 1561],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3012": {
      "fn": "Ownable.owner",
      "offset": [1535, 1561],
      "op": "SLOAD",
      "path": "11"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "offset": [1535, 1561],
      "op": "AND",
      "path": "11"
    },
    "3022": {
      "fn": "Ownable.owner",
      "offset": [1535, 1561],
      "op": "DUP2",
      "path": "11"
    },
    "3023": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1535, 1561],
      "op": "JUMP",
      "path": "11"
    },
    "3024": {
      "fn": "LpTokenStaker.start",
      "offset": [3612, 3723],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3025": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD8"
    },
    "3028": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "3031": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "3032": {
      "fn": "LpTokenStaker.start",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3042": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE9"
    },
    "3045": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "3048": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "3049": {
      "fn": "LpTokenStaker.start",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3056": {
      "op": "SHL"
    },
    "3057": {
      "op": "SUB"
    },
    "3058": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3059": {
      "fn": "LpTokenStaker.start",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "3060": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC32"
    },
    "3063": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "3064": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3066": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "3067": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3076": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3077": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3079": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3081": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3082": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3083": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3084": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3085": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3086": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3088": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3089": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3090": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "DUP1"
    },
    "3094": {
      "op": "MLOAD"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3097": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "3100": {
      "op": "DUP4"
    },
    "3101": {
      "op": "CODECOPY"
    },
    "3102": {
      "op": "DUP2"
    },
    "3103": {
      "op": "MLOAD"
    },
    "3104": {
      "op": "SWAP2"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3108": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3109": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3110": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3112": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3113": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3114": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3115": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3116": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "3117": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3119": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3120": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3121": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "3122": {
      "fn": "LpTokenStaker.start",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3123": {
      "fn": "LpTokenStaker.start",
      "offset": [3664, 3673],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x7"
    },
    "3125": {
      "fn": "LpTokenStaker.start",
      "offset": [3664, 3673],
      "op": "SLOAD",
      "path": "11"
    },
    "3126": {
      "branch": 94,
      "fn": "LpTokenStaker.start",
      "offset": [3664, 3678],
      "op": "ISZERO",
      "path": "11"
    },
    "3127": {
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3F"
    },
    "3130": {
      "branch": 94,
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "JUMPI",
      "path": "11"
    },
    "3131": {
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3133": {
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "DUP1",
      "path": "11"
    },
    "3134": {
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "REVERT",
      "path": "11"
    },
    "3135": {
      "fn": "LpTokenStaker.start",
      "offset": [3656, 3679],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3136": {
      "fn": "LpTokenStaker.start",
      "offset": [3701, 3716],
      "op": "TIMESTAMP",
      "path": "11",
      "statement": 30
    },
    "3137": {
      "fn": "LpTokenStaker.start",
      "offset": [3689, 3698],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3139": {
      "fn": "LpTokenStaker.start",
      "offset": [3689, 3716],
      "op": "SSTORE",
      "path": "11"
    },
    "3140": {
      "fn": "LpTokenStaker.start",
      "jump": "o",
      "offset": [3612, 3723],
      "op": "JUMP",
      "path": "11"
    },
    "3141": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3142": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6491, 6498],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3144": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6515, 6543],
      "op": "DUP1",
      "path": "11"
    },
    "3145": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6545, 6560],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3147": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6564, 6581],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC52"
    },
    "3150": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6564, 6579],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14EC"
    },
    "3153": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [6564, 6581],
      "op": "JUMP",
      "path": "11"
    },
    "3154": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6564, 6581],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3155": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6514, 6581],
      "op": "SWAP2",
      "path": "11"
    },
    "3156": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6514, 6581],
      "op": "POP",
      "path": "11"
    },
    "3157": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6514, 6581],
      "op": "SWAP2",
      "path": "11"
    },
    "3158": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6514, 6581],
      "op": "POP",
      "path": "11"
    },
    "3159": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6591, 6612],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3161": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6623],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3163": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6624, 6628],
      "op": "DUP7",
      "path": "11"
    },
    "3164": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "DUP2",
      "path": "11"
    },
    "3165": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SLOAD",
      "path": "11"
    },
    "3166": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "DUP2",
      "path": "11"
    },
    "3167": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "LT",
      "path": "11"
    },
    "3168": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC65"
    },
    "3171": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "JUMPI",
      "path": "11"
    },
    "3172": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "INVALID",
      "path": "11"
    },
    "3173": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3174": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3176": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP2",
      "path": "11"
    },
    "3177": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "DUP3",
      "path": "11"
    },
    "3178": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "MSTORE",
      "path": "11"
    },
    "3179": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3181": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "DUP1",
      "path": "11"
    },
    "3182": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "DUP4",
      "path": "11"
    },
    "3183": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "KECCAK256",
      "path": "11"
    },
    "3184": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP10",
      "path": "11"
    },
    "3185": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP5",
      "path": "11"
    },
    "3186": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "MSTORE",
      "path": "11"
    },
    "3187": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "3189": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP1",
      "path": "11"
    },
    "3190": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP4",
      "path": "11"
    },
    "3191": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "MSTORE",
      "path": "11"
    },
    "3192": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3194": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP1",
      "path": "11"
    },
    "3195": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "DUP7",
      "path": "11"
    },
    "3196": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6677],
      "op": "KECCAK256",
      "path": "11"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3203": {
      "op": "SHL"
    },
    "3204": {
      "op": "SUB"
    },
    "3205": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP13",
      "path": "11"
    },
    "3206": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP2",
      "path": "11"
    },
    "3207": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "AND",
      "path": "11"
    },
    "3208": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP9",
      "path": "11"
    },
    "3209": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "MSTORE",
      "path": "11"
    },
    "3210": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "SWAP1",
      "path": "11"
    },
    "3211": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP6",
      "path": "11"
    },
    "3212": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "MSTORE",
      "path": "11"
    },
    "3213": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP2",
      "path": "11"
    },
    "3214": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "DUP8",
      "path": "11"
    },
    "3215": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "KECCAK256",
      "path": "11"
    },
    "3216": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP6",
      "path": "11"
    },
    "3217": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP1",
      "path": "11"
    },
    "3218": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP3",
      "path": "11"
    },
    "3219": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "MUL",
      "path": "11"
    },
    "3220": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP1",
      "path": "11"
    },
    "3221": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP3",
      "path": "11"
    },
    "3222": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "ADD",
      "path": "11"
    },
    "3223": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6722, 6744],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3225": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6722, 6744],
      "op": "DUP2",
      "path": "11"
    },
    "3226": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6722, 6744],
      "op": "DUP2",
      "path": "11"
    },
    "3227": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6722, 6744],
      "op": "ADD",
      "path": "11"
    },
    "3228": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6722, 6744],
      "op": "SLOAD",
      "path": "11"
    },
    "3229": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "DUP3",
      "path": "11"
    },
    "3230": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "SLOAD",
      "path": "11"
    },
    "3231": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP6",
      "path": "11"
    },
    "3232": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MLOAD",
      "path": "11"
    },
    "3233": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP2",
      "path": "11"
    },
    "3242": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MSTORE",
      "path": "11"
    },
    "3243": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6804, 6808],
      "op": "ADDRESS",
      "path": "11"
    },
    "3244": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP4",
      "path": "11"
    },
    "3245": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP2",
      "path": "11"
    },
    "3246": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ADD",
      "path": "11"
    },
    "3247": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP4",
      "path": "11"
    },
    "3248": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP1",
      "path": "11"
    },
    "3249": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP4",
      "path": "11"
    },
    "3250": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MSTORE",
      "path": "11"
    },
    "3251": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP5",
      "path": "11"
    },
    "3252": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MLOAD",
      "path": "11"
    },
    "3253": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP3",
      "path": "11"
    },
    "3254": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP9",
      "path": "11"
    },
    "3255": {
      "op": "POP"
    },
    "3256": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "SWAP6",
      "path": "11"
    },
    "3257": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6663, 6684],
      "op": "SWAP7",
      "path": "11"
    },
    "3258": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6615, 6629],
      "op": "SWAP5",
      "path": "11"
    },
    "3259": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "SWAP4",
      "path": "11"
    },
    "3260": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "SWAP1",
      "path": "11"
    },
    "3261": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "SWAP3",
      "path": "11"
    },
    "3262": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "AND",
      "path": "11"
    },
    "3263": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "SWAP3",
      "path": "11"
    },
    "3264": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6795],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "3269": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6795],
      "op": "SWAP3",
      "path": "11"
    },
    "3270": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "3272": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3273": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP3",
      "path": "11"
    },
    "3274": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ADD",
      "path": "11"
    },
    "3275": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP4",
      "path": "11"
    },
    "3276": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP2",
      "path": "11"
    },
    "3277": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP3",
      "path": "11"
    },
    "3278": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP1",
      "path": "11"
    },
    "3279": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SUB",
      "path": "11"
    },
    "3280": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ADD",
      "path": "11"
    },
    "3281": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP2",
      "path": "11"
    },
    "3282": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6785],
      "op": "DUP7",
      "path": "11"
    },
    "3283": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3284": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3285": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ISZERO",
      "path": "11"
    },
    "3286": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3287": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ISZERO",
      "path": "11"
    },
    "3288": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCE0"
    },
    "3291": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPI",
      "path": "11"
    },
    "3292": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3294": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3295": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "REVERT",
      "path": "11"
    },
    "3296": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3297": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "POP",
      "path": "11"
    },
    "3298": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "GAS",
      "path": "11"
    },
    "3299": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "STATICCALL",
      "path": "11"
    },
    "3300": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ISZERO",
      "path": "11"
    },
    "3301": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3302": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ISZERO",
      "path": "11"
    },
    "3303": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCF4"
    },
    "3306": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPI",
      "path": "11"
    },
    "3307": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3308": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3310": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3311": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3312": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3313": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3315": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "REVERT",
      "path": "11"
    },
    "3316": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3317": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "POP",
      "path": "11"
    },
    "3318": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "POP",
      "path": "11"
    },
    "3319": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "POP",
      "path": "11"
    },
    "3320": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "POP",
      "path": "11"
    },
    "3321": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3323": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MLOAD",
      "path": "11"
    },
    "3324": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3325": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3327": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP2",
      "path": "11"
    },
    "3328": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "LT",
      "path": "11"
    },
    "3329": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "ISZERO",
      "path": "11"
    },
    "3330": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD0A"
    },
    "3333": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPI",
      "path": "11"
    },
    "3334": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3336": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "DUP1",
      "path": "11"
    },
    "3337": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "REVERT",
      "path": "11"
    },
    "3338": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "MLOAD",
      "path": "11"
    },
    "3341": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6842, 6861],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3343": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6842, 6861],
      "op": "DUP6",
      "path": "11"
    },
    "3344": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6842, 6861],
      "op": "ADD",
      "path": "11"
    },
    "3345": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6842, 6861],
      "op": "SLOAD",
      "path": "11"
    },
    "3346": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP1",
      "path": "11"
    },
    "3347": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6773, 6810],
      "op": "SWAP2",
      "path": "11"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6839],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3350": {
      "branch": 95,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6861],
      "op": "GT",
      "path": "11"
    },
    "3351": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6878],
      "op": "DUP1",
      "path": "11"
    },
    "3352": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6878],
      "op": "ISZERO",
      "path": "11"
    },
    "3353": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6878],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD21"
    },
    "3356": {
      "branch": 95,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6878],
      "op": "JUMPI",
      "path": "11"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6865, 6878],
      "op": "DUP1",
      "path": "11"
    },
    "3359": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6865, 6878],
      "op": "ISZERO",
      "path": "11"
    },
    "3360": {
      "branch": 96,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6865, 6878],
      "op": "ISZERO",
      "path": "11"
    },
    "3361": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6878],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3362": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6894],
      "op": "DUP1",
      "path": "11"
    },
    "3363": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6894],
      "op": "ISZERO",
      "path": "11"
    },
    "3364": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6894],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD2C"
    },
    "3367": {
      "branch": 96,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6894],
      "op": "JUMPI",
      "path": "11"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6882, 6894],
      "op": "DUP5",
      "path": "11"
    },
    "3370": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6882, 6894],
      "op": "ISZERO",
      "path": "11"
    },
    "3371": {
      "branch": 97,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6882, 6894],
      "op": "ISZERO",
      "path": "11"
    },
    "3372": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6824, 6894],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3373": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "ISZERO",
      "path": "11"
    },
    "3374": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDA1"
    },
    "3377": {
      "branch": 97,
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "JUMPI",
      "path": "11"
    },
    "3378": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6910, 6926],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3380": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD4A"
    },
    "3383": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6949, 6953],
      "op": "DUP6",
      "path": "11"
    },
    "3384": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6949, 6968],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3386": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6949, 6968],
      "op": "ADD",
      "path": "11"
    },
    "3387": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6949, 6968],
      "op": "SLOAD",
      "path": "11"
    },
    "3388": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6944],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3389": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6948],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "3392": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6948],
      "op": "SWAP1",
      "path": "11"
    },
    "3393": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "SWAP2",
      "path": "11"
    },
    "3394": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "SWAP1",
      "path": "11"
    },
    "3395": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3400": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "AND",
      "path": "11"
    },
    "3401": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [6929, 6969],
      "op": "JUMP",
      "path": "11"
    },
    "3402": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6929, 6969],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3403": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6910, 6969],
      "op": "SWAP1",
      "path": "11"
    },
    "3404": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6910, 6969],
      "op": "POP",
      "path": "11"
    },
    "3405": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6983, 6997],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3407": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7066],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD84"
    },
    "3410": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7058, 7065],
      "op": "DUP8",
      "path": "11"
    },
    "3411": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7053],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "3414": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7046],
      "op": "DUP11",
      "path": "11"
    },
    "3415": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7047, 7051],
      "op": "DUP15",
      "path": "11"
    },
    "3416": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "DUP2",
      "path": "11"
    },
    "3417": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "MLOAD",
      "path": "11"
    },
    "3418": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "DUP2",
      "path": "11"
    },
    "3419": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "LT",
      "path": "11"
    },
    "3420": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD61"
    },
    "3423": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "JUMPI",
      "path": "11"
    },
    "3424": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "INVALID",
      "path": "11"
    },
    "3425": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3426": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3428": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "MUL",
      "path": "11"
    },
    "3429": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3431": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "ADD",
      "path": "11"
    },
    "3432": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "ADD",
      "path": "11"
    },
    "3433": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7035, 7052],
      "op": "MLOAD",
      "path": "11"
    },
    "3434": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD7E"
    },
    "3437": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7013, 7029],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3439": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7013, 7029],
      "op": "SLOAD",
      "path": "11"
    },
    "3440": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7008],
      "op": "DUP8",
      "path": "11"
    },
    "3441": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7012],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "3444": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7012],
      "op": "SWAP1",
      "path": "11"
    },
    "3445": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "SWAP2",
      "path": "11"
    },
    "3446": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "SWAP1",
      "path": "11"
    },
    "3447": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3452": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "AND",
      "path": "11"
    },
    "3453": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [7000, 7030],
      "op": "JUMP",
      "path": "11"
    },
    "3454": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7030],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3455": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7034],
      "op": "SWAP1",
      "path": "11"
    },
    "3456": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7034],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "3459": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [7000, 7053],
      "op": "JUMP",
      "path": "11"
    },
    "3460": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7000, 7066],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3461": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6983, 7066],
      "op": "SWAP1",
      "path": "11"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7100, 7153],
      "op": "PUSH2",
      "path": "11",
      "statement": 31,
      "value": "0xD9C"
    },
    "3466": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7122, 7152],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA26"
    },
    "3469": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7143, 7151],
      "op": "DUP5",
      "path": "11"
    },
    "3470": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7122, 7138],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "3473": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6983, 7066],
      "op": "DUP5",
      "path": "11"
    },
    "3474": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7133, 7137],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "3480": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7122, 7132],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "3483": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [7122, 7138],
      "op": "JUMP",
      "path": "11"
    },
    "3484": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7100, 7153],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3485": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7080, 7153],
      "op": "SWAP4",
      "path": "11"
    },
    "3486": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7080, 7153],
      "op": "POP",
      "path": "11"
    },
    "3487": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "POP",
      "path": "11"
    },
    "3488": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "POP",
      "path": "11"
    },
    "3489": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6820, 7164],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3490": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7245],
      "op": "PUSH2",
      "path": "11",
      "statement": 32,
      "value": "0xDC9"
    },
    "3493": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7229, 7233],
      "op": "DUP4",
      "path": "11"
    },
    "3494": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7229, 7244],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3496": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7229, 7244],
      "op": "ADD",
      "path": "11"
    },
    "3497": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7229, 7244],
      "op": "SLOAD",
      "path": "11"
    },
    "3498": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7224],
      "op": "PUSH2",
      "path": "11",
      "value": "0x727"
    },
    "3501": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7219, 7223],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "3507": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7214],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "3510": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7196, 7213],
      "op": "DUP7",
      "path": "11"
    },
    "3511": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7184],
      "op": "DUP9",
      "path": "11"
    },
    "3512": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7191],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3514": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7191],
      "op": "ADD",
      "path": "11"
    },
    "3515": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7191],
      "op": "SLOAD",
      "path": "11"
    },
    "3516": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7195],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "3519": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7195],
      "op": "SWAP1",
      "path": "11"
    },
    "3520": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7214],
      "op": "SWAP2",
      "path": "11"
    },
    "3521": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7214],
      "op": "SWAP1",
      "path": "11"
    },
    "3522": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7214],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3527": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7214],
      "op": "AND",
      "path": "11"
    },
    "3528": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "i",
      "offset": [7180, 7214],
      "op": "JUMP",
      "path": "11"
    },
    "3529": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7180, 7245],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3530": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "SWAP7",
      "path": "11"
    },
    "3531": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3532": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3533": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3534": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3535": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3536": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3537": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [7173, 7245],
      "op": "POP",
      "path": "11"
    },
    "3538": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3539": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "SWAP3",
      "path": "11"
    },
    "3540": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "SWAP2",
      "path": "11"
    },
    "3541": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "POP",
      "path": "11"
    },
    "3542": {
      "fn": "LpTokenStaker.claimableReward",
      "offset": [6390, 7252],
      "op": "POP",
      "path": "11"
    },
    "3543": {
      "fn": "LpTokenStaker.claimableReward",
      "jump": "o",
      "offset": [6390, 7252],
      "op": "JUMP",
      "path": "11"
    },
    "3544": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4545, 4716],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3545": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE0"
    },
    "3548": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "3551": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "3552": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3562": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF1"
    },
    "3565": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "3568": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "3569": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3576": {
      "op": "SHL"
    },
    "3577": {
      "op": "SUB"
    },
    "3578": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "3579": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "3580": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3A"
    },
    "3583": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "3584": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3586": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "3587": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3596": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3597": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3599": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3601": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3602": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3603": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3604": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3605": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3606": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3608": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3609": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3610": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3613": {
      "op": "DUP1"
    },
    "3614": {
      "op": "MLOAD"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "3620": {
      "op": "DUP4"
    },
    "3621": {
      "op": "CODECOPY"
    },
    "3622": {
      "op": "DUP2"
    },
    "3623": {
      "op": "MLOAD"
    },
    "3624": {
      "op": "SWAP2"
    },
    "3625": {
      "op": "MSTORE"
    },
    "3626": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3628": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "3629": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3630": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "3631": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3632": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "3633": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3634": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "3635": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3636": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "3637": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3639": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "3640": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "3641": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "3642": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3643": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4616],
      "op": "DUP1",
      "path": "11",
      "statement": 33
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3650": {
      "op": "SHL"
    },
    "3651": {
      "op": "SUB"
    },
    "3652": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4629],
      "op": "AND",
      "path": "11"
    },
    "3653": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4629],
      "op": "PUSH4",
      "path": "11",
      "value": "0x50D25BCD"
    },
    "3658": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3660": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "MLOAD",
      "path": "11"
    },
    "3661": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP2",
      "path": "11"
    },
    "3662": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3667": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "AND",
      "path": "11"
    },
    "3668": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "3670": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "SHL",
      "path": "11"
    },
    "3671": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP2",
      "path": "11"
    },
    "3672": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "MSTORE",
      "path": "11"
    },
    "3673": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3675": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ADD",
      "path": "11"
    },
    "3676": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3678": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3680": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "MLOAD",
      "path": "11"
    },
    "3681": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3682": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP4",
      "path": "11"
    },
    "3683": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "SUB",
      "path": "11"
    },
    "3684": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP2",
      "path": "11"
    },
    "3685": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP7",
      "path": "11"
    },
    "3686": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3687": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3688": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ISZERO",
      "path": "11"
    },
    "3689": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3690": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ISZERO",
      "path": "11"
    },
    "3691": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE73"
    },
    "3694": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPI",
      "path": "11"
    },
    "3695": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3697": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3698": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "REVERT",
      "path": "11"
    },
    "3699": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3700": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "POP",
      "path": "11"
    },
    "3701": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "GAS",
      "path": "11"
    },
    "3702": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "STATICCALL",
      "path": "11"
    },
    "3703": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ISZERO",
      "path": "11"
    },
    "3704": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3705": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ISZERO",
      "path": "11"
    },
    "3706": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE87"
    },
    "3709": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPI",
      "path": "11"
    },
    "3710": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3711": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3713": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3714": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3715": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3716": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3718": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "REVERT",
      "path": "11"
    },
    "3719": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3720": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "POP",
      "path": "11"
    },
    "3721": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "POP",
      "path": "11"
    },
    "3722": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "POP",
      "path": "11"
    },
    "3723": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "POP",
      "path": "11"
    },
    "3724": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3726": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "MLOAD",
      "path": "11"
    },
    "3727": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3728": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3730": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP2",
      "path": "11"
    },
    "3731": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "LT",
      "path": "11"
    },
    "3732": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "ISZERO",
      "path": "11"
    },
    "3733": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE9D"
    },
    "3736": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPI",
      "path": "11"
    },
    "3737": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3739": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "DUP1",
      "path": "11"
    },
    "3740": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "REVERT",
      "path": "11"
    },
    "3741": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4609, 4631],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4695],
      "op": "PUSH1",
      "path": "11",
      "statement": 34,
      "value": "0x8"
    },
    "3746": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "DUP1",
      "path": "11"
    },
    "3747": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SLOAD",
      "path": "11"
    },
    "3748": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3750": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "DUP2",
      "path": "11"
    },
    "3751": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "ADD",
      "path": "11"
    },
    "3752": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "DUP3",
      "path": "11"
    },
    "3753": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SSTORE",
      "path": "11"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3756": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP2",
      "path": "11"
    },
    "3757": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP1",
      "path": "11"
    },
    "3758": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP2",
      "path": "11"
    },
    "3759": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "MSTORE",
      "path": "11"
    },
    "3760": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "PUSH32",
      "path": "11",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "3793": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "ADD",
      "path": "11"
    },
    "3794": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "DUP1",
      "path": "11"
    },
    "3795": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SLOAD",
      "path": "11"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "op": "SUB"
    },
    "3804": {
      "op": "NOT"
    },
    "3805": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "AND",
      "path": "11"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "op": "SUB"
    },
    "3814": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP3",
      "path": "11"
    },
    "3815": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP1",
      "path": "11"
    },
    "3816": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP3",
      "path": "11"
    },
    "3817": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "AND",
      "path": "11"
    },
    "3818": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP2",
      "path": "11"
    },
    "3819": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP1",
      "path": "11"
    },
    "3820": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP2",
      "path": "11"
    },
    "3821": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "OR",
      "path": "11"
    },
    "3822": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SWAP1",
      "path": "11"
    },
    "3823": {
      "fn": "LpTokenStaker.addOracle",
      "offset": [4688, 4709],
      "op": "SSTORE",
      "path": "11"
    },
    "3824": {
      "fn": "LpTokenStaker.addOracle",
      "jump": "o",
      "offset": [4545, 4716],
      "op": "JUMP",
      "path": "11"
    },
    "3825": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3826": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8859, 8880],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3828": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8891],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3830": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8892, 8896],
      "op": "DUP4",
      "path": "11"
    },
    "3831": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "DUP2",
      "path": "11"
    },
    "3832": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SLOAD",
      "path": "11"
    },
    "3833": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "DUP2",
      "path": "11"
    },
    "3834": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "LT",
      "path": "11"
    },
    "3835": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF00"
    },
    "3838": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "JUMPI",
      "path": "11"
    },
    "3839": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "INVALID",
      "path": "11"
    },
    "3840": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3841": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3843": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SWAP2",
      "path": "11"
    },
    "3844": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "DUP3",
      "path": "11"
    },
    "3845": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "MSTORE",
      "path": "11"
    },
    "3846": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3848": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "DUP1",
      "path": "11"
    },
    "3849": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "DUP4",
      "path": "11"
    },
    "3850": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "KECCAK256",
      "path": "11"
    },
    "3851": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP7",
      "path": "11"
    },
    "3852": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP5",
      "path": "11"
    },
    "3853": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "MSTORE",
      "path": "11"
    },
    "3854": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "3856": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP1",
      "path": "11"
    },
    "3857": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP4",
      "path": "11"
    },
    "3858": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "MSTORE",
      "path": "11"
    },
    "3859": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3861": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP1",
      "path": "11"
    },
    "3862": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "DUP7",
      "path": "11"
    },
    "3863": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8945],
      "op": "KECCAK256",
      "path": "11"
    },
    "3864": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8946, 8956],
      "op": "CALLER",
      "path": "11"
    },
    "3865": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "DUP8",
      "path": "11"
    },
    "3866": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "MSTORE",
      "path": "11"
    },
    "3867": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "SWAP1",
      "path": "11"
    },
    "3868": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "SWAP4",
      "path": "11"
    },
    "3869": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "MSTORE",
      "path": "11"
    },
    "3870": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "SWAP2",
      "path": "11"
    },
    "3871": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "SWAP1",
      "path": "11"
    },
    "3872": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "SWAP4",
      "path": "11"
    },
    "3873": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8931, 8957],
      "op": "KECCAK256",
      "path": "11"
    },
    "3874": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SWAP2",
      "path": "11"
    },
    "3875": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "MUL",
      "path": "11"
    },
    "3876": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SWAP1",
      "path": "11"
    },
    "3877": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SWAP2",
      "path": "11"
    },
    "3878": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "ADD",
      "path": "11"
    },
    "3879": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8883, 8897],
      "op": "SWAP2",
      "path": "11"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8967, 8985],
      "op": "PUSH2",
      "path": "11",
      "statement": 35,
      "value": "0xF30"
    },
    "3884": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8967, 8983],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1228"
    },
    "3887": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [8967, 8985],
      "op": "JUMP",
      "path": "11"
    },
    "3888": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8967, 8985],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3889": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8999, 9010],
      "op": "DUP1",
      "path": "11"
    },
    "3890": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8999, 9010],
      "op": "SLOAD",
      "path": "11"
    },
    "3891": {
      "branch": 98,
      "fn": "LpTokenStaker.deposit",
      "offset": [8999, 9014],
      "op": "ISZERO",
      "path": "11"
    },
    "3892": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8995, 9235],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFD5"
    },
    "3895": {
      "branch": 98,
      "fn": "LpTokenStaker.deposit",
      "offset": [8995, 9235],
      "op": "JUMPI",
      "path": "11"
    },
    "3896": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9030, 9045],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3898": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9172],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF65"
    },
    "3901": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9139, 9143],
      "op": "DUP3",
      "path": "11"
    },
    "3902": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9139, 9154],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3904": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9139, 9154],
      "op": "ADD",
      "path": "11"
    },
    "3905": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9139, 9154],
      "op": "SLOAD",
      "path": "11"
    },
    "3906": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9113],
      "op": "PUSH2",
      "path": "11",
      "value": "0x727"
    },
    "3909": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9108, 9112],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "3915": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9103],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "3918": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9080, 9084],
      "op": "DUP8",
      "path": "11"
    },
    "3919": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9080, 9102],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3921": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9080, 9102],
      "op": "ADD",
      "path": "11"
    },
    "3922": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9080, 9102],
      "op": "SLOAD",
      "path": "11"
    },
    "3923": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9068],
      "op": "DUP8",
      "path": "11"
    },
    "3924": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9075],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3926": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9075],
      "op": "ADD",
      "path": "11"
    },
    "3927": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9075],
      "op": "SLOAD",
      "path": "11"
    },
    "3928": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9079],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "3931": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9079],
      "op": "SWAP1",
      "path": "11"
    },
    "3932": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9103],
      "op": "SWAP2",
      "path": "11"
    },
    "3933": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9103],
      "op": "SWAP1",
      "path": "11"
    },
    "3934": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9103],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3939": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9103],
      "op": "AND",
      "path": "11"
    },
    "3940": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9064, 9103],
      "op": "JUMP",
      "path": "11"
    },
    "3941": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9064, 9172],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3942": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "PUSH1",
      "path": "11",
      "statement": 36,
      "value": "0x1"
    },
    "3944": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "SLOAD",
      "path": "11"
    },
    "3945": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3947": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "3948": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "MLOAD",
      "path": "11"
    },
    "3949": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3956": {
      "op": "SHL"
    },
    "3957": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP2",
      "path": "11"
    },
    "3958": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "MSTORE",
      "path": "11"
    },
    "3959": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9204, 9214],
      "op": "CALLER",
      "path": "11"
    },
    "3960": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3962": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP3",
      "path": "11"
    },
    "3963": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ADD",
      "path": "11"
    },
    "3964": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "MSTORE",
      "path": "11"
    },
    "3965": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "3967": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP2",
      "path": "11"
    },
    "3968": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ADD",
      "path": "11"
    },
    "3969": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP5",
      "path": "11"
    },
    "3970": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP1",
      "path": "11"
    },
    "3971": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "MSTORE",
      "path": "11"
    },
    "3972": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP1",
      "path": "11"
    },
    "3973": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "MLOAD",
      "path": "11"
    },
    "3974": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9030, 9172],
      "op": "SWAP3",
      "path": "11"
    },
    "3975": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9030, 9172],
      "op": "SWAP4",
      "path": "11"
    },
    "3976": {
      "op": "POP"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "SUB"
    },
    "3985": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "SWAP1",
      "path": "11"
    },
    "3986": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "SWAP2",
      "path": "11"
    },
    "3987": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "AND",
      "path": "11"
    },
    "3988": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "SWAP2",
      "path": "11"
    },
    "3989": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9203],
      "op": "PUSH4",
      "path": "11",
      "value": "0x40C10F19"
    },
    "3994": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9203],
      "op": "SWAP2",
      "path": "11"
    },
    "3995": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "3997": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "3998": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP3",
      "path": "11"
    },
    "3999": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ADD",
      "path": "11"
    },
    "4000": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP3",
      "path": "11"
    },
    "4001": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4003": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "SWAP3",
      "path": "11"
    },
    "4004": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP1",
      "path": "11"
    },
    "4005": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP2",
      "path": "11"
    },
    "4006": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP1",
      "path": "11"
    },
    "4007": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP3",
      "path": "11"
    },
    "4008": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SWAP1",
      "path": "11"
    },
    "4009": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "SUB",
      "path": "11"
    },
    "4010": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ADD",
      "path": "11"
    },
    "4011": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP2",
      "path": "11"
    },
    "4012": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "DUP4",
      "path": "11"
    },
    "4013": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9198],
      "op": "DUP8",
      "path": "11"
    },
    "4014": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "4015": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "4016": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ISZERO",
      "path": "11"
    },
    "4017": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "4018": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ISZERO",
      "path": "11"
    },
    "4019": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFBB"
    },
    "4022": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "JUMPI",
      "path": "11"
    },
    "4023": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4025": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "4026": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "REVERT",
      "path": "11"
    },
    "4027": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4028": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "POP",
      "path": "11"
    },
    "4029": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "GAS",
      "path": "11"
    },
    "4030": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "CALL",
      "path": "11"
    },
    "4031": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ISZERO",
      "path": "11"
    },
    "4032": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "4033": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "ISZERO",
      "path": "11"
    },
    "4034": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFCF"
    },
    "4037": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "JUMPI",
      "path": "11"
    },
    "4038": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4039": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4041": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "DUP1",
      "path": "11"
    },
    "4042": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4043": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4044": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4046": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "REVERT",
      "path": "11"
    },
    "4047": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4048": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "POP",
      "path": "11"
    },
    "4049": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "POP",
      "path": "11"
    },
    "4050": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "POP",
      "path": "11"
    },
    "4051": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9186, 9224],
      "op": "POP",
      "path": "11"
    },
    "4052": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8995, 9235],
      "op": "POP",
      "path": "11"
    },
    "4053": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8995, 9235],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4054": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9256],
      "op": "DUP2",
      "path": "11",
      "statement": 37
    },
    "4055": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9256],
      "op": "SLOAD",
      "path": "11"
    },
    "4056": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9364],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFEC"
    },
    "4059": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9364],
      "op": "SWAP1",
      "path": "11"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4066": {
      "op": "SHL"
    },
    "4067": {
      "op": "SUB"
    },
    "4068": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9256],
      "op": "AND",
      "path": "11"
    },
    "4069": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9295, 9305],
      "op": "CALLER",
      "path": "11"
    },
    "4070": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9328, 9332],
      "op": "ADDRESS",
      "path": "11"
    },
    "4071": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9347, 9354],
      "op": "DUP7",
      "path": "11"
    },
    "4072": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9273],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172D"
    },
    "4075": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9244, 9364],
      "op": "JUMP",
      "path": "11"
    },
    "4076": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9244, 9364],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4077": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9399],
      "op": "DUP1",
      "path": "11",
      "statement": 38
    },
    "4078": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9399],
      "op": "SLOAD",
      "path": "11"
    },
    "4079": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9412],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFF8"
    },
    "4082": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9412],
      "op": "SWAP1",
      "path": "11"
    },
    "4083": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9404, 9411],
      "op": "DUP5",
      "path": "11"
    },
    "4084": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9403],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "4087": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9388, 9412],
      "op": "JUMP",
      "path": "11"
    },
    "4088": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9388, 9412],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4089": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9374, 9412],
      "op": "DUP1",
      "path": "11"
    },
    "4090": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9374, 9412],
      "op": "DUP3",
      "path": "11"
    },
    "4091": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9374, 9412],
      "op": "SSTORE",
      "path": "11"
    },
    "4092": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9456, 9478],
      "op": "PUSH1",
      "path": "11",
      "statement": 39,
      "value": "0x4"
    },
    "4094": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9456, 9478],
      "op": "DUP4",
      "path": "11"
    },
    "4095": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9456, 9478],
      "op": "ADD",
      "path": "11"
    },
    "4096": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9456, 9478],
      "op": "SLOAD",
      "path": "11"
    },
    "4097": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9489],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1015"
    },
    "4100": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9489],
      "op": "SWAP2",
      "path": "11"
    },
    "4101": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9484, 9488],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "4107": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9484, 9488],
      "op": "SWAP2",
      "path": "11"
    },
    "4108": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9479],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "4111": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9479],
      "op": "SWAP2",
      "path": "11"
    },
    "4112": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9374, 9412],
      "op": "SWAP1",
      "path": "11"
    },
    "4113": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9455],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "4116": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9440, 9479],
      "op": "JUMP",
      "path": "11"
    },
    "4117": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9440, 9489],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4118": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9422, 9437],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4120": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9422, 9437],
      "op": "DUP3",
      "path": "11"
    },
    "4121": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9422, 9437],
      "op": "ADD",
      "path": "11"
    },
    "4122": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9422, 9489],
      "op": "SSTORE",
      "path": "11"
    },
    "4123": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9503, 9511],
      "op": "DUP4",
      "path": "11"
    },
    "4124": {
      "branch": 99,
      "fn": "LpTokenStaker.deposit",
      "offset": [9503, 9511],
      "op": "ISZERO",
      "path": "11"
    },
    "4125": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9499, 9644],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1045"
    },
    "4128": {
      "branch": 99,
      "fn": "LpTokenStaker.deposit",
      "offset": [9499, 9644],
      "op": "JUMPI",
      "path": "11"
    },
    "4129": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9560],
      "op": "PUSH1",
      "path": "11",
      "statement": 40,
      "value": "0x2"
    },
    "4131": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9560],
      "op": "DUP3",
      "path": "11"
    },
    "4132": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9560],
      "op": "ADD",
      "path": "11"
    },
    "4133": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9560],
      "op": "SLOAD",
      "path": "11"
    },
    "4134": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9573],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102F"
    },
    "4137": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9573],
      "op": "SWAP1",
      "path": "11"
    },
    "4138": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9565, 9572],
      "op": "DUP5",
      "path": "11"
    },
    "4139": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9564],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "4142": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9545, 9573],
      "op": "JUMP",
      "path": "11"
    },
    "4143": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9545, 9573],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4144": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9527, 9542],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4146": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9527, 9542],
      "op": "DUP4",
      "path": "11"
    },
    "4147": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9527, 9542],
      "op": "ADD",
      "path": "11"
    },
    "4148": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9527, 9573],
      "op": "SSTORE",
      "path": "11"
    },
    "4149": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9620],
      "op": "PUSH1",
      "path": "11",
      "statement": 41,
      "value": "0x6"
    },
    "4151": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9620],
      "op": "SLOAD",
      "path": "11"
    },
    "4152": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9633],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1041"
    },
    "4155": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9633],
      "op": "SWAP1",
      "path": "11"
    },
    "4156": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9625, 9632],
      "op": "DUP5",
      "path": "11"
    },
    "4157": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9624],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "4160": {
      "fn": "LpTokenStaker.deposit",
      "jump": "i",
      "offset": [9605, 9633],
      "op": "JUMP",
      "path": "11"
    },
    "4161": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9605, 9633],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4162": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9587, 9602],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "4164": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9587, 9633],
      "op": "SSTORE",
      "path": "11"
    },
    "4165": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9499, 9644],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4166": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "PUSH1",
      "path": "11",
      "statement": 42,
      "value": "0x40"
    },
    "4168": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "DUP1",
      "path": "11"
    },
    "4169": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "MLOAD",
      "path": "11"
    },
    "4170": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "DUP5",
      "path": "11"
    },
    "4171": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "DUP2",
      "path": "11"
    },
    "4172": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "MSTORE",
      "path": "11"
    },
    "4173": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "SWAP1",
      "path": "11"
    },
    "4174": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "MLOAD",
      "path": "11"
    },
    "4175": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9678, 9682],
      "op": "DUP6",
      "path": "11"
    },
    "4176": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9678, 9682],
      "op": "SWAP2",
      "path": "11"
    },
    "4177": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9666, 9676],
      "op": "CALLER",
      "path": "11"
    },
    "4178": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9666, 9676],
      "op": "SWAP2",
      "path": "11"
    },
    "4179": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "PUSH32",
      "path": "11",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "4212": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "SWAP2",
      "path": "11"
    },
    "4213": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "DUP2",
      "path": "11"
    },
    "4214": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "SWAP1",
      "path": "11"
    },
    "4215": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "SUB",
      "path": "11"
    },
    "4216": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4218": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "ADD",
      "path": "11"
    },
    "4219": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "SWAP1",
      "path": "11"
    },
    "4220": {
      "fn": "LpTokenStaker.deposit",
      "offset": [9658, 9692],
      "op": "LOG3",
      "path": "11"
    },
    "4221": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "POP",
      "path": "11"
    },
    "4222": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "POP",
      "path": "11"
    },
    "4223": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "POP",
      "path": "11"
    },
    "4224": {
      "fn": "LpTokenStaker.deposit",
      "offset": [8794, 9699],
      "op": "POP",
      "path": "11"
    },
    "4225": {
      "fn": "LpTokenStaker.deposit",
      "jump": "o",
      "offset": [8794, 9699],
      "op": "JUMP",
      "path": "11"
    },
    "4226": {
      "offset": [1567, 1598],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4227": {
      "fn": "LpTokenStaker.deposit",
      "offset": [1567, 1598],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4229": {
      "fn": "LpTokenStaker.deposit",
      "offset": [1567, 1598],
      "op": "SLOAD",
      "path": "11"
    },
    "4230": {
      "fn": "LpTokenStaker.deposit",
      "offset": [1567, 1598],
      "op": "DUP2",
      "path": "11"
    },
    "4231": {
      "fn": "LpTokenStaker.deposit",
      "jump": "o",
      "offset": [1567, 1598],
      "op": "JUMP",
      "path": "11"
    },
    "4232": {
      "fn": "Ownable.transferOwnership",
      "offset": [2011, 2251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4233": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1090"
    },
    "4236": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "4239": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "4240": {
      "fn": "Ownable.transferOwnership",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4247": {
      "op": "SHL"
    },
    "4248": {
      "op": "SUB"
    },
    "4249": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4250": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A1"
    },
    "4253": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "4256": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "4257": {
      "fn": "Ownable.transferOwnership",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "SUB"
    },
    "4266": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4267": {
      "fn": "Ownable.transferOwnership",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "4268": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EA"
    },
    "4271": {
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "4272": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4274": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "4275": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4284": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4285": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4287": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4289": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4290": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4291": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4292": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4293": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4294": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4296": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4297": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4298": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4301": {
      "op": "DUP1"
    },
    "4302": {
      "op": "MLOAD"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "4308": {
      "op": "DUP4"
    },
    "4309": {
      "op": "CODECOPY"
    },
    "4310": {
      "op": "DUP2"
    },
    "4311": {
      "op": "MLOAD"
    },
    "4312": {
      "op": "SWAP2"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4316": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4317": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4318": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4319": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4320": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4321": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4322": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4323": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4324": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "4325": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4327": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4328": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4329": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "4330": {
      "fn": "Ownable.transferOwnership",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4337": {
      "op": "SHL"
    },
    "4338": {
      "op": "SUB"
    },
    "4339": {
      "fn": "Ownable.transferOwnership",
      "offset": [2099, 2121],
      "op": "DUP2",
      "path": "0",
      "statement": 43
    },
    "4340": {
      "branch": 111,
      "fn": "Ownable.transferOwnership",
      "offset": [2099, 2121],
      "op": "AND",
      "path": "0"
    },
    "4341": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "4344": {
      "branch": 111,
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "JUMPI",
      "path": "0"
    },
    "4345": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4347": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MLOAD",
      "path": "0"
    },
    "4348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "4356": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "4357": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4359": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "4360": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "4361": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "4362": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4364": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "4365": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP3",
      "path": "0"
    },
    "4366": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "4367": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SUB",
      "path": "0"
    },
    "4368": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP3",
      "path": "0"
    },
    "4369": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "4370": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "4372": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP2",
      "path": "0"
    },
    "4373": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MSTORE",
      "path": "0"
    },
    "4374": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4376": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "4377": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "4378": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8E"
    },
    "4381": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "4383": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "4384": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "CODECOPY",
      "path": "0"
    },
    "4385": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4387": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "ADD",
      "path": "0"
    },
    "4388": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "4389": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "POP",
      "path": "0"
    },
    "4390": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "POP",
      "path": "0"
    },
    "4391": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4393": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "MLOAD",
      "path": "0"
    },
    "4394": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "DUP1",
      "path": "0"
    },
    "4395": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP2",
      "path": "0"
    },
    "4396": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SUB",
      "path": "0"
    },
    "4397": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "SWAP1",
      "path": "0"
    },
    "4398": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "REVERT",
      "path": "0"
    },
    "4399": {
      "fn": "Ownable.transferOwnership",
      "offset": [2091, 2164],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4400": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x0"
    },
    "4402": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "DUP1",
      "path": "0"
    },
    "4403": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SLOAD",
      "path": "0"
    },
    "4404": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4406": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "MLOAD",
      "path": "0"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4413": {
      "op": "SHL"
    },
    "4414": {
      "op": "SUB"
    },
    "4415": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "DUP1",
      "path": "0"
    },
    "4416": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "DUP6",
      "path": "0"
    },
    "4417": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "AND",
      "path": "0"
    },
    "4418": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "SWAP4",
      "path": "0"
    },
    "4419": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SWAP3",
      "path": "0"
    },
    "4420": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "AND",
      "path": "0"
    },
    "4421": {
      "fn": "Ownable.transferOwnership",
      "offset": [2200, 2206],
      "op": "SWAP2",
      "path": "0"
    },
    "4422": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4455": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "SWAP2",
      "path": "0"
    },
    "4456": {
      "fn": "Ownable.transferOwnership",
      "offset": [2179, 2217],
      "op": "LOG3",
      "path": "0"
    },
    "4457": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2233],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x0"
    },
    "4459": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "DUP1",
      "path": "0"
    },
    "4460": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SLOAD",
      "path": "0"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4467": {
      "op": "SHL"
    },
    "4468": {
      "op": "SUB"
    },
    "4469": {
      "op": "NOT"
    },
    "4470": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "AND",
      "path": "0"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4477": {
      "op": "SHL"
    },
    "4478": {
      "op": "SUB"
    },
    "4479": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP3",
      "path": "0"
    },
    "4480": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "4481": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP3",
      "path": "0"
    },
    "4482": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "AND",
      "path": "0"
    },
    "4483": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP2",
      "path": "0"
    },
    "4484": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "4485": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP2",
      "path": "0"
    },
    "4486": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "OR",
      "path": "0"
    },
    "4487": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SWAP1",
      "path": "0"
    },
    "4488": {
      "fn": "Ownable.transferOwnership",
      "offset": [2227, 2244],
      "op": "SSTORE",
      "path": "0"
    },
    "4489": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [2011, 2251],
      "op": "JUMP",
      "path": "0"
    },
    "4490": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3729, 3876],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4491": {
      "offset": [1308, 1320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1192"
    },
    "4494": {
      "offset": [1308, 1318],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1224"
    },
    "4497": {
      "jump": "i",
      "offset": [1308, 1320],
      "op": "JUMP",
      "path": "0"
    },
    "4498": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1308, 1320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "op": "SUB"
    },
    "4507": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4508": {
      "offset": [1297, 1304],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A3"
    },
    "4511": {
      "offset": [1297, 1302],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "4514": {
      "jump": "i",
      "offset": [1297, 1304],
      "op": "JUMP",
      "path": "0"
    },
    "4515": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1297, 1304],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "op": "SUB"
    },
    "4524": {
      "offset": [1297, 1320],
      "op": "AND",
      "path": "0"
    },
    "4525": {
      "branch": 112,
      "fn": "LpTokenStaker.setMinter",
      "offset": [1297, 1320],
      "op": "EQ",
      "path": "0"
    },
    "4526": {
      "offset": [1289, 1357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EC"
    },
    "4529": {
      "branch": 112,
      "offset": [1289, 1357],
      "op": "JUMPI",
      "path": "0"
    },
    "4530": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4532": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP1",
      "path": "0"
    },
    "4533": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4540": {
      "op": "SHL"
    },
    "4541": {
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4542": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4543": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4545": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4547": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4548": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4549": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4550": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4551": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4552": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4554": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4555": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4556": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "DUP1"
    },
    "4560": {
      "op": "MLOAD"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "4566": {
      "op": "DUP4"
    },
    "4567": {
      "op": "CODECOPY"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "MLOAD"
    },
    "4570": {
      "op": "SWAP2"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4574": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP3",
      "path": "0"
    },
    "4575": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4576": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MSTORE",
      "path": "0"
    },
    "4577": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4578": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "MLOAD",
      "path": "0"
    },
    "4579": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4580": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "DUP2",
      "path": "0"
    },
    "4581": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4582": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SUB",
      "path": "0"
    },
    "4583": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4585": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "ADD",
      "path": "0"
    },
    "4586": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "SWAP1",
      "path": "0"
    },
    "4587": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "REVERT",
      "path": "0"
    },
    "4588": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [1289, 1357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4589": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3805, 3817],
      "op": "PUSH1",
      "path": "11",
      "statement": 46,
      "value": "0x1"
    },
    "4591": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3805, 3817],
      "op": "SLOAD",
      "path": "11"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "op": "SUB"
    },
    "4600": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3805, 3817],
      "op": "AND",
      "path": "11"
    },
    "4601": {
      "branch": 100,
      "fn": "LpTokenStaker.setMinter",
      "offset": [3805, 3830],
      "op": "ISZERO",
      "path": "11"
    },
    "4602": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1202"
    },
    "4605": {
      "branch": 100,
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "JUMPI",
      "path": "11"
    },
    "4606": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4608": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "DUP1",
      "path": "11"
    },
    "4609": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "REVERT",
      "path": "11"
    },
    "4610": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3797, 3831],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4611": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3853],
      "op": "PUSH1",
      "path": "11",
      "statement": 47,
      "value": "0x1"
    },
    "4613": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "DUP1",
      "path": "11"
    },
    "4614": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SLOAD",
      "path": "11"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "op": "NOT"
    },
    "4624": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "AND",
      "path": "11"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP3",
      "path": "11"
    },
    "4634": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP1",
      "path": "11"
    },
    "4635": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP3",
      "path": "11"
    },
    "4636": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "AND",
      "path": "11"
    },
    "4637": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP2",
      "path": "11"
    },
    "4638": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP1",
      "path": "11"
    },
    "4639": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP2",
      "path": "11"
    },
    "4640": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "OR",
      "path": "11"
    },
    "4641": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SWAP1",
      "path": "11"
    },
    "4642": {
      "fn": "LpTokenStaker.setMinter",
      "offset": [3841, 3869],
      "op": "SSTORE",
      "path": "11"
    },
    "4643": {
      "fn": "LpTokenStaker.setMinter",
      "jump": "o",
      "offset": [3729, 3876],
      "op": "JUMP",
      "path": "11"
    },
    "4644": {
      "fn": "Context._msgSender",
      "offset": [598, 702],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4645": {
      "fn": "Context._msgSender",
      "offset": [685, 695],
      "op": "CALLER",
      "path": "6",
      "statement": 48
    },
    "4646": {
      "fn": "Context._msgSender",
      "offset": [598, 702],
      "op": "SWAP1",
      "path": "6"
    },
    "4647": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [598, 702],
      "op": "JUMP",
      "path": "6"
    },
    "4648": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7303, 7912],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4649": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7351, 7379],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4651": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7381, 7396],
      "op": "DUP1",
      "path": "11"
    },
    "4652": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7400, 7417],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1233"
    },
    "4655": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7400, 7415],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14EC"
    },
    "4658": {
      "fn": "LpTokenStaker._massUpdatePools",
      "jump": "i",
      "offset": [7400, 7417],
      "op": "JUMP",
      "path": "11"
    },
    "4659": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7400, 7417],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4660": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7350, 7417],
      "op": "SWAP2",
      "path": "11"
    },
    "4661": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7350, 7417],
      "op": "POP",
      "path": "11"
    },
    "4662": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7350, 7417],
      "op": "SWAP2",
      "path": "11"
    },
    "4663": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7350, 7417],
      "op": "POP",
      "path": "11"
    },
    "4664": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7432, 7443],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4666": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4667": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7455, 7466],
      "op": "DUP3",
      "path": "11"
    },
    "4668": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7455, 7473],
      "op": "MLOAD",
      "path": "11"
    },
    "4669": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7449, 7452],
      "op": "DUP2",
      "path": "11"
    },
    "4670": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7449, 7473],
      "op": "LT",
      "path": "11"
    },
    "4671": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "ISZERO",
      "path": "11"
    },
    "4672": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1269"
    },
    "4675": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "JUMPI",
      "path": "11"
    },
    "4676": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7496, 7539],
      "op": "PUSH2",
      "path": "11",
      "statement": 49,
      "value": "0x1261"
    },
    "4679": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7508, 7511],
      "op": "DUP2",
      "path": "11"
    },
    "4680": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7524],
      "op": "DUP5",
      "path": "11"
    },
    "4681": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7525, 7528],
      "op": "DUP4",
      "path": "11"
    },
    "4682": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "DUP2",
      "path": "11"
    },
    "4683": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "MLOAD",
      "path": "11"
    },
    "4684": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "DUP2",
      "path": "11"
    },
    "4685": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "LT",
      "path": "11"
    },
    "4686": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1253"
    },
    "4689": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "JUMPI",
      "path": "11"
    },
    "4690": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "INVALID",
      "path": "11"
    },
    "4691": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4692": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4694": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "MUL",
      "path": "11"
    },
    "4695": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4697": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "ADD",
      "path": "11"
    },
    "4698": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "ADD",
      "path": "11"
    },
    "4699": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7513, 7529],
      "op": "MLOAD",
      "path": "11"
    },
    "4700": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7531, 7538],
      "op": "DUP5",
      "path": "11"
    },
    "4701": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7496, 7507],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1787"
    },
    "4704": {
      "fn": "LpTokenStaker._massUpdatePools",
      "jump": "i",
      "offset": [7496, 7539],
      "op": "JUMP",
      "path": "11"
    },
    "4705": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7496, 7539],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4706": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7475, 7480],
      "op": "PUSH1",
      "path": "11",
      "statement": 50,
      "value": "0x1"
    },
    "4708": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7475, 7480],
      "op": "ADD",
      "path": "11"
    },
    "4709": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "PUSH2",
      "path": "11",
      "value": "0x123A"
    },
    "4712": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "JUMP",
      "path": "11"
    },
    "4713": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7427, 7550],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4714": {
      "op": "POP"
    },
    "4715": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7576, 7592],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4717": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7576, 7599],
      "op": "SLOAD",
      "path": "11"
    },
    "4718": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7622],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4720": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7622],
      "op": "SLOAD",
      "path": "11"
    },
    "4721": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7626],
      "op": "ISZERO",
      "path": "11"
    },
    "4722": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7626],
      "op": "DUP1",
      "path": "11"
    },
    "4723": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7626],
      "op": "ISZERO",
      "path": "11"
    },
    "4724": {
      "branch": 101,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7626],
      "op": "SWAP1",
      "path": "11"
    },
    "4725": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7640],
      "op": "PUSH2",
      "path": "11",
      "value": "0x127E"
    },
    "4728": {
      "branch": 101,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7640],
      "op": "JUMPI",
      "path": "11"
    },
    "4729": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7640],
      "op": "POP",
      "path": "11"
    },
    "4730": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7639, 7640],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4732": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7630, 7636],
      "op": "DUP2",
      "path": "11"
    },
    "4733": {
      "branch": 102,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7630, 7640],
      "op": "GT",
      "path": "11"
    },
    "4734": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7613, 7640],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4735": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7609, 7906],
      "op": "ISZERO",
      "path": "11"
    },
    "4736": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7609, 7906],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD7"
    },
    "4739": {
      "branch": 102,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7609, 7906],
      "op": "JUMPI",
      "path": "11"
    },
    "4740": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7678],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4742": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7697],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4744": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7705, 7706],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4746": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7698, 7704],
      "op": "DUP4",
      "path": "11"
    },
    "4747": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7698, 7706],
      "op": "SUB",
      "path": "11"
    },
    "4748": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "DUP2",
      "path": "11"
    },
    "4749": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "SLOAD",
      "path": "11"
    },
    "4750": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "DUP2",
      "path": "11"
    },
    "4751": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "LT",
      "path": "11"
    },
    "4752": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1295"
    },
    "4755": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "JUMPI",
      "path": "11"
    },
    "4756": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "INVALID",
      "path": "11"
    },
    "4757": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4758": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4760": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "SWAP2",
      "path": "11"
    },
    "4761": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "DUP3",
      "path": "11"
    },
    "4762": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "MSTORE",
      "path": "11"
    },
    "4763": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4765": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "SWAP2",
      "path": "11"
    },
    "4766": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "DUP3",
      "path": "11"
    },
    "4767": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "SWAP1",
      "path": "11"
    },
    "4768": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "KECCAK256",
      "path": "11"
    },
    "4769": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4771": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP1",
      "path": "11"
    },
    "4772": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "MLOAD",
      "path": "11"
    },
    "4773": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP1",
      "path": "11"
    },
    "4774": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP3",
      "path": "11"
    },
    "4775": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "ADD",
      "path": "11"
    },
    "4776": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP1",
      "path": "11"
    },
    "4777": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP2",
      "path": "11"
    },
    "4778": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "MSTORE",
      "path": "11"
    },
    "4779": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "SWAP2",
      "path": "11"
    },
    "4780": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7681, 7707],
      "op": "ADD",
      "path": "11"
    },
    "4781": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SLOAD",
      "path": "11"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4788": {
      "op": "SHL"
    },
    "4789": {
      "op": "SUB"
    },
    "4790": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP1",
      "path": "11"
    },
    "4791": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP3",
      "path": "11"
    },
    "4792": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "AND",
      "path": "11"
    },
    "4793": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP1",
      "path": "11"
    },
    "4794": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP5",
      "path": "11"
    },
    "4795": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "MSTORE",
      "path": "11"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP1",
      "path": "11"
    },
    "4802": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP3",
      "path": "11"
    },
    "4803": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DIV",
      "path": "11"
    },
    "4804": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "AND",
      "path": "11"
    },
    "4805": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP3",
      "path": "11"
    },
    "4806": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "DUP3",
      "path": "11"
    },
    "4807": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "ADD",
      "path": "11"
    },
    "4808": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP3",
      "path": "11"
    },
    "4809": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP1",
      "path": "11"
    },
    "4810": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP3",
      "path": "11"
    },
    "4811": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "MSTORE",
      "path": "11"
    },
    "4812": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7745, 7754],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4814": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7745, 7754],
      "op": "SLOAD",
      "path": "11"
    },
    "4815": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP1",
      "path": "11"
    },
    "4816": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7656, 7707],
      "op": "SWAP3",
      "path": "11"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7755],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12DC"
    },
    "4821": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7755],
      "op": "SWAP1",
      "path": "11"
    },
    "4822": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7740],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "4823": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7740],
      "op": "SWAP1",
      "path": "11"
    },
    "4824": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7744],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "4827": {
      "fn": "LpTokenStaker._massUpdatePools",
      "jump": "i",
      "offset": [7725, 7755],
      "op": "JUMP",
      "path": "11"
    },
    "4828": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7755],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4829": {
      "branch": 103,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7725, 7775],
      "op": "GT",
      "path": "11"
    },
    "4830": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7721, 7896],
      "op": "ISZERO",
      "path": "11"
    },
    "4831": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7721, 7896],
      "op": "PUSH2",
      "path": "11",
      "value": "0x936"
    },
    "4834": {
      "branch": 103,
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7721, 7896],
      "op": "JUMPI",
      "path": "11"
    },
    "4835": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7822, 7840],
      "op": "PUSH1",
      "path": "11",
      "statement": 51,
      "value": "0x20"
    },
    "4837": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7822, 7840],
      "op": "DUP2",
      "path": "11"
    },
    "4838": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7822, 7840],
      "op": "ADD",
      "path": "11"
    },
    "4839": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7822, 7840],
      "op": "MLOAD",
      "path": "11"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4846": {
      "op": "SHL"
    },
    "4847": {
      "op": "SUB"
    },
    "4848": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7814, 7841],
      "op": "AND",
      "path": "11"
    },
    "4849": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7795, 7811],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4851": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7795, 7841],
      "op": "SSTORE",
      "path": "11"
    },
    "4852": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7875],
      "op": "PUSH1",
      "path": "11",
      "statement": 52,
      "value": "0x4"
    },
    "4854": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP1",
      "path": "11"
    },
    "4855": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SLOAD",
      "path": "11"
    },
    "4856": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP1",
      "path": "11"
    },
    "4857": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12FE"
    },
    "4860": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "JUMPI",
      "path": "11"
    },
    "4861": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "INVALID",
      "path": "11"
    },
    "4862": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4863": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4865": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP3",
      "path": "11"
    },
    "4866": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP2",
      "path": "11"
    },
    "4867": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "MSTORE",
      "path": "11"
    },
    "4868": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4870": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP2",
      "path": "11"
    },
    "4871": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "KECCAK256",
      "path": "11"
    },
    "4872": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP3",
      "path": "11"
    },
    "4873": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "ADD",
      "path": "11"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4876": {
      "op": "NOT"
    },
    "4877": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SWAP1",
      "path": "11"
    },
    "4878": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "DUP2",
      "path": "11"
    },
    "4879": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "ADD",
      "path": "11"
    },
    "4880": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SWAP2",
      "path": "11"
    },
    "4881": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SWAP1",
      "path": "11"
    },
    "4882": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SWAP2",
      "path": "11"
    },
    "4883": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SSTORE",
      "path": "11"
    },
    "4884": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "ADD",
      "path": "11"
    },
    "4885": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SWAP1",
      "path": "11"
    },
    "4886": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7859, 7881],
      "op": "SSTORE",
      "path": "11"
    },
    "4887": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7609, 7906],
      "op": "POP",
      "path": "11"
    },
    "4888": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7303, 7912],
      "op": "POP",
      "path": "11"
    },
    "4889": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7303, 7912],
      "op": "POP",
      "path": "11"
    },
    "4890": {
      "fn": "LpTokenStaker._massUpdatePools",
      "offset": [7303, 7912],
      "op": "POP",
      "path": "11"
    },
    "4891": {
      "fn": "LpTokenStaker._massUpdatePools",
      "jump": "o",
      "offset": [7303, 7912],
      "op": "JUMP",
      "path": "11"
    },
    "4892": {
      "fn": "SafeMath.mul",
      "offset": [3538, 3753],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4893": {
      "fn": "SafeMath.mul",
      "offset": [3596, 3603],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4895": {
      "branch": 115,
      "fn": "SafeMath.mul",
      "offset": [3619, 3625],
      "op": "DUP3",
      "path": "2"
    },
    "4896": {
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "4899": {
      "branch": 115,
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "JUMPI",
      "path": "2"
    },
    "4900": {
      "op": "POP"
    },
    "4901": {
      "fn": "SafeMath.mul",
      "offset": [3634, 3635],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x0"
    },
    "4903": {
      "fn": "SafeMath.mul",
      "offset": [3627, 3635],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD2"
    },
    "4906": {
      "fn": "SafeMath.mul",
      "offset": [3627, 3635],
      "op": "JUMP",
      "path": "2"
    },
    "4907": {
      "fn": "SafeMath.mul",
      "offset": [3615, 3635],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4908": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "2"
    },
    "4909": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "2"
    },
    "4910": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "MUL",
      "path": "2"
    },
    "4911": {
      "fn": "SafeMath.mul",
      "offset": [3661, 3662],
      "op": "DUP3",
      "path": "2"
    },
    "4912": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3658],
      "op": "DUP5",
      "path": "2"
    },
    "4913": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3662],
      "op": "DUP3",
      "path": "2"
    },
    "4914": {
      "fn": "SafeMath.mul",
      "offset": [3657, 3658],
      "op": "DUP2",
      "path": "2"
    },
    "4915": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x1338"
    },
    "4918": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "JUMPI",
      "path": "2"
    },
    "4919": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "INVALID",
      "path": "2"
    },
    "4920": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4921": {
      "fn": "SafeMath.mul",
      "offset": [3680, 3685],
      "op": "DIV",
      "path": "2"
    },
    "4922": {
      "branch": 116,
      "fn": "SafeMath.mul",
      "offset": [3680, 3690],
      "op": "EQ",
      "path": "2"
    },
    "4923": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1375"
    },
    "4926": {
      "branch": 116,
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "JUMPI",
      "path": "2"
    },
    "4927": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4929": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MLOAD",
      "path": "2"
    },
    "4930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4936": {
      "op": "SHL"
    },
    "4937": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "2"
    },
    "4938": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "2"
    },
    "4939": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4941": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "2"
    },
    "4942": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "2"
    },
    "4943": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "2"
    },
    "4944": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4946": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "2"
    },
    "4947": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP3",
      "path": "2"
    },
    "4948": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "2"
    },
    "4949": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SUB",
      "path": "2"
    },
    "4950": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP3",
      "path": "2"
    },
    "4951": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "2"
    },
    "4952": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "4954": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP2",
      "path": "2"
    },
    "4955": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MSTORE",
      "path": "2"
    },
    "4956": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4958": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "2"
    },
    "4959": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "2"
    },
    "4960": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BDA"
    },
    "4963": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "4965": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "2"
    },
    "4966": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "CODECOPY",
      "path": "2"
    },
    "4967": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4969": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "ADD",
      "path": "2"
    },
    "4970": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "2"
    },
    "4971": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "POP",
      "path": "2"
    },
    "4972": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "POP",
      "path": "2"
    },
    "4973": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4975": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "MLOAD",
      "path": "2"
    },
    "4976": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "DUP1",
      "path": "2"
    },
    "4977": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP2",
      "path": "2"
    },
    "4978": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SUB",
      "path": "2"
    },
    "4979": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "SWAP1",
      "path": "2"
    },
    "4980": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "REVERT",
      "path": "2"
    },
    "4981": {
      "fn": "SafeMath.mul",
      "offset": [3672, 3728],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4982": {
      "fn": "SafeMath.mul",
      "offset": [3745, 3746],
      "op": "SWAP4",
      "path": "2",
      "statement": 55
    },
    "4983": {
      "fn": "SafeMath.mul",
      "offset": [3538, 3753],
      "op": "SWAP3",
      "path": "2"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "op": "POP"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [3538, 3753],
      "op": "JUMP",
      "path": "2"
    },
    "4988": {
      "fn": "SafeMath.div",
      "offset": [4217, 4367],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4989": {
      "fn": "SafeMath.div",
      "offset": [4275, 4282],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4991": {
      "fn": "SafeMath.div",
      "offset": [4306, 4307],
      "op": "DUP1",
      "path": "2",
      "statement": 56
    },
    "4992": {
      "fn": "SafeMath.div",
      "offset": [4302, 4303],
      "op": "DUP3",
      "path": "2"
    },
    "4993": {
      "branch": 117,
      "fn": "SafeMath.div",
      "offset": [4302, 4307],
      "op": "GT",
      "path": "2"
    },
    "4994": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D2"
    },
    "4997": {
      "branch": 117,
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "JUMPI",
      "path": "2"
    },
    "4998": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5000": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP1",
      "path": "2"
    },
    "5001": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MLOAD",
      "path": "2"
    },
    "5002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP2",
      "path": "2"
    },
    "5010": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MSTORE",
      "path": "2"
    },
    "5011": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5013": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5015": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP3",
      "path": "2"
    },
    "5016": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "ADD",
      "path": "2"
    },
    "5017": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MSTORE",
      "path": "2"
    },
    "5018": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "5020": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5022": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP3",
      "path": "2"
    },
    "5023": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "ADD",
      "path": "2"
    },
    "5024": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MSTORE",
      "path": "2"
    },
    "5025": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5058": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5060": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP3",
      "path": "2"
    },
    "5061": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "ADD",
      "path": "2"
    },
    "5062": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MSTORE",
      "path": "2"
    },
    "5063": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "SWAP1",
      "path": "2"
    },
    "5064": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "MLOAD",
      "path": "2"
    },
    "5065": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "SWAP1",
      "path": "2"
    },
    "5066": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "DUP2",
      "path": "2"
    },
    "5067": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "SWAP1",
      "path": "2"
    },
    "5068": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "SUB",
      "path": "2"
    },
    "5069": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5071": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "ADD",
      "path": "2"
    },
    "5072": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "SWAP1",
      "path": "2"
    },
    "5073": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "REVERT",
      "path": "2"
    },
    "5074": {
      "fn": "SafeMath.div",
      "offset": [4294, 4338],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5075": {
      "fn": "SafeMath.div",
      "offset": [4359, 4360],
      "op": "DUP2",
      "path": "2",
      "statement": 57
    },
    "5076": {
      "fn": "SafeMath.div",
      "offset": [4355, 4356],
      "op": "DUP4",
      "path": "2"
    },
    "5077": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "DUP2",
      "path": "2"
    },
    "5078": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13DB"
    },
    "5081": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "JUMPI",
      "path": "2"
    },
    "5082": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "INVALID",
      "path": "2"
    },
    "5083": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5084": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "DIV",
      "path": "2"
    },
    "5085": {
      "fn": "SafeMath.div",
      "offset": [4355, 4360],
      "op": "SWAP4",
      "path": "2"
    },
    "5086": {
      "fn": "SafeMath.div",
      "offset": [4217, 4367],
      "op": "SWAP3",
      "path": "2"
    },
    "5087": {
      "op": "POP"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [4217, 4367],
      "op": "JUMP",
      "path": "2"
    },
    "5091": {
      "fn": "SafeMath.sub",
      "offset": [3136, 3291],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5092": {
      "fn": "SafeMath.sub",
      "offset": [3194, 3201],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5094": {
      "fn": "SafeMath.sub",
      "offset": [3226, 3227],
      "op": "DUP3",
      "path": "2",
      "statement": 58
    },
    "5095": {
      "fn": "SafeMath.sub",
      "offset": [3221, 3222],
      "op": "DUP3",
      "path": "2"
    },
    "5096": {
      "fn": "SafeMath.sub",
      "offset": [3221, 3227],
      "op": "GT",
      "path": "2"
    },
    "5097": {
      "branch": 118,
      "fn": "SafeMath.sub",
      "offset": [3221, 3227],
      "op": "ISZERO",
      "path": "2"
    },
    "5098": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143A"
    },
    "5101": {
      "branch": 118,
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "JUMPI",
      "path": "2"
    },
    "5102": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5104": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP1",
      "path": "2"
    },
    "5105": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MLOAD",
      "path": "2"
    },
    "5106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5112": {
      "op": "SHL"
    },
    "5113": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP2",
      "path": "2"
    },
    "5114": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "2"
    },
    "5115": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5117": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5119": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "2"
    },
    "5120": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "2"
    },
    "5121": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "2"
    },
    "5122": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1E"
    },
    "5124": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5126": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "2"
    },
    "5127": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "2"
    },
    "5128": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "2"
    },
    "5129": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5162": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5164": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP3",
      "path": "2"
    },
    "5165": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "2"
    },
    "5166": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MSTORE",
      "path": "2"
    },
    "5167": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "2"
    },
    "5168": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "MLOAD",
      "path": "2"
    },
    "5169": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "2"
    },
    "5170": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "DUP2",
      "path": "2"
    },
    "5171": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "2"
    },
    "5172": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SUB",
      "path": "2"
    },
    "5173": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5175": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "ADD",
      "path": "2"
    },
    "5176": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "SWAP1",
      "path": "2"
    },
    "5177": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "REVERT",
      "path": "2"
    },
    "5178": {
      "fn": "SafeMath.sub",
      "offset": [3213, 3262],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SWAP1",
      "path": "2",
      "statement": 59
    },
    "5181": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SUB",
      "path": "2"
    },
    "5182": {
      "fn": "SafeMath.sub",
      "offset": [3279, 3284],
      "op": "SWAP1",
      "path": "2"
    },
    "5183": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [3136, 3291],
      "op": "JUMP",
      "path": "2"
    },
    "5184": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [704, 879],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5185": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "PUSH1",
      "path": "4",
      "statement": 60,
      "value": "0x40"
    },
    "5187": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP1",
      "path": "4"
    },
    "5188": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MLOAD",
      "path": "4"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP5",
      "path": "4"
    },
    "5198": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "AND",
      "path": "4"
    },
    "5199": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "5201": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP3",
      "path": "4"
    },
    "5202": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "ADD",
      "path": "4"
    },
    "5203": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MSTORE",
      "path": "4"
    },
    "5204": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "5206": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP1",
      "path": "4"
    },
    "5207": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP3",
      "path": "4"
    },
    "5208": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "ADD",
      "path": "4"
    },
    "5209": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP5",
      "path": "4"
    },
    "5210": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP1",
      "path": "4"
    },
    "5211": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MSTORE",
      "path": "4"
    },
    "5212": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP3",
      "path": "4"
    },
    "5213": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MLOAD",
      "path": "4"
    },
    "5214": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP1",
      "path": "4"
    },
    "5215": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP4",
      "path": "4"
    },
    "5216": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SUB",
      "path": "4"
    },
    "5217": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP1",
      "path": "4"
    },
    "5218": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP2",
      "path": "4"
    },
    "5219": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "ADD",
      "path": "4"
    },
    "5220": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP2",
      "path": "4"
    },
    "5221": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MSTORE",
      "path": "4"
    },
    "5222": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "5224": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP1",
      "path": "4"
    },
    "5225": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP2",
      "path": "4"
    },
    "5226": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "ADD",
      "path": "4"
    },
    "5227": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP1",
      "path": "4"
    },
    "5228": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP2",
      "path": "4"
    },
    "5229": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MSTORE",
      "path": "4"
    },
    "5230": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5232": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP2",
      "path": "4"
    },
    "5233": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "ADD",
      "path": "4"
    },
    "5234": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "DUP1",
      "path": "4"
    },
    "5235": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MLOAD",
      "path": "4"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5242": {
      "op": "SHL"
    },
    "5243": {
      "op": "SUB"
    },
    "5244": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "AND",
      "path": "4"
    },
    "5245": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "OR",
      "path": "4"
    },
    "5254": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "SWAP1",
      "path": "4"
    },
    "5255": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 871],
      "op": "MSTORE",
      "path": "4"
    },
    "5256": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [786, 872],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD7"
    },
    "5259": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [786, 872],
      "op": "SWAP1",
      "path": "4"
    },
    "5260": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [806, 811],
      "op": "DUP5",
      "path": "4"
    },
    "5261": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [806, 811],
      "op": "SWAP1",
      "path": "4"
    },
    "5262": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [786, 805],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C0"
    },
    "5265": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [786, 872],
      "op": "JUMP",
      "path": "4"
    },
    "5266": {
      "fn": "SafeMath.add",
      "offset": [2690, 2865],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5267": {
      "fn": "SafeMath.add",
      "offset": [2748, 2755],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5269": {
      "fn": "SafeMath.add",
      "offset": [2779, 2784],
      "op": "DUP3",
      "path": "2"
    },
    "5270": {
      "fn": "SafeMath.add",
      "offset": [2779, 2784],
      "op": "DUP3",
      "path": "2"
    },
    "5271": {
      "fn": "SafeMath.add",
      "offset": [2779, 2784],
      "op": "ADD",
      "path": "2"
    },
    "5272": {
      "fn": "SafeMath.add",
      "offset": [2802, 2808],
      "op": "DUP4",
      "path": "2",
      "statement": 61
    },
    "5273": {
      "fn": "SafeMath.add",
      "offset": [2802, 2808],
      "op": "DUP2",
      "path": "2"
    },
    "5274": {
      "fn": "SafeMath.add",
      "offset": [2802, 2808],
      "op": "LT",
      "path": "2"
    },
    "5275": {
      "branch": 119,
      "fn": "SafeMath.add",
      "offset": [2802, 2808],
      "op": "ISZERO",
      "path": "2"
    },
    "5276": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1375"
    },
    "5279": {
      "branch": 119,
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "JUMPI",
      "path": "2"
    },
    "5280": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5282": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP1",
      "path": "2"
    },
    "5283": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MLOAD",
      "path": "2"
    },
    "5284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5290": {
      "op": "SHL"
    },
    "5291": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP2",
      "path": "2"
    },
    "5292": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MSTORE",
      "path": "2"
    },
    "5293": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5295": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5297": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP3",
      "path": "2"
    },
    "5298": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "ADD",
      "path": "2"
    },
    "5299": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MSTORE",
      "path": "2"
    },
    "5300": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "5302": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5304": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP3",
      "path": "2"
    },
    "5305": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "ADD",
      "path": "2"
    },
    "5306": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MSTORE",
      "path": "2"
    },
    "5307": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5340": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "5342": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP3",
      "path": "2"
    },
    "5343": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "ADD",
      "path": "2"
    },
    "5344": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MSTORE",
      "path": "2"
    },
    "5345": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "SWAP1",
      "path": "2"
    },
    "5346": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "MLOAD",
      "path": "2"
    },
    "5347": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "SWAP1",
      "path": "2"
    },
    "5348": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "DUP2",
      "path": "2"
    },
    "5349": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "SWAP1",
      "path": "2"
    },
    "5350": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "SUB",
      "path": "2"
    },
    "5351": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "5353": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "ADD",
      "path": "2"
    },
    "5354": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "SWAP1",
      "path": "2"
    },
    "5355": {
      "fn": "SafeMath.add",
      "offset": [2794, 2840],
      "op": "REVERT",
      "path": "2"
    },
    "5356": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5195, 6222],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5357": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5245, 5273],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5359": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5275, 5290],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5361": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5381, 5410],
      "op": "DUP1",
      "path": "11"
    },
    "5362": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5427, 5434],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "5364": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5427, 5441],
      "op": "DUP1",
      "path": "11"
    },
    "5365": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5427, 5441],
      "op": "SLOAD",
      "path": "11"
    },
    "5366": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5427, 5441],
      "op": "SWAP1",
      "path": "11"
    },
    "5367": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5427, 5441],
      "op": "POP",
      "path": "11"
    },
    "5368": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH8",
      "path": "11",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5377": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP2",
      "path": "11"
    },
    "5378": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "GT",
      "path": "11"
    },
    "5379": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5380": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ISZERO",
      "path": "11"
    },
    "5381": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH2",
      "path": "11",
      "value": "0x150D"
    },
    "5384": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "JUMPI",
      "path": "11"
    },
    "5385": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5387": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5388": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "REVERT",
      "path": "11"
    },
    "5389": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5390": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "POP",
      "path": "11"
    },
    "5391": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5393": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "MLOAD",
      "path": "11"
    },
    "5394": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "SWAP1",
      "path": "11"
    },
    "5395": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5396": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP3",
      "path": "11"
    },
    "5397": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "MSTORE",
      "path": "11"
    },
    "5398": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5399": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5401": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "MUL",
      "path": "11"
    },
    "5402": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5404": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ADD",
      "path": "11"
    },
    "5405": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP3",
      "path": "11"
    },
    "5406": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ADD",
      "path": "11"
    },
    "5407": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5409": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "MSTORE",
      "path": "11"
    },
    "5410": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5411": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ISZERO",
      "path": "11"
    },
    "5412": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1537"
    },
    "5415": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "JUMPI",
      "path": "11"
    },
    "5416": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP2",
      "path": "11"
    },
    "5417": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5419": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ADD",
      "path": "11"
    },
    "5420": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5422": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP3",
      "path": "11"
    },
    "5423": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "MUL",
      "path": "11"
    },
    "5424": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP1",
      "path": "11"
    },
    "5425": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "5426": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "DUP4",
      "path": "11"
    },
    "5427": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "5428": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "ADD",
      "path": "11"
    },
    "5429": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "SWAP1",
      "path": "11"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5432": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5413, 5442],
      "op": "POP",
      "path": "11"
    },
    "5433": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5381, 5442],
      "op": "SWAP1",
      "path": "11"
    },
    "5434": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5381, 5442],
      "op": "POP",
      "path": "11"
    },
    "5435": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5470, 5479],
      "op": "PUSH4",
      "path": "11",
      "statement": 62,
      "value": "0x5F5E100"
    },
    "5440": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5464],
      "op": "DUP2",
      "path": "11"
    },
    "5441": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5465, 5466],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5443": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "DUP2",
      "path": "11"
    },
    "5444": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "MLOAD",
      "path": "11"
    },
    "5445": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "DUP2",
      "path": "11"
    },
    "5446": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "LT",
      "path": "11"
    },
    "5447": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "PUSH2",
      "path": "11",
      "value": "0x154C"
    },
    "5450": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "JUMPI",
      "path": "11"
    },
    "5451": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "INVALID",
      "path": "11"
    },
    "5452": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5453": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5455": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "SWAP1",
      "path": "11"
    },
    "5456": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "DUP2",
      "path": "11"
    },
    "5457": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "MUL",
      "path": "11"
    },
    "5458": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "SWAP2",
      "path": "11"
    },
    "5459": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "SWAP1",
      "path": "11"
    },
    "5460": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "SWAP2",
      "path": "11"
    },
    "5461": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "ADD",
      "path": "11"
    },
    "5462": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5467],
      "op": "ADD",
      "path": "11"
    },
    "5463": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5452, 5479],
      "op": "MSTORE",
      "path": "11"
    },
    "5464": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5506, 5507],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5466": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5467": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5513, 5520],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "5469": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5513, 5527],
      "op": "SLOAD",
      "path": "11"
    },
    "5470": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5509, 5527],
      "op": "DUP2",
      "path": "11"
    },
    "5471": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5509, 5527],
      "op": "LT",
      "path": "11"
    },
    "5472": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "ISZERO",
      "path": "11"
    },
    "5473": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1607"
    },
    "5476": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "JUMPI",
      "path": "11"
    },
    "5477": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5581],
      "op": "PUSH1",
      "path": "11",
      "statement": 63,
      "value": "0x8"
    },
    "5479": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5582, 5583],
      "op": "DUP2",
      "path": "11"
    },
    "5480": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "DUP2",
      "path": "11"
    },
    "5481": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SLOAD",
      "path": "11"
    },
    "5482": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "DUP2",
      "path": "11"
    },
    "5483": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "LT",
      "path": "11"
    },
    "5484": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1571"
    },
    "5487": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "JUMPI",
      "path": "11"
    },
    "5488": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "INVALID",
      "path": "11"
    },
    "5489": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5490": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5492": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP2",
      "path": "11"
    },
    "5493": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "DUP3",
      "path": "11"
    },
    "5494": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "MSTORE",
      "path": "11"
    },
    "5495": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5497": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP2",
      "path": "11"
    },
    "5498": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "DUP3",
      "path": "11"
    },
    "5499": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP1",
      "path": "11"
    },
    "5500": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "KECCAK256",
      "path": "11"
    },
    "5501": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "ADD",
      "path": "11"
    },
    "5502": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SLOAD",
      "path": "11"
    },
    "5503": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5505": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5506": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "MLOAD",
      "path": "11"
    },
    "5507": {
      "op": "PUSH4",
      "value": "0x50D25BCD"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP2",
      "path": "11"
    },
    "5516": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "MSTORE",
      "path": "11"
    },
    "5517": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "SWAP1",
      "path": "11"
    },
    "5518": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "MLOAD",
      "path": "11"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "SUB"
    },
    "5527": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP1",
      "path": "11"
    },
    "5528": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP3",
      "path": "11"
    },
    "5529": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "AND",
      "path": "11"
    },
    "5530": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "SWAP3",
      "path": "11"
    },
    "5531": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5597],
      "op": "PUSH4",
      "path": "11",
      "value": "0x50D25BCD"
    },
    "5536": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5597],
      "op": "SWAP3",
      "path": "11"
    },
    "5537": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5539": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5540": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP5",
      "path": "11"
    },
    "5541": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ADD",
      "path": "11"
    },
    "5542": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "SWAP4",
      "path": "11"
    },
    "5543": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP3",
      "path": "11"
    },
    "5544": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "SWAP1",
      "path": "11"
    },
    "5545": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "SUB",
      "path": "11"
    },
    "5546": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ADD",
      "path": "11"
    },
    "5547": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP2",
      "path": "11"
    },
    "5548": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5584],
      "op": "DUP7",
      "path": "11"
    },
    "5549": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5550": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "5551": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ISZERO",
      "path": "11"
    },
    "5552": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5553": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ISZERO",
      "path": "11"
    },
    "5554": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15BA"
    },
    "5557": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPI",
      "path": "11"
    },
    "5558": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5560": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5561": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "REVERT",
      "path": "11"
    },
    "5562": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5563": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "POP",
      "path": "11"
    },
    "5564": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "GAS",
      "path": "11"
    },
    "5565": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "STATICCALL",
      "path": "11"
    },
    "5566": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ISZERO",
      "path": "11"
    },
    "5567": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5568": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ISZERO",
      "path": "11"
    },
    "5569": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15CE"
    },
    "5572": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPI",
      "path": "11"
    },
    "5573": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5574": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5576": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5577": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5578": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5579": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5581": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "REVERT",
      "path": "11"
    },
    "5582": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5583": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "POP",
      "path": "11"
    },
    "5584": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "POP",
      "path": "11"
    },
    "5585": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "POP",
      "path": "11"
    },
    "5586": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "POP",
      "path": "11"
    },
    "5587": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5589": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "MLOAD",
      "path": "11"
    },
    "5590": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5591": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5593": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP2",
      "path": "11"
    },
    "5594": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "LT",
      "path": "11"
    },
    "5595": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "ISZERO",
      "path": "11"
    },
    "5596": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E4"
    },
    "5599": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPI",
      "path": "11"
    },
    "5600": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5602": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "DUP1",
      "path": "11"
    },
    "5603": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "REVERT",
      "path": "11"
    },
    "5604": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5605": {
      "op": "POP"
    },
    "5606": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5574, 5599],
      "op": "MLOAD",
      "path": "11"
    },
    "5607": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "DUP3",
      "path": "11"
    },
    "5608": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "MLOAD",
      "path": "11"
    },
    "5609": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5560],
      "op": "DUP4",
      "path": "11"
    },
    "5610": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5560],
      "op": "SWAP1",
      "path": "11"
    },
    "5611": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5561, 5562],
      "op": "DUP4",
      "path": "11"
    },
    "5612": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5561, 5562],
      "op": "SWAP1",
      "path": "11"
    },
    "5613": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "DUP2",
      "path": "11"
    },
    "5614": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "LT",
      "path": "11"
    },
    "5615": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15F4"
    },
    "5618": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "JUMPI",
      "path": "11"
    },
    "5619": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "INVALID",
      "path": "11"
    },
    "5620": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5621": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5623": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "SWAP1",
      "path": "11"
    },
    "5624": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "DUP2",
      "path": "11"
    },
    "5625": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "MUL",
      "path": "11"
    },
    "5626": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "SWAP2",
      "path": "11"
    },
    "5627": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "SWAP1",
      "path": "11"
    },
    "5628": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "SWAP2",
      "path": "11"
    },
    "5629": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "ADD",
      "path": "11"
    },
    "5630": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5563],
      "op": "ADD",
      "path": "11"
    },
    "5631": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5548, 5600],
      "op": "MSTORE",
      "path": "11"
    },
    "5632": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5529, 5532],
      "op": "PUSH1",
      "path": "11",
      "statement": 64,
      "value": "0x1"
    },
    "5634": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5529, 5532],
      "op": "ADD",
      "path": "11"
    },
    "5635": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155A"
    },
    "5638": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "JUMP",
      "path": "11"
    },
    "5639": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5489, 5611],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5720, 5728],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5643": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5720, 5735],
      "op": "SLOAD",
      "path": "11"
    },
    "5644": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5720, 5735],
      "op": "DUP1",
      "path": "11"
    },
    "5645": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH8",
      "path": "11",
      "statement": 65,
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5654": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP2",
      "path": "11"
    },
    "5655": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "GT",
      "path": "11"
    },
    "5656": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5657": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ISZERO",
      "path": "11"
    },
    "5658": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1622"
    },
    "5661": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "JUMPI",
      "path": "11"
    },
    "5662": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5664": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5665": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "REVERT",
      "path": "11"
    },
    "5666": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5667": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "POP",
      "path": "11"
    },
    "5668": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5670": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "MLOAD",
      "path": "11"
    },
    "5671": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "SWAP1",
      "path": "11"
    },
    "5672": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5673": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP3",
      "path": "11"
    },
    "5674": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "MSTORE",
      "path": "11"
    },
    "5675": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5676": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5678": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "MUL",
      "path": "11"
    },
    "5679": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5681": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ADD",
      "path": "11"
    },
    "5682": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP3",
      "path": "11"
    },
    "5683": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ADD",
      "path": "11"
    },
    "5684": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5686": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "MSTORE",
      "path": "11"
    },
    "5687": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5688": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ISZERO",
      "path": "11"
    },
    "5689": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH2",
      "path": "11",
      "value": "0x164C"
    },
    "5692": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "JUMPI",
      "path": "11"
    },
    "5693": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP2",
      "path": "11"
    },
    "5694": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5696": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ADD",
      "path": "11"
    },
    "5697": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5699": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP3",
      "path": "11"
    },
    "5700": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "MUL",
      "path": "11"
    },
    "5701": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP1",
      "path": "11"
    },
    "5702": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "5703": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "DUP4",
      "path": "11"
    },
    "5704": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "5705": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "ADD",
      "path": "11"
    },
    "5706": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "SWAP1",
      "path": "11"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5759, 5780],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5745, 5780],
      "op": "SWAP4",
      "path": "11"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5809, 5810],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5714": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5715": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5818, 5824],
      "op": "DUP2",
      "path": "11"
    },
    "5716": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5812, 5815],
      "op": "DUP2",
      "path": "11"
    },
    "5717": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5812, 5824],
      "op": "LT",
      "path": "11"
    },
    "5718": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "ISZERO",
      "path": "11"
    },
    "5719": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F0"
    },
    "5722": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "JUMPI",
      "path": "11"
    },
    "5723": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5847, 5868],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5725": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5879],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5727": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5880, 5883],
      "op": "DUP3",
      "path": "11"
    },
    "5728": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "DUP2",
      "path": "11"
    },
    "5729": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "SLOAD",
      "path": "11"
    },
    "5730": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "DUP2",
      "path": "11"
    },
    "5731": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "LT",
      "path": "11"
    },
    "5732": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1669"
    },
    "5735": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "JUMPI",
      "path": "11"
    },
    "5736": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "INVALID",
      "path": "11"
    },
    "5737": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5738": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "SWAP1",
      "path": "11"
    },
    "5739": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5741": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "MSTORE",
      "path": "11"
    },
    "5742": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5744": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5746": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "KECCAK256",
      "path": "11"
    },
    "5747": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "SWAP1",
      "path": "11"
    },
    "5748": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5750": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "MUL",
      "path": "11"
    },
    "5751": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5871, 5884],
      "op": "ADD",
      "path": "11"
    },
    "5752": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5847, 5884],
      "op": "SWAP1",
      "path": "11"
    },
    "5753": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5847, 5884],
      "op": "POP",
      "path": "11"
    },
    "5754": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "PUSH2",
      "path": "11",
      "statement": 66,
      "value": "0x16A7"
    },
    "5757": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5949],
      "op": "DUP5",
      "path": "11"
    },
    "5758": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5950, 5954],
      "op": "DUP3",
      "path": "11"
    },
    "5759": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5950, 5966],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5761": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5950, 5966],
      "op": "ADD",
      "path": "11"
    },
    "5762": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5950, 5966],
      "op": "SLOAD",
      "path": "11"
    },
    "5763": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "DUP2",
      "path": "11"
    },
    "5764": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "MLOAD",
      "path": "11"
    },
    "5765": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "DUP2",
      "path": "11"
    },
    "5766": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "LT",
      "path": "11"
    },
    "5767": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "PUSH2",
      "path": "11",
      "value": "0x168C"
    },
    "5770": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "JUMPI",
      "path": "11"
    },
    "5771": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "INVALID",
      "path": "11"
    },
    "5772": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5773": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5775": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "MUL",
      "path": "11"
    },
    "5776": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5778": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "ADD",
      "path": "11"
    },
    "5779": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "ADD",
      "path": "11"
    },
    "5780": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5937, 5967],
      "op": "MLOAD",
      "path": "11"
    },
    "5781": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5921],
      "op": "DUP3",
      "path": "11"
    },
    "5782": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5932],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5784": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5932],
      "op": "ADD",
      "path": "11"
    },
    "5785": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5932],
      "op": "SLOAD",
      "path": "11"
    },
    "5786": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5936],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "5789": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5936],
      "op": "SWAP1",
      "path": "11"
    },
    "5790": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "SWAP2",
      "path": "11"
    },
    "5791": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "SWAP1",
      "path": "11"
    },
    "5792": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "5797": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "AND",
      "path": "11"
    },
    "5798": {
      "fn": "LpTokenStaker._getAllocPoints",
      "jump": "i",
      "offset": [5917, 5968],
      "op": "JUMP",
      "path": "11"
    },
    "5799": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5917, 5968],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5800": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5909],
      "op": "DUP7",
      "path": "11"
    },
    "5801": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5910, 5913],
      "op": "DUP4",
      "path": "11"
    },
    "5802": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "DUP2",
      "path": "11"
    },
    "5803": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "MLOAD",
      "path": "11"
    },
    "5804": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "DUP2",
      "path": "11"
    },
    "5805": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "LT",
      "path": "11"
    },
    "5806": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16B3"
    },
    "5809": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "JUMPI",
      "path": "11"
    },
    "5810": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "INVALID",
      "path": "11"
    },
    "5811": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5812": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5814": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "MUL",
      "path": "11"
    },
    "5815": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5817": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "ADD",
      "path": "11"
    },
    "5818": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5914],
      "op": "ADD",
      "path": "11"
    },
    "5819": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5968],
      "op": "DUP2",
      "path": "11"
    },
    "5820": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5968],
      "op": "DUP2",
      "path": "11"
    },
    "5821": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5968],
      "op": "MSTORE",
      "path": "11"
    },
    "5822": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5968],
      "op": "POP",
      "path": "11"
    },
    "5823": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5898, 5968],
      "op": "POP",
      "path": "11"
    },
    "5824": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "PUSH2",
      "path": "11",
      "statement": 67,
      "value": "0x16E5"
    },
    "5827": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6015],
      "op": "DUP7",
      "path": "11"
    },
    "5828": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6016, 6019],
      "op": "DUP4",
      "path": "11"
    },
    "5829": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "DUP2",
      "path": "11"
    },
    "5830": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "MLOAD",
      "path": "11"
    },
    "5831": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "DUP2",
      "path": "11"
    },
    "5832": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "LT",
      "path": "11"
    },
    "5833": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16CE"
    },
    "5836": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "JUMPI",
      "path": "11"
    },
    "5837": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "INVALID",
      "path": "11"
    },
    "5838": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5839": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5841": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "MUL",
      "path": "11"
    },
    "5842": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5844": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "ADD",
      "path": "11"
    },
    "5845": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "ADD",
      "path": "11"
    },
    "5846": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6004, 6020],
      "op": "MLOAD",
      "path": "11"
    },
    "5847": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 5999],
      "op": "DUP7",
      "path": "11"
    },
    "5848": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6003],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "5851": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6003],
      "op": "SWAP1",
      "path": "11"
    },
    "5852": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "SWAP2",
      "path": "11"
    },
    "5853": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "SWAP1",
      "path": "11"
    },
    "5854": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "5859": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "AND",
      "path": "11"
    },
    "5860": {
      "fn": "LpTokenStaker._getAllocPoints",
      "jump": "i",
      "offset": [5992, 6021],
      "op": "JUMP",
      "path": "11"
    },
    "5861": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5992, 6021],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5862": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5982, 6021],
      "op": "SWAP5",
      "path": "11"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5826, 5831],
      "op": "PUSH1",
      "path": "11",
      "statement": 68,
      "value": "0x1"
    },
    "5867": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5826, 5831],
      "op": "ADD",
      "path": "11"
    },
    "5868": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1652"
    },
    "5871": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "JUMP",
      "path": "11"
    },
    "5872": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5790, 6032],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5873": {
      "op": "POP"
    },
    "5874": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6110, 6134],
      "op": "PUSH2",
      "path": "11",
      "statement": 69,
      "value": "0x1701"
    },
    "5877": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6131, 6133],
      "op": "PUSH1",
      "path": "11",
      "value": "0x50"
    },
    "5879": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6110, 6126],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "5882": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6110, 6117],
      "op": "DUP6",
      "path": "11"
    },
    "5883": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6122, 6125],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "5885": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6110, 6121],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "5888": {
      "fn": "LpTokenStaker._getAllocPoints",
      "jump": "i",
      "offset": [6110, 6126],
      "op": "JUMP",
      "path": "11"
    },
    "5889": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6110, 6134],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5890": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6100, 6134],
      "op": "SWAP3",
      "path": "11"
    },
    "5891": {
      "op": "POP"
    },
    "5892": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6161, 6175],
      "op": "PUSH2",
      "path": "11",
      "statement": 70,
      "value": "0x170E"
    },
    "5895": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6100, 6134],
      "op": "DUP4",
      "path": "11"
    },
    "5896": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6173, 6174],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5898": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6161, 6172],
      "op": "PUSH2",
      "path": "11",
      "value": "0x137C"
    },
    "5901": {
      "fn": "LpTokenStaker._getAllocPoints",
      "jump": "i",
      "offset": [6161, 6175],
      "op": "JUMP",
      "path": "11"
    },
    "5902": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6161, 6175],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5903": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6155],
      "op": "DUP5",
      "path": "11"
    },
    "5904": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6156, 6157],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5906": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "DUP2",
      "path": "11"
    },
    "5907": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "MLOAD",
      "path": "11"
    },
    "5908": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "DUP2",
      "path": "11"
    },
    "5909": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "LT",
      "path": "11"
    },
    "5910": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "PUSH2",
      "path": "11",
      "value": "0x171B"
    },
    "5913": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "JUMPI",
      "path": "11"
    },
    "5914": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "INVALID",
      "path": "11"
    },
    "5915": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5916": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5918": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "MUL",
      "path": "11"
    },
    "5919": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5921": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "ADD",
      "path": "11"
    },
    "5922": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6158],
      "op": "ADD",
      "path": "11"
    },
    "5923": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6175],
      "op": "DUP2",
      "path": "11"
    },
    "5924": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6175],
      "op": "DUP2",
      "path": "11"
    },
    "5925": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6175],
      "op": "MSTORE",
      "path": "11"
    },
    "5926": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6175],
      "op": "POP",
      "path": "11"
    },
    "5927": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6144, 6175],
      "op": "POP",
      "path": "11"
    },
    "5928": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6186, 6215],
      "op": "POP",
      "path": "11",
      "statement": 71
    },
    "5929": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [6186, 6215],
      "op": "POP",
      "path": "11"
    },
    "5930": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5195, 6222],
      "op": "SWAP1",
      "path": "11"
    },
    "5931": {
      "fn": "LpTokenStaker._getAllocPoints",
      "offset": [5195, 6222],
      "op": "SWAP2",
      "path": "11"
    },
    "5932": {
      "fn": "LpTokenStaker._getAllocPoints",
      "jump": "o",
      "offset": [5195, 6222],
      "op": "JUMP",
      "path": "11"
    },
    "5933": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [885, 1088],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5934": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "statement": 72,
      "value": "0x40"
    },
    "5936": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP1",
      "path": "4"
    },
    "5937": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MLOAD",
      "path": "4"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5944": {
      "op": "SHL"
    },
    "5945": {
      "op": "SUB"
    },
    "5946": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP1",
      "path": "4"
    },
    "5947": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP7",
      "path": "4"
    },
    "5948": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "AND",
      "path": "4"
    },
    "5949": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "5951": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP4",
      "path": "4"
    },
    "5952": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5953": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "5954": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP5",
      "path": "4"
    },
    "5955": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "AND",
      "path": "4"
    },
    "5956": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "5958": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP3",
      "path": "4"
    },
    "5959": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5960": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "5961": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "5963": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP1",
      "path": "4"
    },
    "5964": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP3",
      "path": "4"
    },
    "5965": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5966": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP5",
      "path": "4"
    },
    "5967": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP1",
      "path": "4"
    },
    "5968": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "5969": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP3",
      "path": "4"
    },
    "5970": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MLOAD",
      "path": "4"
    },
    "5971": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP1",
      "path": "4"
    },
    "5972": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP4",
      "path": "4"
    },
    "5973": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SUB",
      "path": "4"
    },
    "5974": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP1",
      "path": "4"
    },
    "5975": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP2",
      "path": "4"
    },
    "5976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5977": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP2",
      "path": "4"
    },
    "5978": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "5979": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "5981": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP1",
      "path": "4"
    },
    "5982": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP2",
      "path": "4"
    },
    "5983": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5984": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP1",
      "path": "4"
    },
    "5985": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP2",
      "path": "4"
    },
    "5986": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "5987": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5989": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP2",
      "path": "4"
    },
    "5990": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "ADD",
      "path": "4"
    },
    "5991": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "DUP1",
      "path": "4"
    },
    "5992": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MLOAD",
      "path": "4"
    },
    "5993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5999": {
      "op": "SHL"
    },
    "6000": {
      "op": "SUB"
    },
    "6001": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "AND",
      "path": "4"
    },
    "6002": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "OR",
      "path": "4"
    },
    "6011": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "SWAP1",
      "path": "4"
    },
    "6012": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1012, 1080],
      "op": "MSTORE",
      "path": "4"
    },
    "6013": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [985, 1081],
      "op": "PUSH2",
      "path": "4",
      "value": "0x936"
    },
    "6016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [985, 1081],
      "op": "SWAP1",
      "path": "4"
    },
    "6017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1005, 1010],
      "op": "DUP6",
      "path": "4"
    },
    "6018": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1005, 1010],
      "op": "SWAP1",
      "path": "4"
    },
    "6019": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [985, 1004],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C0"
    },
    "6022": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [985, 1081],
      "op": "JUMP",
      "path": "4"
    },
    "6023": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [7985, 8721],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6024": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8086, 8107],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6026": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8118],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "6028": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8119, 8123],
      "op": "DUP5",
      "path": "11"
    },
    "6029": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "DUP2",
      "path": "11"
    },
    "6030": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "SLOAD",
      "path": "11"
    },
    "6031": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "DUP2",
      "path": "11"
    },
    "6032": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "LT",
      "path": "11"
    },
    "6033": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1796"
    },
    "6036": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "JUMPI",
      "path": "11"
    },
    "6037": {
      "dev": "Index out of range",
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "INVALID",
      "path": "11"
    },
    "6038": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6039": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "SWAP1",
      "path": "11"
    },
    "6040": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6042": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "MSTORE",
      "path": "11"
    },
    "6043": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6045": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6047": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "KECCAK256",
      "path": "11"
    },
    "6048": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "SWAP1",
      "path": "11"
    },
    "6049": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "6051": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "MUL",
      "path": "11"
    },
    "6052": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8110, 8124],
      "op": "ADD",
      "path": "11"
    },
    "6053": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8086, 8124],
      "op": "SWAP1",
      "path": "11"
    },
    "6054": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8086, 8124],
      "op": "POP",
      "path": "11"
    },
    "6055": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8157, 8161],
      "op": "DUP1",
      "path": "11"
    },
    "6056": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8157, 8176],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "6058": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8157, 8176],
      "op": "ADD",
      "path": "11"
    },
    "6059": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8157, 8176],
      "op": "SLOAD",
      "path": "11"
    },
    "6060": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8138, 8153],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "6061": {
      "branch": 104,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8138, 8176],
      "op": "GT",
      "path": "11"
    },
    "6062": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8134, 8209],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17B7"
    },
    "6065": {
      "branch": 104,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8134, 8209],
      "op": "JUMPI",
      "path": "11"
    },
    "6066": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8192, 8199],
      "op": "POP",
      "path": "11",
      "statement": 73
    },
    "6067": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8192, 8199],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD7"
    },
    "6070": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8192, 8199],
      "op": "JUMP",
      "path": "11"
    },
    "6071": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8134, 8209],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6072": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8249],
      "op": "DUP1",
      "path": "11"
    },
    "6073": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8249],
      "op": "SLOAD",
      "path": "11"
    },
    "6074": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6076": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6077": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MLOAD",
      "path": "11"
    },
    "6078": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP2",
      "path": "11"
    },
    "6087": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MSTORE",
      "path": "11"
    },
    "6088": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8268, 8272],
      "op": "ADDRESS",
      "path": "11"
    },
    "6089": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6091": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP3",
      "path": "11"
    },
    "6092": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ADD",
      "path": "11"
    },
    "6093": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MSTORE",
      "path": "11"
    },
    "6094": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP1",
      "path": "11"
    },
    "6095": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MLOAD",
      "path": "11"
    },
    "6096": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8218, 8234],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6098": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8218, 8234],
      "op": "SWAP3",
      "path": "11"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6105": {
      "op": "SHL"
    },
    "6106": {
      "op": "SUB"
    },
    "6107": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8249],
      "op": "AND",
      "path": "11"
    },
    "6108": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8249],
      "op": "SWAP2",
      "path": "11"
    },
    "6109": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8259],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6114": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8259],
      "op": "SWAP2",
      "path": "11"
    },
    "6115": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "6117": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6118": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP4",
      "path": "11"
    },
    "6119": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ADD",
      "path": "11"
    },
    "6120": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP3",
      "path": "11"
    },
    "6121": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6123": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP3",
      "path": "11"
    },
    "6124": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP2",
      "path": "11"
    },
    "6125": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP1",
      "path": "11"
    },
    "6126": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP3",
      "path": "11"
    },
    "6127": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP1",
      "path": "11"
    },
    "6128": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SUB",
      "path": "11"
    },
    "6129": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ADD",
      "path": "11"
    },
    "6130": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP2",
      "path": "11"
    },
    "6131": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8249],
      "op": "DUP7",
      "path": "11"
    },
    "6132": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6133": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6134": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ISZERO",
      "path": "11"
    },
    "6135": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6136": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ISZERO",
      "path": "11"
    },
    "6137": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1801"
    },
    "6140": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPI",
      "path": "11"
    },
    "6141": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6143": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6144": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "REVERT",
      "path": "11"
    },
    "6145": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6146": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "POP",
      "path": "11"
    },
    "6147": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "GAS",
      "path": "11"
    },
    "6148": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "STATICCALL",
      "path": "11"
    },
    "6149": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ISZERO",
      "path": "11"
    },
    "6150": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6151": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ISZERO",
      "path": "11"
    },
    "6152": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1815"
    },
    "6155": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPI",
      "path": "11"
    },
    "6156": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6157": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6159": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6160": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6161": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6162": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6164": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "REVERT",
      "path": "11"
    },
    "6165": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6166": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "POP",
      "path": "11"
    },
    "6167": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "POP",
      "path": "11"
    },
    "6168": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "POP",
      "path": "11"
    },
    "6169": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "POP",
      "path": "11"
    },
    "6170": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6172": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MLOAD",
      "path": "11"
    },
    "6173": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6174": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6176": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP2",
      "path": "11"
    },
    "6177": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "LT",
      "path": "11"
    },
    "6178": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "ISZERO",
      "path": "11"
    },
    "6179": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH2",
      "path": "11",
      "value": "0x182B"
    },
    "6182": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPI",
      "path": "11"
    },
    "6183": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6185": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "DUP1",
      "path": "11"
    },
    "6186": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "REVERT",
      "path": "11"
    },
    "6187": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6188": {
      "op": "POP"
    },
    "6189": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "MLOAD",
      "path": "11"
    },
    "6190": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8237, 8274],
      "op": "SWAP1",
      "path": "11"
    },
    "6191": {
      "op": "POP"
    },
    "6192": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8301],
      "op": "DUP1",
      "path": "11"
    },
    "6193": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8301],
      "op": "ISZERO",
      "path": "11"
    },
    "6194": {
      "branch": 105,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8301],
      "op": "DUP1",
      "path": "11"
    },
    "6195": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8326],
      "op": "PUSH2",
      "path": "11",
      "value": "0x183A"
    },
    "6198": {
      "branch": 105,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8326],
      "op": "JUMPI",
      "path": "11"
    },
    "6199": {
      "op": "POP"
    },
    "6200": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8305, 8326],
      "op": "DUP3",
      "path": "11"
    },
    "6201": {
      "branch": 106,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8305, 8326],
      "op": "ISZERO",
      "path": "11"
    },
    "6202": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8288, 8326],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6203": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8284, 8410],
      "op": "ISZERO",
      "path": "11"
    },
    "6204": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8284, 8410],
      "op": "PUSH2",
      "path": "11",
      "value": "0x184C"
    },
    "6207": {
      "branch": 106,
      "fn": "LpTokenStaker._updatePool",
      "offset": [8284, 8410],
      "op": "JUMPI",
      "path": "11"
    },
    "6208": {
      "op": "POP"
    },
    "6209": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8364, 8379],
      "op": "TIMESTAMP",
      "path": "11",
      "statement": 74
    },
    "6210": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8342, 8361],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "6212": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8342, 8361],
      "op": "SWAP1",
      "path": "11"
    },
    "6213": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8342, 8361],
      "op": "SWAP2",
      "path": "11"
    },
    "6214": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8342, 8361],
      "op": "ADD",
      "path": "11"
    },
    "6215": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8342, 8379],
      "op": "SSTORE",
      "path": "11"
    },
    "6216": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8393, 8400],
      "op": "PUSH2",
      "path": "11",
      "statement": 75,
      "value": "0xAD7"
    },
    "6219": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8393, 8400],
      "op": "JUMP",
      "path": "11"
    },
    "6220": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8284, 8410],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6221": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8419, 8435],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6223": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1865"
    },
    "6226": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8458, 8462],
      "op": "DUP4",
      "path": "11"
    },
    "6227": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8458, 8477],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "6229": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8458, 8477],
      "op": "ADD",
      "path": "11"
    },
    "6230": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8458, 8477],
      "op": "SLOAD",
      "path": "11"
    },
    "6231": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8453],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "6232": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8457],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E3"
    },
    "6235": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8457],
      "op": "SWAP1",
      "path": "11"
    },
    "6236": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "SWAP2",
      "path": "11"
    },
    "6237": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "SWAP1",
      "path": "11"
    },
    "6238": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "6243": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "AND",
      "path": "11"
    },
    "6244": {
      "fn": "LpTokenStaker._updatePool",
      "jump": "i",
      "offset": [8438, 8478],
      "op": "JUMP",
      "path": "11"
    },
    "6245": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8438, 8478],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6246": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8419, 8478],
      "op": "SWAP1",
      "path": "11"
    },
    "6247": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8419, 8478],
      "op": "POP",
      "path": "11"
    },
    "6248": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8488, 8502],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6250": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8574],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1886"
    },
    "6253": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8557, 8573],
      "op": "DUP6",
      "path": "11"
    },
    "6254": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8552],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "6257": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8540, 8551],
      "op": "DUP9",
      "path": "11"
    },
    "6258": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8535],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD7E"
    },
    "6261": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8518, 8534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "6263": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8518, 8534],
      "op": "SLOAD",
      "path": "11"
    },
    "6264": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8513],
      "op": "DUP8",
      "path": "11"
    },
    "6265": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8517],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "6268": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8517],
      "op": "SWAP1",
      "path": "11"
    },
    "6269": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8535],
      "op": "SWAP2",
      "path": "11"
    },
    "6270": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8535],
      "op": "SWAP1",
      "path": "11"
    },
    "6271": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8535],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "6276": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8535],
      "op": "AND",
      "path": "11"
    },
    "6277": {
      "fn": "LpTokenStaker._updatePool",
      "jump": "i",
      "offset": [8505, 8535],
      "op": "JUMP",
      "path": "11"
    },
    "6278": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8505, 8574],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6279": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8488, 8574],
      "op": "SWAP1",
      "path": "11"
    },
    "6280": {
      "op": "POP"
    },
    "6281": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8667],
      "op": "PUSH2",
      "path": "11",
      "statement": 76,
      "value": "0x18A9"
    },
    "6284": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8636, 8666],
      "op": "PUSH2",
      "path": "11",
      "value": "0x189E"
    },
    "6287": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8657, 8665],
      "op": "DUP5",
      "path": "11"
    },
    "6288": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8636, 8652],
      "op": "PUSH2",
      "path": "11",
      "value": "0x721"
    },
    "6291": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8488, 8574],
      "op": "DUP5",
      "path": "11"
    },
    "6292": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8647, 8651],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "6298": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8636, 8646],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131C"
    },
    "6301": {
      "fn": "LpTokenStaker._updatePool",
      "jump": "i",
      "offset": [8636, 8652],
      "op": "JUMP",
      "path": "11"
    },
    "6302": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8636, 8666],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6303": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8631],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6305": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8631],
      "op": "DUP7",
      "path": "11"
    },
    "6306": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8631],
      "op": "ADD",
      "path": "11"
    },
    "6307": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8631],
      "op": "SLOAD",
      "path": "11"
    },
    "6308": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8631],
      "op": "SWAP1",
      "path": "11"
    },
    "6309": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8635],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1492"
    },
    "6312": {
      "fn": "LpTokenStaker._updatePool",
      "jump": "i",
      "offset": [8609, 8667],
      "op": "JUMP",
      "path": "11"
    },
    "6313": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8609, 8667],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6314": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8584, 8606],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6316": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8584, 8606],
      "op": "DUP6",
      "path": "11"
    },
    "6317": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8584, 8606],
      "op": "ADD",
      "path": "11"
    },
    "6318": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8584, 8667],
      "op": "SSTORE",
      "path": "11"
    },
    "6319": {
      "op": "POP"
    },
    "6320": {
      "op": "POP"
    },
    "6321": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8699, 8714],
      "op": "TIMESTAMP",
      "path": "11",
      "statement": 77
    },
    "6322": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8696],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "6324": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8696],
      "op": "SWAP1",
      "path": "11"
    },
    "6325": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8696],
      "op": "SWAP3",
      "path": "11"
    },
    "6326": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8696],
      "op": "ADD",
      "path": "11"
    },
    "6327": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8714],
      "op": "SWAP2",
      "path": "11"
    },
    "6328": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8714],
      "op": "SWAP1",
      "path": "11"
    },
    "6329": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8714],
      "op": "SWAP2",
      "path": "11"
    },
    "6330": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [8677, 8714],
      "op": "SSTORE",
      "path": "11"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [7985, 8721],
      "op": "POP",
      "path": "11"
    },
    "6333": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [7985, 8721],
      "op": "POP",
      "path": "11"
    },
    "6334": {
      "fn": "LpTokenStaker._updatePool",
      "offset": [7985, 8721],
      "op": "POP",
      "path": "11"
    },
    "6335": {
      "fn": "LpTokenStaker._updatePool",
      "jump": "o",
      "offset": [7985, 8721],
      "op": "JUMP",
      "path": "11"
    },
    "6336": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [2967, 3718],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6337": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3409],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1915"
    },
    "6342": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3440, 3444],
      "op": "DUP3",
      "path": "4"
    },
    "6343": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MLOAD",
      "path": "4"
    },
    "6346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP1",
      "path": "4"
    },
    "6347": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "ADD",
      "path": "4"
    },
    "6350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6352": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "6353": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP1",
      "path": "4"
    },
    "6354": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6356": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP2",
      "path": "4"
    },
    "6357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "6358": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6360": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "ADD",
      "path": "4"
    },
    "6361": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "DUP2",
      "path": "4"
    },
    "6395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "MSTORE",
      "path": "4"
    },
    "6396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "POP",
      "path": "4"
    },
    "6397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3420, 3425],
      "op": "DUP6",
      "path": "4"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6404": {
      "op": "SHL"
    },
    "6405": {
      "op": "SUB"
    },
    "6406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "AND",
      "path": "4"
    },
    "6407": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1971"
    },
    "6410": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3439],
      "op": "SWAP1",
      "path": "4"
    },
    "6411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP3",
      "path": "4"
    },
    "6412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP2",
      "path": "4"
    },
    "6413": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "SWAP1",
      "path": "4"
    },
    "6414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "6419": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "AND",
      "path": "4"
    },
    "6420": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3412, 3481],
      "op": "JUMP",
      "path": "4"
    },
    "6421": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3412, 3481],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6422": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3512],
      "op": "DUP1",
      "path": "4"
    },
    "6423": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3512],
      "op": "MLOAD",
      "path": "4"
    },
    "6424": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3481],
      "op": "SWAP1",
      "path": "4"
    },
    "6425": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3386, 3481],
      "op": "SWAP2",
      "path": "4"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3495, 3516],
      "op": "ISZERO",
      "path": "4"
    },
    "6428": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3491, 3712],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD7"
    },
    "6431": {
      "branch": 113,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3491, 3712],
      "op": "JUMPI",
      "path": "4"
    },
    "6432": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3635, 3645],
      "op": "DUP1",
      "path": "4",
      "statement": 78
    },
    "6433": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP1",
      "path": "4"
    },
    "6434": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6436": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "ADD",
      "path": "4"
    },
    "6437": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "SWAP1",
      "path": "4"
    },
    "6438": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "MLOAD",
      "path": "4"
    },
    "6439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP2",
      "path": "4"
    },
    "6442": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "LT",
      "path": "4"
    },
    "6443": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "ISZERO",
      "path": "4"
    },
    "6444": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1934"
    },
    "6447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "JUMPI",
      "path": "4"
    },
    "6448": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6450": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "DUP1",
      "path": "4"
    },
    "6451": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "REVERT",
      "path": "4"
    },
    "6452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6453": {
      "op": "POP"
    },
    "6454": {
      "branch": 114,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3624, 3654],
      "op": "MLOAD",
      "path": "4"
    },
    "6455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD7"
    },
    "6458": {
      "branch": 114,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "JUMPI",
      "path": "4"
    },
    "6459": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MLOAD",
      "path": "4"
    },
    "6462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6468": {
      "op": "SHL"
    },
    "6469": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "6470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "6471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "6474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "6475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "6476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "6479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP3",
      "path": "4"
    },
    "6480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "6481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SUB",
      "path": "4"
    },
    "6482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP3",
      "path": "4"
    },
    "6483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "6484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "6486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP2",
      "path": "4"
    },
    "6487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MSTORE",
      "path": "4"
    },
    "6488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "6491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "6492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C1B"
    },
    "6495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "6497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "6498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "CODECOPY",
      "path": "4"
    },
    "6499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "ADD",
      "path": "4"
    },
    "6502": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "6503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "POP",
      "path": "4"
    },
    "6504": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "POP",
      "path": "4"
    },
    "6505": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "MLOAD",
      "path": "4"
    },
    "6508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "DUP1",
      "path": "4"
    },
    "6509": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP2",
      "path": "4"
    },
    "6510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SUB",
      "path": "4"
    },
    "6511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "SWAP1",
      "path": "4"
    },
    "6512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3616, 3701],
      "op": "REVERT",
      "path": "4"
    },
    "6513": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6514": {
      "fn": "Address.functionCall",
      "offset": [3684, 3696],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6516": {
      "fn": "Address.functionCall",
      "offset": [3715, 3767],
      "op": "PUSH2",
      "path": "5",
      "statement": 79,
      "value": "0x1980"
    },
    "6519": {
      "fn": "Address.functionCall",
      "offset": [3737, 3743],
      "op": "DUP5",
      "path": "5"
    },
    "6520": {
      "fn": "Address.functionCall",
      "offset": [3745, 3749],
      "op": "DUP5",
      "path": "5"
    },
    "6521": {
      "fn": "Address.functionCall",
      "offset": [3751, 3752],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6523": {
      "fn": "Address.functionCall",
      "offset": [3754, 3766],
      "op": "DUP6",
      "path": "5"
    },
    "6524": {
      "fn": "Address.functionCall",
      "offset": [3715, 3736],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1988"
    },
    "6527": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [3715, 3767],
      "op": "JUMP",
      "path": "5"
    },
    "6528": {
      "fn": "Address.functionCall",
      "offset": [3715, 3767],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6529": {
      "fn": "Address.functionCall",
      "offset": [3708, 3767],
      "op": "SWAP5",
      "path": "5"
    },
    "6530": {
      "fn": "Address.functionCall",
      "offset": [3581, 3774],
      "op": "SWAP4",
      "path": "5"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "op": "POP"
    },
    "6533": {
      "op": "POP"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [3581, 3774],
      "op": "JUMP",
      "path": "5"
    },
    "6536": {
      "fn": "Address.functionCallWithValue",
      "offset": [4608, 5131],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6537": {
      "fn": "Address.functionCallWithValue",
      "offset": [4735, 4747],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6539": {
      "fn": "Address.functionCallWithValue",
      "offset": [4792, 4797],
      "op": "DUP3",
      "path": "5",
      "statement": 80
    },
    "6540": {
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4788],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "6541": {
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4797],
      "op": "LT",
      "path": "5"
    },
    "6542": {
      "branch": 107,
      "fn": "Address.functionCallWithValue",
      "offset": [4767, 4797],
      "op": "ISZERO",
      "path": "5"
    },
    "6543": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C9"
    },
    "6546": {
      "branch": 107,
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "JUMPI",
      "path": "5"
    },
    "6547": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6549": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MLOAD",
      "path": "5"
    },
    "6550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6556": {
      "op": "SHL"
    },
    "6557": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "6558": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "6559": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6561": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "6562": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "6563": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "6564": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6566": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "6567": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP3",
      "path": "5"
    },
    "6568": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "6569": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SUB",
      "path": "5"
    },
    "6570": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP3",
      "path": "5"
    },
    "6571": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "6572": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "6574": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP2",
      "path": "5"
    },
    "6575": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MSTORE",
      "path": "5"
    },
    "6576": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6578": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "6579": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "6580": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BB4"
    },
    "6583": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "6585": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "6586": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "CODECOPY",
      "path": "5"
    },
    "6587": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6589": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "ADD",
      "path": "5"
    },
    "6590": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "6591": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "POP",
      "path": "5"
    },
    "6592": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "POP",
      "path": "5"
    },
    "6593": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6595": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "MLOAD",
      "path": "5"
    },
    "6596": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "DUP1",
      "path": "5"
    },
    "6597": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP2",
      "path": "5"
    },
    "6598": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SUB",
      "path": "5"
    },
    "6599": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "SWAP1",
      "path": "5"
    },
    "6600": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "REVERT",
      "path": "5"
    },
    "6601": {
      "fn": "Address.functionCallWithValue",
      "offset": [4759, 4840],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6602": {
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4876],
      "op": "PUSH2",
      "path": "5",
      "statement": 81,
      "value": "0x19D2"
    },
    "6605": {
      "fn": "Address.functionCallWithValue",
      "offset": [4869, 4875],
      "op": "DUP6",
      "path": "5"
    },
    "6606": {
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4868],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE3"
    },
    "6609": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [4858, 4876],
      "op": "JUMP",
      "path": "5"
    },
    "6610": {
      "branch": 108,
      "fn": "Address.functionCallWithValue",
      "offset": [4858, 4876],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6611": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A23"
    },
    "6614": {
      "branch": 108,
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "JUMPI",
      "path": "5"
    },
    "6615": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6617": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP1",
      "path": "5"
    },
    "6618": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MLOAD",
      "path": "5"
    },
    "6619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP2",
      "path": "5"
    },
    "6627": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "6628": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6630": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6632": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "6633": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "6634": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "6635": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "6637": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6639": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "6640": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "6641": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "6642": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6675": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6677": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP3",
      "path": "5"
    },
    "6678": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "6679": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MSTORE",
      "path": "5"
    },
    "6680": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "6681": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "MLOAD",
      "path": "5"
    },
    "6682": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "6683": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "DUP2",
      "path": "5"
    },
    "6684": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "6685": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SUB",
      "path": "5"
    },
    "6686": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "6688": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "ADD",
      "path": "5"
    },
    "6689": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "SWAP1",
      "path": "5"
    },
    "6690": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "REVERT",
      "path": "5"
    },
    "6691": {
      "fn": "Address.functionCallWithValue",
      "offset": [4850, 4910],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6692": {
      "fn": "Address.functionCallWithValue",
      "offset": [4981, 4993],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6694": {
      "fn": "Address.functionCallWithValue",
      "offset": [4995, 5018],
      "op": "DUP1",
      "path": "5"
    },
    "6695": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5028],
      "op": "DUP7",
      "path": "5"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6702": {
      "op": "SHL"
    },
    "6703": {
      "op": "SUB"
    },
    "6704": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5033],
      "op": "AND",
      "path": "5"
    },
    "6705": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5047],
      "op": "DUP6",
      "path": "5"
    },
    "6706": {
      "fn": "Address.functionCallWithValue",
      "offset": [5050, 5054],
      "op": "DUP8",
      "path": "5"
    },
    "6707": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6709": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6710": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6711": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6712": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6713": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6714": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "6715": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6717": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6718": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "6719": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6720": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "6721": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "6722": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6723": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6725": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "6726": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "LT",
      "path": "5"
    },
    "6727": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A61"
    },
    "6730": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPI",
      "path": "5"
    },
    "6731": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6732": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6733": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6734": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6737": {
      "op": "NOT"
    },
    "6738": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "6739": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP3",
      "path": "5"
    },
    "6740": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6741": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6742": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6744": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6745": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6746": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6747": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6748": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6749": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A42"
    },
    "6752": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMP",
      "path": "5"
    },
    "6753": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6754": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6756": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "6757": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6759": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "6760": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "6763": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "EXP",
      "path": "5"
    },
    "6764": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "6765": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6766": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "NOT",
      "path": "5"
    },
    "6767": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6768": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6769": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "6770": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "6771": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP5",
      "path": "5"
    },
    "6772": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6773": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "6774": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6775": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6776": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "OR",
      "path": "5"
    },
    "6777": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP6",
      "path": "5"
    },
    "6778": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "6779": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6780": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6781": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6782": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6783": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6784": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6785": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP1",
      "path": "5"
    },
    "6786": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6787": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6788": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6789": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6790": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6791": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6793": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6795": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6796": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6797": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP4",
      "path": "5"
    },
    "6798": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SUB",
      "path": "5"
    },
    "6799": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "6800": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP6",
      "path": "5"
    },
    "6801": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP8",
      "path": "5"
    },
    "6802": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "GAS",
      "path": "5"
    },
    "6803": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "CALL",
      "path": "5"
    },
    "6804": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP3",
      "path": "5"
    },
    "6805": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6806": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6807": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6808": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6809": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP1",
      "path": "5"
    },
    "6810": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6812": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP2",
      "path": "5"
    },
    "6813": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "EQ",
      "path": "5"
    },
    "6814": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC3"
    },
    "6817": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPI",
      "path": "5"
    },
    "6818": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6820": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MLOAD",
      "path": "5"
    },
    "6821": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6822": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6823": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "6825": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "NOT",
      "path": "5"
    },
    "6826": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "6828": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6829": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6830": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "AND",
      "path": "5"
    },
    "6831": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6832": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6833": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6835": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "6836": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6837": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP3",
      "path": "5"
    },
    "6838": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "MSTORE",
      "path": "5"
    },
    "6839": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6840": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6842": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6844": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "DUP5",
      "path": "5"
    },
    "6845": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "ADD",
      "path": "5"
    },
    "6846": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "6847": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC8"
    },
    "6850": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMP",
      "path": "5"
    },
    "6851": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6852": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6854": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6855": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6856": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6857": {
      "fn": "Address.functionCallWithValue",
      "offset": [5022, 5055],
      "op": "POP",
      "path": "5"
    },
    "6858": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6859": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "POP",
      "path": "5"
    },
    "6860": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "SWAP2",
      "path": "5"
    },
    "6861": {
      "fn": "Address.functionCallWithValue",
      "offset": [4980, 5055],
      "op": "POP",
      "path": "5"
    },
    "6862": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5124],
      "op": "PUSH2",
      "path": "5",
      "statement": 82,
      "value": "0x1AD8"
    },
    "6865": {
      "fn": "Address.functionCallWithValue",
      "offset": [5090, 5097],
      "op": "DUP3",
      "path": "5"
    },
    "6866": {
      "fn": "Address.functionCallWithValue",
      "offset": [5099, 5109],
      "op": "DUP3",
      "path": "5"
    },
    "6867": {
      "fn": "Address.functionCallWithValue",
      "offset": [5111, 5123],
      "op": "DUP7",
      "path": "5"
    },
    "6868": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5089],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE9"
    },
    "6871": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5072, 5124],
      "op": "JUMP",
      "path": "5"
    },
    "6872": {
      "fn": "Address.functionCallWithValue",
      "offset": [5072, 5124],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6873": {
      "fn": "Address.functionCallWithValue",
      "offset": [5065, 5124],
      "op": "SWAP8",
      "path": "5"
    },
    "6874": {
      "fn": "Address.functionCallWithValue",
      "offset": [4608, 5131],
      "op": "SWAP7",
      "path": "5"
    },
    "6875": {
      "op": "POP"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "POP"
    },
    "6882": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4608, 5131],
      "op": "JUMP",
      "path": "5"
    },
    "6883": {
      "fn": "Address.isContract",
      "offset": [726, 1139],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6884": {
      "fn": "Address.isContract",
      "offset": [1086, 1106],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "6885": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "ISZERO",
      "path": "5",
      "statement": 83
    },
    "6886": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "ISZERO",
      "path": "5"
    },
    "6887": {
      "fn": "Address.isContract",
      "offset": [1124, 1132],
      "op": "SWAP1",
      "path": "5"
    },
    "6888": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [726, 1139],
      "op": "JUMP",
      "path": "5"
    },
    "6889": {
      "fn": "Address._verifyCallResult",
      "offset": [7091, 7816],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6890": {
      "fn": "Address._verifyCallResult",
      "offset": [7206, 7218],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6892": {
      "branch": 109,
      "fn": "Address._verifyCallResult",
      "offset": [7234, 7241],
      "op": "DUP4",
      "path": "5"
    },
    "6893": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "ISZERO",
      "path": "5"
    },
    "6894": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF8"
    },
    "6897": {
      "branch": 109,
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "JUMPI",
      "path": "5"
    },
    "6898": {
      "op": "POP"
    },
    "6899": {
      "fn": "Address._verifyCallResult",
      "offset": [7264, 7274],
      "op": "DUP2",
      "path": "5",
      "statement": 84
    },
    "6900": {
      "fn": "Address._verifyCallResult",
      "offset": [7257, 7274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1375"
    },
    "6903": {
      "fn": "Address._verifyCallResult",
      "offset": [7257, 7274],
      "op": "JUMP",
      "path": "5"
    },
    "6904": {
      "fn": "Address._verifyCallResult",
      "offset": [7230, 7810],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6905": {
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7392],
      "op": "DUP3",
      "path": "5"
    },
    "6906": {
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7392],
      "op": "MLOAD",
      "path": "5"
    },
    "6907": {
      "branch": 110,
      "fn": "Address._verifyCallResult",
      "offset": [7375, 7396],
      "op": "ISZERO",
      "path": "5"
    },
    "6908": {
      "fn": "Address._verifyCallResult",
      "offset": [7371, 7800],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B08"
    },
    "6911": {
      "branch": 110,
      "fn": "Address._verifyCallResult",
      "offset": [7371, 7800],
      "op": "JUMPI",
      "path": "5"
    },
    "6912": {
      "fn": "Address._verifyCallResult",
      "offset": [7633, 7643],
      "op": "DUP3",
      "path": "5"
    },
    "6913": {
      "fn": "Address._verifyCallResult",
      "offset": [7627, 7644],
      "op": "MLOAD",
      "path": "5"
    },
    "6914": {
      "fn": "Address._verifyCallResult",
      "offset": [7693, 7708],
      "op": "DUP1",
      "path": "5"
    },
    "6915": {
      "fn": "Address._verifyCallResult",
      "offset": [7680, 7690],
      "op": "DUP5",
      "path": "5"
    },
    "6916": {
      "fn": "Address._verifyCallResult",
      "offset": [7676, 7678],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6918": {
      "fn": "Address._verifyCallResult",
      "offset": [7672, 7691],
      "op": "ADD",
      "path": "5"
    },
    "6919": {
      "fn": "Address._verifyCallResult",
      "offset": [7665, 7709],
      "op": "REVERT",
      "path": "5"
    },
    "6920": {
      "fn": "Address._verifyCallResult",
      "offset": [7582, 7727],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6921": {
      "fn": "Address._verifyCallResult",
      "offset": [7772, 7784],
      "op": "DUP2",
      "path": "5",
      "statement": 85
    },
    "6922": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6924": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "6925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6931": {
      "op": "SHL"
    },
    "6932": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6933": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "6934": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6936": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6937": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "6938": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "6939": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6941": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6942": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "6943": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6944": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "6945": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "6946": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "6947": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "6948": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6949": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6950": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "6951": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6952": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "6953": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6955": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6956": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "6957": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "6958": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "6959": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "6960": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "6961": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6963": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6964": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "6965": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "6966": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "6967": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "6968": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6970": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6971": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "6972": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6973": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "LT",
      "path": "5"
    },
    "6974": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ISZERO",
      "path": "5"
    },
    "6975": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B52"
    },
    "6978": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPI",
      "path": "5"
    },
    "6979": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6980": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "6981": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6982": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "6983": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "6984": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "6985": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6986": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "6987": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6989": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "6990": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B3A"
    },
    "6993": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMP",
      "path": "5"
    },
    "6994": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6995": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "6996": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "6997": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "6998": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "6999": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "7000": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7001": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "7002": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "7003": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "7004": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "7005": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7007": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "AND",
      "path": "5"
    },
    "7008": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "7009": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ISZERO",
      "path": "5"
    },
    "7010": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B7F"
    },
    "7013": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPI",
      "path": "5"
    },
    "7014": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "7015": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP3",
      "path": "5"
    },
    "7016": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "7017": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "7018": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "7019": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7021": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP4",
      "path": "5"
    },
    "7022": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7024": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "7025": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "7028": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "EXP",
      "path": "5"
    },
    "7029": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "7030": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "NOT",
      "path": "5"
    },
    "7031": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "AND",
      "path": "5"
    },
    "7032": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP2",
      "path": "5"
    },
    "7033": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MSTORE",
      "path": "5"
    },
    "7034": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7036": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "ADD",
      "path": "5"
    },
    "7037": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "7038": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7039": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7040": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7041": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP3",
      "path": "5"
    },
    "7042": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7043": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7044": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "POP",
      "path": "5"
    },
    "7045": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7047": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "MLOAD",
      "path": "5"
    },
    "7048": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "DUP1",
      "path": "5"
    },
    "7049": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP2",
      "path": "5"
    },
    "7050": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SUB",
      "path": "5"
    },
    "7051": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "SWAP1",
      "path": "5"
    },
    "7052": {
      "fn": "Address._verifyCallResult",
      "offset": [7765, 7785],
      "op": "REVERT",
      "path": "5"
    }
  },
  "sha1": "8cf53d950765e3c2d994ac467afd6037a93c590b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ninterface Minter {\n    function mint(address _receiver, uint256 _amount) external;\n}\n\ninterface Oracle {\n    function latestAnswer() external view returns (int256);\n}\n\n// LP token staking contract for http://ellipsis.finance/\n// LP tokens are staked within this contract to generate EPS, Ellipsis' value-capture token\n// Based on the Sushi MasterChef contract by Chef Nomi - https://github.com/sushiswap/sushiswap/\ncontract LpTokenStaker is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;\n        uint256 rewardDebt;\n    }\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken; // Address of LP token contract.\n        uint256 oracleIndex; // Index value for oracles array indicating which price multiplier to use.\n        uint256 allocPoint; // How many allocation points assigned to this pool.\n        uint256 lastRewardTime; // Last second that reward distribution occurs.\n        uint256 accRewardPerShare; // Accumulated rewards per share, times 1e12. See below.\n    }\n    // Info about token emissions for a given time period.\n    struct EmissionPoint {\n        uint128 startTimeOffset;\n        uint128 rewardsPerSecond;\n    }\n\n    Minter public rewardMinter;\n    uint256 public rewardsPerSecond;\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Data about the future reward rates. emissionSchedule stored in reverse chronological order,\n    // whenever the number of blocks since the start block exceeds the next block offset a new\n    // reward rate is applied.\n    EmissionPoint[] public emissionSchedule;\n    // Info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint = 0;\n    // The block number when reward mining starts.\n    uint256 public startTime;\n\n    // List of Chainlink oracle addresses.\n    Oracle[] public oracles;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed pid,\n        uint256 amount\n    );\n\n    constructor(\n        uint128[] memory _startTimeOffset,\n        uint128[] memory _rewardsPerSecond,\n        IERC20 _fixedRewardToken\n    ) public {\n        uint256 length = _startTimeOffset.length;\n        for (uint256 i = length - 1; i + 1 != 0; i--) {\n            emissionSchedule.push(\n                EmissionPoint({\n                    startTimeOffset: _startTimeOffset[i],\n                    rewardsPerSecond: _rewardsPerSecond[i]\n                })\n            );\n        }\n        // Pool values are based on USD so the first oracle is 0x00 and the price is always $1\n        oracles.push(Oracle(0));\n        // The first pool receives special treatment, it always has 20% of the totalAllocPoint\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _fixedRewardToken,\n                oracleIndex: 0,\n                allocPoint: 0,\n                lastRewardTime: block.timestamp,\n                accRewardPerShare: 0\n            })\n        );\n    }\n\n    // Start the party\n    function start() public onlyOwner {\n        require(startTime == 0);\n        startTime = block.timestamp;\n    }\n\n    function setMinter(Minter _rewardMinter) public onlyOwner {\n        require(rewardMinter == Minter(0));\n        rewardMinter = _rewardMinter;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function addPool(IERC20 _lpToken, uint256 _oracleIndex) public onlyOwner {\n        require(_oracleIndex < oracles.length);\n        _massUpdatePools();\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                oracleIndex: _oracleIndex,\n                allocPoint: 0,\n                lastRewardTime: block.timestamp,\n                accRewardPerShare: 0\n            })\n        );\n    }\n\n    // Add a new oracle address. Should only be added if required by pool.\n    function addOracle(Oracle _oracle) external onlyOwner {\n        _oracle.latestAnswer();  // Validates that this is actually an oracle!\n        oracles.push(_oracle);\n    }\n\n    // Calculate the final allocation points for each pool.\n    // This is the main logical deviation from the original MasterChef contract.\n    // The pool at pid 0 always recieves exactly 20% of the allocation points.\n    // All remaining pools receive an \"equal\" allocation, based on their rough value in USD\n    // For pools handling USD-based Ellipsis LP tokens the value per token is assumed as $1,\n    // for non-USD pools a rate is queried from a Chainlink oracle.\n    function _getAllocPoints() internal view returns (uint256[] memory allocPoints, uint256 totalAP) {\n        // Get the oracle prices. Oracle[0] is USD and fixed at $1 (100000000)\n        uint256[] memory latestPrices = new uint256[](oracles.length);\n        latestPrices[0] = 100000000;\n        for (uint256 i = 1; i < oracles.length; i++) {\n            latestPrices[i] = uint256(oracles[i].latestAnswer());\n        }\n\n        // Apply oracle prices to calculate final allocation points for each pool\n        uint256 length = poolInfo.length;\n        allocPoints = new uint256[](length);\n        for (uint256 pid = 1; pid < length; ++pid) {\n            PoolInfo storage pool = poolInfo[pid];\n            allocPoints[pid] = pool.allocPoint.mul(latestPrices[pool.oracleIndex]);\n            totalAP = totalAP.add(allocPoints[pid]);\n        }\n        // Special treatment for pool 0 to always have 20%\n        totalAP = totalAP.mul(100).div(80);\n        allocPoints[0] = totalAP.div(5);\n\n        return (allocPoints, totalAP);\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // View function to see pending reward tokens on frontend.\n    function claimableReward(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        (uint256[] memory allocPoints, uint256 totalAP) = _getAllocPoints();\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accRewardPerShare = pool.accRewardPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.timestamp > pool.lastRewardTime && lpSupply != 0 && totalAP != 0) {\n            uint256 duration = block.timestamp.sub(pool.lastRewardTime);\n            uint256 reward = duration.mul(rewardsPerSecond).mul(allocPoints[_pid]).div(totalAP);\n            accRewardPerShare = accRewardPerShare.add(reward.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward variables for all pools\n    function _massUpdatePools() internal {\n        (uint256[] memory allocPoints, uint256 totalAP) = _getAllocPoints();\n        for (uint256 pid = 0; pid < allocPoints.length; ++pid) {\n            _updatePool(pid, allocPoints[pid], totalAP);\n        }\n        uint256 length = emissionSchedule.length;\n        if (startTime > 0 && length > 0) {\n            EmissionPoint memory e = emissionSchedule[length-1];\n            if (block.timestamp.sub(startTime) > e.startTimeOffset) {\n                rewardsPerSecond = uint256(e.rewardsPerSecond);\n                emissionSchedule.pop();\n            }\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function _updatePool(uint256 _pid, uint256 _allocPoint, uint256 _totalAllocPoint) internal {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.timestamp <= pool.lastRewardTime) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0 || _totalAllocPoint == 0) {\n            pool.lastRewardTime = block.timestamp;\n            return;\n        }\n        uint256 duration = block.timestamp.sub(pool.lastRewardTime);\n        uint256 reward = duration.mul(rewardsPerSecond).mul(_allocPoint).div(_totalAllocPoint);\n        pool.accRewardPerShare = pool.accRewardPerShare.add(reward.mul(1e12).div(lpSupply));\n        pool.lastRewardTime = block.timestamp;\n    }\n\n    // Deposit LP tokens into the contract. Also triggers a claim.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        _massUpdatePools();\n        if (user.amount > 0) {\n            uint256 pending =\n                user.amount.mul(pool.accRewardPerShare).div(1e12).sub(\n                    user.rewardDebt\n                );\n            rewardMinter.mint(msg.sender, pending);\n        }\n        pool.lpToken.safeTransferFrom(\n            address(msg.sender),\n            address(this),\n            _amount\n        );\n        user.amount = user.amount.add(_amount);\n        user.rewardDebt = user.amount.mul(pool.accRewardPerShare).div(1e12);\n        if (_pid > 0) {\n            pool.allocPoint = pool.allocPoint.add(_amount);\n            totalAllocPoint = totalAllocPoint.add(_amount);\n        }\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens. Also triggers a claim.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        _massUpdatePools();\n        uint256 pending =\n            user.amount.mul(pool.accRewardPerShare).div(1e12).sub(\n                user.rewardDebt\n            );\n        if (pending > 0) {\n            rewardMinter.mint(msg.sender, pending);\n        }\n        user.amount = user.amount.sub(_amount);\n        user.rewardDebt = user.amount.mul(pool.accRewardPerShare).div(1e12);\n        if (_pid > 0) {\n            pool.allocPoint = pool.allocPoint.sub(_amount);\n            totalAllocPoint = totalAllocPoint.sub(_amount);\n        }\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n     // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        uint256 amount = user.amount;\n        pool.lpToken.safeTransfer(address(msg.sender), amount);\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n\n        if (_pid > 0) {\n            if (pool.allocPoint >= amount) {\n                pool.allocPoint = pool.allocPoint.sub(amount);\n            } else {\n                pool.allocPoint = 0;\n            }\n            if (totalAllocPoint >= amount) {\n                totalAllocPoint = totalAllocPoint.sub(amount);\n            } else {\n                totalAllocPoint = 0;\n            }\n        }\n    }\n\n    // Claim pending rewards for one or more pools.\n    // Rewards are not received directly, they are minted by the rewardMinter.\n    function claim(uint256[] calldata _pids) external {\n        _massUpdatePools();\n        uint256 pending;\n        for (uint i = 0; i < _pids.length; i++) {\n            PoolInfo storage pool = poolInfo[_pids[i]];\n            UserInfo storage user = userInfo[_pids[i]][msg.sender];\n            pending = pending.add(user.amount.mul(pool.accRewardPerShare).div(1e12).sub(user.rewardDebt));\n            user.rewardDebt = user.amount.mul(pool.accRewardPerShare).div(1e12);\n        }\n        if (pending > 0) {\n            rewardMinter.mint(msg.sender, pending);\n        }\n    }\n\n}\n",
  "sourceMap": "696:11496:11:-:0;;;2170:1;2137:34;;2608:975;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2608:975:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2608:975:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2608:975:11;;;;;;-1:-1:-1;2608:975:11;;;;-1:-1:-1;884:17:0;;-1:-1:-1;904:12:0;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;2781:23:11;;-1:-1:-1;;2831:10:11;;2814:275;2847:1;2843:5;;:10;2814:275;;2874:16;2913:151;;;;;;;;2966:16;2983:1;2966:19;;;;;;;;;;;;;;-1:-1:-1;;;;;2913:151:11;;;;;3025:17;3043:1;3025:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2913:151:11;;;;;;2874:204;;;;;;;-1:-1:-1;2874:204:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2874:204:11;;;;-1:-1:-1;;;;;;2874:204:11;;;;;;;;;;;;;;-1:-1:-1;;2855:3:11;2814:275;;;-1:-1:-1;;3193:7:11;:23;;;;;;;;;;;;;-1:-1:-1;;;;;;3193:23:11;;;;;;3348:218;;;;;;;;-1:-1:-1;;;;;3348:218:11;;;;;-1:-1:-1;3193:23:11;3348:218;;;;;;;;;;;3498:15;3348:218;;;;;;;;;;;;3321:8;:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;696:11496:11;;-1:-1:-1;696:11496:11;598:104:6;685:10;598:104;:::o;696:11496:11:-;;;;;;;",
  "sourcePath": "contracts/LpTokenStaker.sol",
  "type": "contract"
}
