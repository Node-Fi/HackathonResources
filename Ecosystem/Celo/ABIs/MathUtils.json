{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "difference",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "within1",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/MathUtils.sol"
  },
  "ast": {
    "absolutePath": "contracts/MathUtils.sol",
    "exportedSymbols": {
      "MathUtils": [1642]
    },
    "id": 1643,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1580,
        "literals": ["solidity", "0.6", ".12"],
        "nodeType": "PragmaDirective",
        "src": "35:23:11"
      },
      {
        "absolutePath": "C:/Users/dylma/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 1581,
        "nodeType": "ImportDirective",
        "scope": 1643,
        "sourceUnit": 1326,
        "src": "62:79:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1582,
          "nodeType": "StructuredDocumentation",
          "src": "145:172:11",
          "text": " @title MathUtils library\n @notice A library to be used in conjunction with SafeMath. Contains functions for calculating\n differences between two uint256."
        },
        "fullyImplemented": true,
        "id": 1642,
        "linearizedBaseContracts": [1642],
        "name": "MathUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1600,
              "nodeType": "Block",
              "src": "770:50:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1593,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1585,
                              "src": "801:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1594,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "804:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1592,
                            "name": "_difference",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "789:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "789:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "810:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "789:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1598,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "788:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1591,
                  "id": 1599,
                  "nodeType": "Return",
                  "src": "781:31:11"
                }
              ]
            },
            "documentation": {
              "id": 1583,
              "nodeType": "StructuredDocumentation",
              "src": "344:352:11",
              "text": " @notice Compares a and b and returns true if the difference between a and b\n         is less than 1 or equal to each other.\n @param a uint256 to compare with\n @param b uint256 to compare with\n @return True if the difference between a and b is less than 1 or equal,\n         otherwise return false"
            },
            "functionSelector": "13a1ec75",
            "id": 1601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "within1",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1601,
                  "src": "719:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1601,
                  "src": "730:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:22:11"
            },
            "returnParameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1601,
                  "src": "764:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "763:6:11"
            },
            "scope": 1642,
            "src": "702:118:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1616,
              "nodeType": "Block",
              "src": "1108:43:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "1138:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1613,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "1141:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1611,
                      "name": "_difference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1641,
                      "src": "1126:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1610,
                  "id": 1615,
                  "nodeType": "Return",
                  "src": "1119:24:11"
                }
              ]
            },
            "documentation": {
              "id": 1602,
              "nodeType": "StructuredDocumentation",
              "src": "828:200:11",
              "text": " @notice Calculates absolute difference between a and b\n @param a uint256 to compare with\n @param b uint256 to compare with\n @return Difference between a and b"
            },
            "functionSelector": "a95cb7f7",
            "id": 1617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "difference",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1617,
                  "src": "1054:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1617,
                  "src": "1065:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1053:22:11"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1617,
                  "src": "1099:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1098:9:11"
            },
            "scope": 1642,
            "src": "1034:117:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "1440:91:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1627,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "1455:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1628,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "1459:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1455:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1635,
                  "nodeType": "IfStatement",
                  "src": "1451:50:11",
                  "trueBody": {
                    "id": 1634,
                    "nodeType": "Block",
                    "src": "1462:39:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1630,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "1484:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1631,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "1488:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1484:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1626,
                        "id": 1633,
                        "nodeType": "Return",
                        "src": "1477:12:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1636,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "1518:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1637,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "1522:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1518:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1626,
                  "id": 1639,
                  "nodeType": "Return",
                  "src": "1511:12:11"
                }
              ]
            },
            "documentation": {
              "id": 1618,
              "nodeType": "StructuredDocumentation",
              "src": "1159:200:11",
              "text": " @notice Calculates absolute difference between a and b\n @param a uint256 to compare with\n @param b uint256 to compare with\n @return Difference between a and b"
            },
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_difference",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1641,
                  "src": "1386:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1641,
                  "src": "1397:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1385:22:11"
            },
            "returnParameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1641,
                  "src": "1431:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:9:11"
            },
            "scope": 1642,
            "src": "1365:166:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1643,
        "src": "319:1215:11"
      }
    ],
    "src": "35:1501:11"
  },
  "bytecode": "61011c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806313a1ec75146042578063a95cb7f7146076575b600080fd5b606260048036036040811015605657600080fd5b508035906020013560a8565b604080519115158252519081900360200190f35b609660048036036040811015608a57600080fd5b508035906020013560bf565b60408051918252519081900360200190f35b6000600160b4848460d0565b111590505b92915050565b600060c9838360d0565b9392505050565b60008183111560e1575080820360b9565b50039056fea2646970667358221220dfed11c61f8c2e0d917f53d082c6ff5519d24b415d40ad279dcca8cd2f9bbae464736f6c634300060c0033",
  "bytecodeSha1": "3753a4c80b332f7bed97541d00e09d407218caca",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MathUtils",
  "coverageMap": {
    "branches": {
      "11": {
        "MathUtils._difference": {
          "4": [1455, 1460, false]
        }
      }
    },
    "statements": {
      "11": {
        "MathUtils._difference": {
          "2": [1477, 1489],
          "3": [1511, 1523]
        },
        "MathUtils.difference": {
          "1": [1119, 1143]
        },
        "MathUtils.within1": {
          "0": [781, 812]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806313a1ec75146042578063a95cb7f7146076575b600080fd5b606260048036036040811015605657600080fd5b508035906020013560a8565b604080519115158252519081900360200190f35b609660048036036040811015608a57600080fd5b508035906020013560bf565b60408051918252519081900360200190f35b6000600160b4848460d0565b111590505b92915050565b600060c9838360d0565b9392505050565b60008183111560e1575080820360b9565b50039056fea2646970667358221220dfed11c61f8c2e0d917f53d082c6ff5519d24b415d40ad279dcca8cd2f9bbae464736f6c634300060c0033",
  "deployedSourceMap": "319:1215:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:118;;;;;;;;;;;;;;;;-1:-1:-1;702:118:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1034:117;;;;;;;;;;;;;;;;-1:-1:-1;1034:117:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;702:118;764:4;810:1;789:17;801:1;804;789:11;:17::i;:::-;:22;;781:31;;702:118;;;;;:::o;1034:117::-;1099:7;1126:17;1138:1;1141;1126:11;:17::i;:::-;1119:24;1034:117;-1:-1:-1;;;1034:117:11:o;1365:166::-;1431:7;1459:1;1455;:5;1451:50;;;-1:-1:-1;1484:5:11;;;1477:12;;1451:50;-1:-1:-1;1518:5:11;;1365:166::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "difference(uint256,uint256)": {
        "notice": "Calculates absolute difference between a and b",
        "params": {
          "a": "uint256 to compare with",
          "b": "uint256 to compare with"
        },
        "returns": {
          "_0": "Difference between a and b"
        }
      },
      "within1(uint256,uint256)": {
        "notice": "Compares a and b and returns true if the difference between a and b         is less than 1 or equal to each other.",
        "params": {
          "a": "uint256 to compare with",
          "b": "uint256 to compare with"
        },
        "returns": {
          "_0": "True if the difference between a and b is less than 1 or equal,         otherwise return false"
        }
      }
    },
    "notice": "A library to be used in conjunction with SafeMath. Contains functions for calculating differences between two uint256.",
    "title": "MathUtils library",
    "version": 1
  },
  "offset": [319, 1534],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13A1EC75 EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0xA95CB7F7 EQ PUSH1 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB4 DUP5 DUP5 PUSH1 0xD0 JUMP JUMPDEST GT ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 DUP4 DUP4 PUSH1 0xD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH1 0xE1 JUMPI POP DUP1 DUP3 SUB PUSH1 0xB9 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xED GT 0xC6 0x1F DUP13 0x2E 0xD SWAP2 PUSH32 0x53D082C6FF5519D24B415D40AD279DCCA8CD2F9BBAE464736F6C634300060C00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [319, 1534],
      "op": "PUSH20",
      "path": "11",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [319, 1534],
      "op": "ADDRESS",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [319, 1534],
      "op": "EQ",
      "path": "11"
    },
    "23": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [319, 1534],
      "op": "MSTORE",
      "path": "11"
    },
    "28": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [319, 1534],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "31": {
      "fn": null,
      "offset": [319, 1534],
      "op": "LT",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3D"
    },
    "34": {
      "fn": null,
      "offset": [319, 1534],
      "op": "JUMPI",
      "path": "11"
    },
    "35": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "37": {
      "fn": null,
      "offset": [319, 1534],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "38": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "40": {
      "fn": null,
      "offset": [319, 1534],
      "op": "SHR",
      "path": "11"
    },
    "41": {
      "fn": null,
      "offset": [319, 1534],
      "op": "DUP1",
      "path": "11"
    },
    "42": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH4",
      "path": "11",
      "value": "0x13A1EC75"
    },
    "47": {
      "fn": null,
      "offset": [319, 1534],
      "op": "EQ",
      "path": "11"
    },
    "48": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x42"
    },
    "50": {
      "fn": null,
      "offset": [319, 1534],
      "op": "JUMPI",
      "path": "11"
    },
    "51": {
      "fn": null,
      "offset": [319, 1534],
      "op": "DUP1",
      "path": "11"
    },
    "52": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA95CB7F7"
    },
    "57": {
      "fn": null,
      "offset": [319, 1534],
      "op": "EQ",
      "path": "11"
    },
    "58": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x76"
    },
    "60": {
      "fn": null,
      "offset": [319, 1534],
      "op": "JUMPI",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [319, 1534],
      "op": "JUMPDEST",
      "path": "11"
    },
    "62": {
      "fn": null,
      "offset": [319, 1534],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "64": {
      "fn": null,
      "offset": [319, 1534],
      "op": "DUP1",
      "path": "11"
    },
    "65": {
      "first_revert": true,
      "fn": null,
      "offset": [319, 1534],
      "op": "REVERT",
      "path": "11"
    },
    "66": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPDEST",
      "path": "11"
    },
    "67": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x62"
    },
    "69": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "71": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP1",
      "path": "11"
    },
    "72": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "73": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SUB",
      "path": "11"
    },
    "74": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "76": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP2",
      "path": "11"
    },
    "77": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "LT",
      "path": "11"
    },
    "78": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "ISZERO",
      "path": "11"
    },
    "79": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x56"
    },
    "81": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPI",
      "path": "11"
    },
    "82": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "84": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP1",
      "path": "11"
    },
    "85": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "REVERT",
      "path": "11"
    },
    "86": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPDEST",
      "path": "11"
    },
    "87": {
      "op": "POP"
    },
    "88": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP1",
      "path": "11"
    },
    "89": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "90": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP1",
      "path": "11"
    },
    "91": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "93": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "ADD",
      "path": "11"
    },
    "94": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "95": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA8"
    },
    "97": {
      "fn": "MathUtils.within1",
      "jump": "i",
      "offset": [702, 820],
      "op": "JUMP",
      "path": "11"
    },
    "98": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPDEST",
      "path": "11"
    },
    "99": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "101": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP1",
      "path": "11"
    },
    "102": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "MLOAD",
      "path": "11"
    },
    "103": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP2",
      "path": "11"
    },
    "104": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "ISZERO",
      "path": "11"
    },
    "105": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "ISZERO",
      "path": "11"
    },
    "106": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP3",
      "path": "11"
    },
    "107": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "MSTORE",
      "path": "11"
    },
    "108": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "MLOAD",
      "path": "11"
    },
    "109": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP1",
      "path": "11"
    },
    "110": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "DUP2",
      "path": "11"
    },
    "111": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP1",
      "path": "11"
    },
    "112": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SUB",
      "path": "11"
    },
    "113": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "115": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "ADD",
      "path": "11"
    },
    "116": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP1",
      "path": "11"
    },
    "117": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "RETURN",
      "path": "11"
    },
    "118": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "JUMPDEST",
      "path": "11"
    },
    "119": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x96"
    },
    "121": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "123": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP1",
      "path": "11"
    },
    "124": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "125": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SUB",
      "path": "11"
    },
    "126": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "128": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP2",
      "path": "11"
    },
    "129": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "LT",
      "path": "11"
    },
    "130": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "ISZERO",
      "path": "11"
    },
    "131": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8A"
    },
    "133": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "JUMPI",
      "path": "11"
    },
    "134": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "136": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "REVERT",
      "path": "11"
    },
    "138": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "JUMPDEST",
      "path": "11"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP1",
      "path": "11"
    },
    "141": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "142": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP1",
      "path": "11"
    },
    "143": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "145": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "ADD",
      "path": "11"
    },
    "146": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "147": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0xBF"
    },
    "149": {
      "fn": "MathUtils.difference",
      "jump": "i",
      "offset": [1034, 1151],
      "op": "JUMP",
      "path": "11"
    },
    "150": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "JUMPDEST",
      "path": "11"
    },
    "151": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "153": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP1",
      "path": "11"
    },
    "154": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "MLOAD",
      "path": "11"
    },
    "155": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP2",
      "path": "11"
    },
    "156": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP3",
      "path": "11"
    },
    "157": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "MSTORE",
      "path": "11"
    },
    "158": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "MLOAD",
      "path": "11"
    },
    "159": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP1",
      "path": "11"
    },
    "160": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "DUP2",
      "path": "11"
    },
    "161": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP1",
      "path": "11"
    },
    "162": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SUB",
      "path": "11"
    },
    "163": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "165": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "ADD",
      "path": "11"
    },
    "166": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP1",
      "path": "11"
    },
    "167": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "RETURN",
      "path": "11"
    },
    "168": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPDEST",
      "path": "11"
    },
    "169": {
      "fn": "MathUtils.within1",
      "offset": [764, 768],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "171": {
      "fn": "MathUtils.within1",
      "offset": [810, 811],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x1"
    },
    "173": {
      "fn": "MathUtils.within1",
      "offset": [789, 806],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB4"
    },
    "175": {
      "fn": "MathUtils.within1",
      "offset": [801, 802],
      "op": "DUP5",
      "path": "11"
    },
    "176": {
      "fn": "MathUtils.within1",
      "offset": [804, 805],
      "op": "DUP5",
      "path": "11"
    },
    "177": {
      "fn": "MathUtils.within1",
      "offset": [789, 800],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD0"
    },
    "179": {
      "fn": "MathUtils.within1",
      "jump": "i",
      "offset": [789, 806],
      "op": "JUMP",
      "path": "11"
    },
    "180": {
      "fn": "MathUtils.within1",
      "offset": [789, 806],
      "op": "JUMPDEST",
      "path": "11"
    },
    "181": {
      "fn": "MathUtils.within1",
      "offset": [789, 811],
      "op": "GT",
      "path": "11"
    },
    "182": {
      "fn": "MathUtils.within1",
      "offset": [789, 811],
      "op": "ISZERO",
      "path": "11"
    },
    "183": {
      "fn": "MathUtils.within1",
      "offset": [781, 812],
      "op": "SWAP1",
      "path": "11"
    },
    "184": {
      "fn": "MathUtils.within1",
      "offset": [781, 812],
      "op": "POP",
      "path": "11"
    },
    "185": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "JUMPDEST",
      "path": "11"
    },
    "186": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP3",
      "path": "11"
    },
    "187": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "SWAP2",
      "path": "11"
    },
    "188": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "POP",
      "path": "11"
    },
    "189": {
      "fn": "MathUtils.within1",
      "offset": [702, 820],
      "op": "POP",
      "path": "11"
    },
    "190": {
      "fn": "MathUtils.within1",
      "jump": "o",
      "offset": [702, 820],
      "op": "JUMP",
      "path": "11"
    },
    "191": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "JUMPDEST",
      "path": "11"
    },
    "192": {
      "fn": "MathUtils.difference",
      "offset": [1099, 1106],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "194": {
      "fn": "MathUtils.difference",
      "offset": [1126, 1143],
      "op": "PUSH1",
      "path": "11",
      "statement": 1,
      "value": "0xC9"
    },
    "196": {
      "fn": "MathUtils.difference",
      "offset": [1138, 1139],
      "op": "DUP4",
      "path": "11"
    },
    "197": {
      "fn": "MathUtils.difference",
      "offset": [1141, 1142],
      "op": "DUP4",
      "path": "11"
    },
    "198": {
      "fn": "MathUtils.difference",
      "offset": [1126, 1137],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD0"
    },
    "200": {
      "fn": "MathUtils.difference",
      "jump": "i",
      "offset": [1126, 1143],
      "op": "JUMP",
      "path": "11"
    },
    "201": {
      "fn": "MathUtils.difference",
      "offset": [1126, 1143],
      "op": "JUMPDEST",
      "path": "11"
    },
    "202": {
      "fn": "MathUtils.difference",
      "offset": [1119, 1143],
      "op": "SWAP4",
      "path": "11"
    },
    "203": {
      "fn": "MathUtils.difference",
      "offset": [1034, 1151],
      "op": "SWAP3",
      "path": "11"
    },
    "204": {
      "op": "POP"
    },
    "205": {
      "op": "POP"
    },
    "206": {
      "op": "POP"
    },
    "207": {
      "fn": "MathUtils.difference",
      "jump": "o",
      "offset": [1034, 1151],
      "op": "JUMP",
      "path": "11"
    },
    "208": {
      "fn": "MathUtils._difference",
      "offset": [1365, 1531],
      "op": "JUMPDEST",
      "path": "11"
    },
    "209": {
      "fn": "MathUtils._difference",
      "offset": [1431, 1438],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "211": {
      "fn": "MathUtils._difference",
      "offset": [1459, 1460],
      "op": "DUP2",
      "path": "11"
    },
    "212": {
      "fn": "MathUtils._difference",
      "offset": [1455, 1456],
      "op": "DUP4",
      "path": "11"
    },
    "213": {
      "branch": 4,
      "fn": "MathUtils._difference",
      "offset": [1455, 1460],
      "op": "GT",
      "path": "11"
    },
    "214": {
      "fn": "MathUtils._difference",
      "offset": [1451, 1501],
      "op": "ISZERO",
      "path": "11"
    },
    "215": {
      "fn": "MathUtils._difference",
      "offset": [1451, 1501],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE1"
    },
    "217": {
      "branch": 4,
      "fn": "MathUtils._difference",
      "offset": [1451, 1501],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "fn": "MathUtils._difference",
      "offset": [1484, 1489],
      "op": "DUP1",
      "path": "11",
      "statement": 2
    },
    "220": {
      "fn": "MathUtils._difference",
      "offset": [1484, 1489],
      "op": "DUP3",
      "path": "11"
    },
    "221": {
      "fn": "MathUtils._difference",
      "offset": [1484, 1489],
      "op": "SUB",
      "path": "11"
    },
    "222": {
      "fn": "MathUtils._difference",
      "offset": [1477, 1489],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB9"
    },
    "224": {
      "fn": "MathUtils._difference",
      "offset": [1477, 1489],
      "op": "JUMP",
      "path": "11"
    },
    "225": {
      "fn": "MathUtils._difference",
      "offset": [1451, 1501],
      "op": "JUMPDEST",
      "path": "11"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "fn": "MathUtils._difference",
      "offset": [1518, 1523],
      "op": "SUB",
      "path": "11",
      "statement": 3
    },
    "228": {
      "fn": "MathUtils._difference",
      "offset": [1518, 1523],
      "op": "SWAP1",
      "path": "11"
    },
    "229": {
      "fn": "MathUtils._difference",
      "jump": "o",
      "offset": [1365, 1531],
      "op": "JUMP",
      "path": "11"
    }
  },
  "sha1": "c0714798121b576110ed3db95d751fb156a72222",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\n/**\n * @title MathUtils library\n * @notice A library to be used in conjunction with SafeMath. Contains functions for calculating\n * differences between two uint256.\n */\nlibrary MathUtils {\n    /**\n     * @notice Compares a and b and returns true if the difference between a and b\n     *         is less than 1 or equal to each other.\n     * @param a uint256 to compare with\n     * @param b uint256 to compare with\n     * @return True if the difference between a and b is less than 1 or equal,\n     *         otherwise return false\n     */\n    function within1(uint256 a, uint256 b) external pure returns (bool) {\n        return (_difference(a, b) <= 1);\n    }\n\n    /**\n     * @notice Calculates absolute difference between a and b\n     * @param a uint256 to compare with\n     * @param b uint256 to compare with\n     * @return Difference between a and b\n     */\n    function difference(uint256 a, uint256 b) external pure returns (uint256) {\n        return _difference(a, b);\n    }\n\n    /**\n     * @notice Calculates absolute difference between a and b\n     * @param a uint256 to compare with\n     * @param b uint256 to compare with\n     * @return Difference between a and b\n     */\n    function _difference(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a > b) {\n            return a - b;\n        }\n        return b - a;\n    }\n}\n",
  "sourceMap": "319:1215:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MathUtils.sol",
  "type": "library"
}
